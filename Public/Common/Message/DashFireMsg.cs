// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace DashFireMessage {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class DashFireMsg {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_Ping__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_Ping, global::DashFireMessage.Msg_Ping.Builder> internal__static_DashFireMessage_Msg_Ping__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_Pong__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_Pong, global::DashFireMessage.Msg_Pong.Builder> internal__static_DashFireMessage_Msg_Pong__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Position__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Position, global::DashFireMessage.Position.Builder> internal__static_DashFireMessage_Position__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CR_ShakeHands__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CR_ShakeHands, global::DashFireMessage.Msg_CR_ShakeHands.Builder> internal__static_DashFireMessage_Msg_CR_ShakeHands__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_ShakeHands_Ret__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_ShakeHands_Ret, global::DashFireMessage.Msg_RC_ShakeHands_Ret.Builder> internal__static_DashFireMessage_Msg_RC_ShakeHands_Ret__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CR_Observer__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CR_Observer, global::DashFireMessage.Msg_CR_Observer.Builder> internal__static_DashFireMessage_Msg_CR_Observer__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CRC_Create__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_Create, global::DashFireMessage.Msg_CRC_Create.Builder> internal__static_DashFireMessage_Msg_CRC_Create__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_Enter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_Enter, global::DashFireMessage.Msg_RC_Enter.Builder> internal__static_DashFireMessage_Msg_RC_Enter__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_Disappear__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_Disappear, global::DashFireMessage.Msg_RC_Disappear.Builder> internal__static_DashFireMessage_Msg_RC_Disappear__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_Dead__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_Dead, global::DashFireMessage.Msg_RC_Dead.Builder> internal__static_DashFireMessage_Msg_RC_Dead__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_Revive__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_Revive, global::DashFireMessage.Msg_RC_Revive.Builder> internal__static_DashFireMessage_Msg_RC_Revive__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CRC_Exit__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_Exit, global::DashFireMessage.Msg_CRC_Exit.Builder> internal__static_DashFireMessage_Msg_CRC_Exit__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CRC_MoveStart__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_MoveStart, global::DashFireMessage.Msg_CRC_MoveStart.Builder> internal__static_DashFireMessage_Msg_CRC_MoveStart__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CRC_MoveStop__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_MoveStop, global::DashFireMessage.Msg_CRC_MoveStop.Builder> internal__static_DashFireMessage_Msg_CRC_MoveStop__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_MoveMeetObstacle__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_MoveMeetObstacle, global::DashFireMessage.Msg_RC_MoveMeetObstacle.Builder> internal__static_DashFireMessage_Msg_RC_MoveMeetObstacle__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CRC_Face__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_Face, global::DashFireMessage.Msg_CRC_Face.Builder> internal__static_DashFireMessage_Msg_CRC_Face__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CRC_Action__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_Action, global::DashFireMessage.Msg_CRC_Action.Builder> internal__static_DashFireMessage_Msg_CRC_Action__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CRC_Skill__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_Skill, global::DashFireMessage.Msg_CRC_Skill.Builder> internal__static_DashFireMessage_Msg_CRC_Skill__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CRC_Reload__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_Reload, global::DashFireMessage.Msg_CRC_Reload.Builder> internal__static_DashFireMessage_Msg_CRC_Reload__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CRC_Effect__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_Effect, global::DashFireMessage.Msg_CRC_Effect.Builder> internal__static_DashFireMessage_Msg_CRC_Effect__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CRC_NormalAttackBegin__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_NormalAttackBegin, global::DashFireMessage.Msg_CRC_NormalAttackBegin.Builder> internal__static_DashFireMessage_Msg_CRC_NormalAttackBegin__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CRC_NormalAttackEnd__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_NormalAttackEnd, global::DashFireMessage.Msg_CRC_NormalAttackEnd.Builder> internal__static_DashFireMessage_Msg_CRC_NormalAttackEnd__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_CreateNpc__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_CreateNpc, global::DashFireMessage.Msg_RC_CreateNpc.Builder> internal__static_DashFireMessage_Msg_RC_CreateNpc__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_DestroyNpc__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_DestroyNpc, global::DashFireMessage.Msg_RC_DestroyNpc.Builder> internal__static_DashFireMessage_Msg_RC_DestroyNpc__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_NpcEnter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_NpcEnter, global::DashFireMessage.Msg_RC_NpcEnter.Builder> internal__static_DashFireMessage_Msg_RC_NpcEnter__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_NpcMove__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_NpcMove, global::DashFireMessage.Msg_RC_NpcMove.Builder> internal__static_DashFireMessage_Msg_RC_NpcMove__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_NpcFace__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_NpcFace, global::DashFireMessage.Msg_RC_NpcFace.Builder> internal__static_DashFireMessage_Msg_RC_NpcFace__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_NpcTarget__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_NpcTarget, global::DashFireMessage.Msg_RC_NpcTarget.Builder> internal__static_DashFireMessage_Msg_RC_NpcTarget__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_NpcShoot__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_NpcShoot, global::DashFireMessage.Msg_RC_NpcShoot.Builder> internal__static_DashFireMessage_Msg_RC_NpcShoot__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_NpcSkill__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_NpcSkill, global::DashFireMessage.Msg_RC_NpcSkill.Builder> internal__static_DashFireMessage_Msg_RC_NpcSkill__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_NpcDead__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_NpcDead, global::DashFireMessage.Msg_RC_NpcDead.Builder> internal__static_DashFireMessage_Msg_RC_NpcDead__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_NpcDisappear__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_NpcDisappear, global::DashFireMessage.Msg_RC_NpcDisappear.Builder> internal__static_DashFireMessage_Msg_RC_NpcDisappear__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_Levelup__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_Levelup, global::DashFireMessage.Msg_RC_Levelup.Builder> internal__static_DashFireMessage_Msg_RC_Levelup__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_SyncLevel__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SyncLevel, global::DashFireMessage.Msg_RC_SyncLevel.Builder> internal__static_DashFireMessage_Msg_RC_SyncLevel__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_SyncExpMoney__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SyncExpMoney, global::DashFireMessage.Msg_RC_SyncExpMoney.Builder> internal__static_DashFireMessage_Msg_RC_SyncExpMoney__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_SyncProperty__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SyncProperty, global::DashFireMessage.Msg_RC_SyncProperty.Builder> internal__static_DashFireMessage_Msg_RC_SyncProperty__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_SyncImpactEffect__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SyncImpactEffect, global::DashFireMessage.Msg_RC_SyncImpactEffect.Builder> internal__static_DashFireMessage_Msg_RC_SyncImpactEffect__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_SyncImpactEffect_Property__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SyncImpactEffect.Types.Property, global::DashFireMessage.Msg_RC_SyncImpactEffect.Types.Property.Builder> internal__static_DashFireMessage_Msg_RC_SyncImpactEffect_Property__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_SyncItem__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SyncItem, global::DashFireMessage.Msg_RC_SyncItem.Builder> internal__static_DashFireMessage_Msg_RC_SyncItem__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_SyncItem_ItemInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SyncItem.Types.ItemInfo, global::DashFireMessage.Msg_RC_SyncItem.Types.ItemInfo.Builder> internal__static_DashFireMessage_Msg_RC_SyncItem_ItemInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_ItemChanged__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_ItemChanged, global::DashFireMessage.Msg_RC_ItemChanged.Builder> internal__static_DashFireMessage_Msg_RC_ItemChanged__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_CreateSceneLogic__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_CreateSceneLogic, global::DashFireMessage.Msg_RC_CreateSceneLogic.Builder> internal__static_DashFireMessage_Msg_RC_CreateSceneLogic__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_DestroySceneLogic__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_DestroySceneLogic, global::DashFireMessage.Msg_RC_DestroySceneLogic.Builder> internal__static_DashFireMessage_Msg_RC_DestroySceneLogic__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_SceneLogicImpact__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SceneLogicImpact, global::DashFireMessage.Msg_RC_SceneLogicImpact.Builder> internal__static_DashFireMessage_Msg_RC_SceneLogicImpact__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CRC_PrevWeapon__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_PrevWeapon, global::DashFireMessage.Msg_CRC_PrevWeapon.Builder> internal__static_DashFireMessage_Msg_CRC_PrevWeapon__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CRC_NextWeapon__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_NextWeapon, global::DashFireMessage.Msg_CRC_NextWeapon.Builder> internal__static_DashFireMessage_Msg_CRC_NextWeapon__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_ShootHurt__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_ShootHurt, global::DashFireMessage.Msg_RC_ShootHurt.Builder> internal__static_DashFireMessage_Msg_RC_ShootHurt__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_DebugSpaceInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_DebugSpaceInfo, global::DashFireMessage.Msg_RC_DebugSpaceInfo.Builder> internal__static_DashFireMessage_Msg_RC_DebugSpaceInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_DebugSpaceInfo_DebugSpaceInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_DebugSpaceInfo.Types.DebugSpaceInfo, global::DashFireMessage.Msg_RC_DebugSpaceInfo.Types.DebugSpaceInfo.Builder> internal__static_DashFireMessage_Msg_RC_DebugSpaceInfo_DebugSpaceInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CR_SwitchDebug__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CR_SwitchDebug, global::DashFireMessage.Msg_CR_SwitchDebug.Builder> internal__static_DashFireMessage_Msg_CR_SwitchDebug__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CR_BuyItem__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CR_BuyItem, global::DashFireMessage.Msg_CR_BuyItem.Builder> internal__static_DashFireMessage_Msg_CR_BuyItem__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CR_SellItem__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CR_SellItem, global::DashFireMessage.Msg_CR_SellItem.Builder> internal__static_DashFireMessage_Msg_CR_SellItem__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CR_SwapItem__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CR_SwapItem, global::DashFireMessage.Msg_CR_SwapItem.Builder> internal__static_DashFireMessage_Msg_CR_SwapItem__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CR_DiscardItem__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CR_DiscardItem, global::DashFireMessage.Msg_CR_DiscardItem.Builder> internal__static_DashFireMessage_Msg_CR_DiscardItem__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_PvpFinish__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_PvpFinish, global::DashFireMessage.Msg_RC_PvpFinish.Builder> internal__static_DashFireMessage_Msg_RC_PvpFinish__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_PveFinish__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_PveFinish, global::DashFireMessage.Msg_RC_PveFinish.Builder> internal__static_DashFireMessage_Msg_RC_PveFinish__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_SyncCombatStatisticInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SyncCombatStatisticInfo, global::DashFireMessage.Msg_RC_SyncCombatStatisticInfo.Builder> internal__static_DashFireMessage_Msg_RC_SyncCombatStatisticInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_PvpCombatInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_PvpCombatInfo, global::DashFireMessage.Msg_RC_PvpCombatInfo.Builder> internal__static_DashFireMessage_Msg_RC_PvpCombatInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_SkillShootBarrage__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SkillShootBarrage, global::DashFireMessage.Msg_RC_SkillShootBarrage.Builder> internal__static_DashFireMessage_Msg_RC_SkillShootBarrage__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_WpnShootBarrage__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_WpnShootBarrage, global::DashFireMessage.Msg_RC_WpnShootBarrage.Builder> internal__static_DashFireMessage_Msg_RC_WpnShootBarrage__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CRC_UpdateSkill__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_UpdateSkill, global::DashFireMessage.Msg_CRC_UpdateSkill.Builder> internal__static_DashFireMessage_Msg_CRC_UpdateSkill__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_SkillCreateSceneLogicInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SkillCreateSceneLogicInfo, global::DashFireMessage.Msg_RC_SkillCreateSceneLogicInfo.Builder> internal__static_DashFireMessage_Msg_RC_SkillCreateSceneLogicInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_SceneLogicShootBarrage__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SceneLogicShootBarrage, global::DashFireMessage.Msg_RC_SceneLogicShootBarrage.Builder> internal__static_DashFireMessage_Msg_RC_SceneLogicShootBarrage__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_SendImpactToEntity__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SendImpactToEntity, global::DashFireMessage.Msg_RC_SendImpactToEntity.Builder> internal__static_DashFireMessage_Msg_RC_SendImpactToEntity__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_RemoveImpactFromEntity__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_RemoveImpactFromEntity, global::DashFireMessage.Msg_RC_RemoveImpactFromEntity.Builder> internal__static_DashFireMessage_Msg_RC_RemoveImpactFromEntity__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CRC_BeginSlowDown__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_BeginSlowDown, global::DashFireMessage.Msg_CRC_BeginSlowDown.Builder> internal__static_DashFireMessage_Msg_CRC_BeginSlowDown__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CRC_EndSlowDown__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_EndSlowDown, global::DashFireMessage.Msg_CRC_EndSlowDown.Builder> internal__static_DashFireMessage_Msg_CRC_EndSlowDown__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_CreateLandMark__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_CreateLandMark, global::DashFireMessage.Msg_RC_CreateLandMark.Builder> internal__static_DashFireMessage_Msg_RC_CreateLandMark__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CRC_WeaponStatus__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_WeaponStatus, global::DashFireMessage.Msg_CRC_WeaponStatus.Builder> internal__static_DashFireMessage_Msg_CRC_WeaponStatus__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CRC_MousePos__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_MousePos, global::DashFireMessage.Msg_CRC_MousePos.Builder> internal__static_DashFireMessage_Msg_CRC_MousePos__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_ChangeWeaponSync__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_ChangeWeaponSync, global::DashFireMessage.Msg_RC_ChangeWeaponSync.Builder> internal__static_DashFireMessage_Msg_RC_ChangeWeaponSync__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CR_KeyPress__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CR_KeyPress, global::DashFireMessage.Msg_CR_KeyPress.Builder> internal__static_DashFireMessage_Msg_CR_KeyPress__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CRC_InteractObject__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_InteractObject, global::DashFireMessage.Msg_CRC_InteractObject.Builder> internal__static_DashFireMessage_Msg_CRC_InteractObject__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_ControlObject__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_ControlObject, global::DashFireMessage.Msg_RC_ControlObject.Builder> internal__static_DashFireMessage_Msg_RC_ControlObject__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_RefreshItemSkills__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_RefreshItemSkills, global::DashFireMessage.Msg_RC_RefreshItemSkills.Builder> internal__static_DashFireMessage_Msg_RC_RefreshItemSkills__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_HighlightPrompt__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_HighlightPrompt, global::DashFireMessage.Msg_RC_HighlightPrompt.Builder> internal__static_DashFireMessage_Msg_RC_HighlightPrompt__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_SearchLightMove__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SearchLightMove, global::DashFireMessage.Msg_RC_SearchLightMove.Builder> internal__static_DashFireMessage_Msg_RC_SearchLightMove__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_NotifyEarnMoney__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_NotifyEarnMoney, global::DashFireMessage.Msg_RC_NotifyEarnMoney.Builder> internal__static_DashFireMessage_Msg_RC_NotifyEarnMoney__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CR_QuitClient__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CR_QuitClient, global::DashFireMessage.Msg_CR_QuitClient.Builder> internal__static_DashFireMessage_Msg_CR_QuitClient__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_UserMove__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_UserMove, global::DashFireMessage.Msg_RC_UserMove.Builder> internal__static_DashFireMessage_Msg_RC_UserMove__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_RC_UserFace__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_UserFace, global::DashFireMessage.Msg_RC_UserFace.Builder> internal__static_DashFireMessage_Msg_RC_UserFace__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFireMessage_Msg_CRC_UserFindPath__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_UserFindPath, global::DashFireMessage.Msg_CRC_UserFindPath.Builder> internal__static_DashFireMessage_Msg_CRC_UserFindPath__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static DashFireMsg() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "ChFEYXNoRmlyZU1zZy5wcm90bxIPRGFzaEZpcmVNZXNzYWdlIiIKCE1zZ19Q" + 
          "aW5nEhYKDnNlbmRfcGluZ190aW1lGAEgAigDIjoKCE1zZ19Qb25nEhYKDnNl" + 
          "bmRfcGluZ190aW1lGAEgAigDEhYKDnNlbmRfcG9uZ190aW1lGAIgAigDIisK" + 
          "CFBvc2l0aW9uEgkKAXgYASACKAISCQoBeRgCIAIoAhIJCgF6GAMgAigCIiUK" + 
          "EU1zZ19DUl9TaGFrZUhhbmRzEhAKCGF1dGhfa2V5GAEgAigNIn8KFU1zZ19S" + 
          "Q19TaGFrZUhhbmRzX1JldBJDCgthdXRoX3Jlc3VsdBgBIAIoDjIuLkRhc2hG" + 
          "aXJlTWVzc2FnZS5Nc2dfUkNfU2hha2VIYW5kc19SZXQuUmV0VHlwZSIhCgdS" + 
          "ZXRUeXBlEgsKB1NVQ0NFU1MQABIJCgVFUlJPUhABIhEKD01zZ19DUl9PYnNl" + 
          "cnZlciKOAgoOTXNnX0NSQ19DcmVhdGUSDwoHcm9sZV9pZBgBIAEoBRIWCg5p" + 
          "c19wbGF5ZXJfc2VsZhgCIAEoCBIPCgdoZXJvX2lkGAMgASgFEg8KB2NhbXBf" + 
          "aWQYBCABKAUSKwoIcG9zaXRpb24YBSABKAsyGS5EYXNoRmlyZU1lc3NhZ2Uu" + 
          "UG9zaXRpb24SFQoNZmFjZV9kaXJjdGlvbhgGIAEoAhIPCgdXZWFwb25zGAcg" + 
          "AygFEhQKDHNraWxsX2xldmVscxgIIAMoBRIYChBzY2VuZV9zdGFydF90aW1l" + 
          "GAkgASgDEhAKCG5pY2tuYW1lGAogASgJEhoKEnNob3BfZXF1aXBtZW50c19p" + 
          "ZBgLIAMoBSKlAQoMTXNnX1JDX0VudGVyEg8KB3JvbGVfaWQYASACKAUSDwoH" + 
          "aGVyb19pZBgCIAIoBRIPCgdjYW1wX2lkGAMgAigFEisKCHBvc2l0aW9uGAQg" + 
          "AigLMhkuRGFzaEZpcmVNZXNzYWdlLlBvc2l0aW9uEhAKCGZhY2VfZGlyGAUg" + 
          "AigCEhEKCWlzX21vdmluZxgGIAIoCBIQCghtb3ZlX2RpchgHIAIoAiIjChBN" + 
          "c2dfUkNfRGlzYXBwZWFyEg8KB3JvbGVfaWQYASACKAUiMQoLTXNnX1JDX0Rl" + 
          "YWQSEQoJc2VuZF90aW1lGAEgAigDEg8KB3JvbGVfaWQYAiACKAUingEKDU1z" + 
          "Z19SQ19SZXZpdmUSDwoHcm9sZV9pZBgBIAIoBRIWCg5pc19wbGF5ZXJfc2Vs" + 
          "ZhgCIAIoCBIPCgdoZXJvX2lkGAMgAigFEg8KB2NhbXBfaWQYBCACKAUSKwoI" + 
          "cG9zaXRpb24YBSACKAsyGS5EYXNoRmlyZU1lc3NhZ2UuUG9zaXRpb24SFQoN" + 
          "ZmFjZV9kaXJjdGlvbhgGIAIoAiIfCgxNc2dfQ1JDX0V4aXQSDwoHcm9sZV9p" + 
          "ZBgBIAEoBSKEAQoRTXNnX0NSQ19Nb3ZlU3RhcnQSEQoJYWN0aW9uX2lkGAEg" + 
          "ASgDEhEKCXNlbmRfdGltZRgCIAEoAxIPCgdyb2xlX2lkGAMgASgFEisKCHBv" + 
          "c2l0aW9uGAQgASgLMhkuRGFzaEZpcmVNZXNzYWdlLlBvc2l0aW9uEgsKA2Rp" + 
          "chgFIAIoAiJJChBNc2dfQ1JDX01vdmVTdG9wEhEKCWFjdGlvbl9pZBgBIAEo" + 
          "AxIRCglzZW5kX3RpbWUYAiABKAMSDwoHcm9sZV9pZBgDIAEoBSJjChdNc2df" + 
          "UkNfTW92ZU1lZXRPYnN0YWNsZRIPCgdyb2xlX2lkGAEgAigFEhEKCWN1cl9w" + 
          "b3NfeBgCIAIoAhIRCgljdXJfcG9zX3kYAyACKAISEQoJY3VyX3Bvc196GAQg" + 
          "AigCIjcKDE1zZ19DUkNfRmFjZRIPCgdyb2xlX2lkGAEgASgFEhYKDmZhY2Vf" + 
          "ZGlyZWN0aW9uGAIgAigCIkkKDk1zZ19DUkNfQWN0aW9uEhEKCXNlbmRfdGlt" + 
          "ZRgBIAEoAxIPCgdyb2xlX2lkGAIgASgFEhMKC2FjdGlvbl90eXBlGAMgAigF" + 
          "IvQBCg1Nc2dfQ1JDX1NraWxsEhEKCXNlbmRfdGltZRgBIAEoAxIPCgdyb2xl" + 
          "X2lkGAIgASgFEhAKCHNraWxsX2lkGAMgAigFEhEKCXRhcmdldF9pZBgEIAIo" + 
          "BRItCgp0YXJnZXRfcG9zGAUgAigLMhkuRGFzaEZpcmVNZXNzYWdlLlBvc2l0" + 
          "aW9uEhQKDHRhcmdldF9hbmdsZRgGIAIoAhIPCgdpdGVtX2lkGAcgAigFEiwK" + 
          "CXN0YW5kX3BvcxgIIAEoCzIZLkRhc2hGaXJlTWVzc2FnZS5Qb3NpdGlvbhIW" + 
          "Cg5mYWNlX2RpcmVjdGlvbhgJIAEoAiI0Cg5Nc2dfQ1JDX1JlbG9hZBIRCglz" + 
          "ZW5kX3RpbWUYASABKAMSDwoHcm9sZV9pZBgCIAEoBSJECg5Nc2dfQ1JDX0Vm" + 
          "ZmVjdBIRCglzZW5kX3RpbWUYASABKAMSDwoHcm9sZV9pZBgCIAEoBRIOCgZl" + 
          "ZmZlY3QYAyACKAUiswEKGU1zZ19DUkNfTm9ybWFsQXR0YWNrQmVnaW4SEQoJ" + 
          "c2VuZF90aW1lGAEgASgDEg8KB3JvbGVfaWQYAiABKAUSLQoKdGFyZ2V0X3Bv" + 
          "cxgDIAEoCzIZLkRhc2hGaXJlTWVzc2FnZS5Qb3NpdGlvbhIuCgtzaG9vdGVy" + 
          "X3BvcxgEIAEoCzIZLkRhc2hGaXJlTWVzc2FnZS5Qb3NpdGlvbhITCgtzaG9v" + 
          "dGVyX2RpchgFIAEoAiI9ChdNc2dfQ1JDX05vcm1hbEF0dGFja0VuZBIRCglz" + 
          "ZW5kX3RpbWUYASABKAMSDwoHcm9sZV9pZBgCIAEoBSKrAQoQTXNnX1JDX0Ny" + 
          "ZWF0ZU5wYxIOCgZucGNfaWQYASACKAUSDwoHdW5pdF9pZBgCIAIoBRIqCgdj" + 
          "dXJfcG9zGAMgAigLMhkuRGFzaEZpcmVNZXNzYWdlLlBvc2l0aW9uEhYKDmZh" + 
          "Y2VfZGlyZWN0aW9uGAQgAigCEg8KB2xpbmtfaWQYBSACKAUSDwoHY2FtcF9p" + 
          "ZBgGIAEoBRIQCghvd25lcl9pZBgHIAEoBSIjChFNc2dfUkNfRGVzdHJveU5w" + 
          "YxIOCgZucGNfaWQYASACKAUicgoPTXNnX1JDX05wY0VudGVyEg4KBm5wY19p" + 
          "ZBgBIAIoBRIRCgljdXJfcG9zX3gYAiACKAISEQoJY3VyX3Bvc195GAMgAigC" + 
          "EhEKCWN1cl9wb3NfehgEIAIoAhIWCg5mYWNlX2RpcmVjdGlvbhgFIAIoAiKP" + 
          "AgoOTXNnX1JDX05wY01vdmUSEQoJc2VuZF90aW1lGAEgAigDEg4KBm5wY19p" + 
          "ZBgCIAIoBRIRCgljdXJfcG9zX3gYAyACKAISEQoJY3VyX3Bvc195GAQgAigC" + 
          "EhEKCWN1cl9wb3NfehgFIAIoAhIRCglpc19tb3ZpbmcYBiACKAgSFgoObW92" + 
          "ZV9kaXJlY3Rpb24YByABKAISFgoOZmFjZV9kaXJlY3Rpb24YCCABKAISFAoM" + 
          "dGFyZ2V0X3Bvc194GAkgASgCEhQKDHRhcmdldF9wb3NfeRgKIAEoAhIUCgx0" + 
          "YXJnZXRfcG9zX3oYCyABKAISHAoUdmVsb2NpdHlfY29lZmZpY2llbnQYDCAB" + 
          "KAIiOAoOTXNnX1JDX05wY0ZhY2USDgoGbnBjX2lkGAEgASgFEhYKDmZhY2Vf" + 
          "ZGlyZWN0aW9uGAIgAigCIjUKEE1zZ19SQ19OcGNUYXJnZXQSDgoGbnBjX2lk" + 
          "GAEgAigFEhEKCXRhcmdldF9pZBgCIAIoBSJHCg9Nc2dfUkNfTnBjU2hvb3QS" + 
          "EQoJc2VuZF90aW1lGAEgAigDEg4KBm5wY19pZBgCIAIoBRIRCgl0YXJnZXRf" + 
          "aWQYAyACKAUi5AEKD01zZ19SQ19OcGNTa2lsbBIRCglzZW5kX3RpbWUYASAC" + 
          "KAMSDgoGbnBjX2lkGAIgAigFEhAKCHNraWxsX2lkGAMgAigFEhEKCXRhcmdl" + 
          "dF9pZBgEIAIoBRItCgp0YXJnZXRfcG9zGAUgAigLMhkuRGFzaEZpcmVNZXNz" + 
          "YWdlLlBvc2l0aW9uEhQKDHRhcmdldF9hbmdsZRgGIAIoAhIsCglzdGFuZF9w" + 
          "b3MYByACKAsyGS5EYXNoRmlyZU1lc3NhZ2UuUG9zaXRpb24SFgoOZmFjZV9k" + 
          "aXJlY3Rpb24YCCACKAIiMwoOTXNnX1JDX05wY0RlYWQSEQoJc2VuZF90aW1l" + 
          "GAEgAigDEg4KBm5wY19pZBgCIAIoBSIlChNNc2dfUkNfTnBjRGlzYXBwZWFy" + 
          "Eg4KBm5wY19pZBgBIAIoBSIwCg5Nc2dfUkNfTGV2ZWx1cBIPCgdyb2xlX2lk" + 
          "GAEgAigFEg0KBWxldmVsGAIgAigFIjIKEE1zZ19SQ19TeW5jTGV2ZWwSDwoH" + 
          "cm9sZV9pZBgBIAIoBRINCgVsZXZlbBgCIAIoBSJXChNNc2dfUkNfU3luY0V4" + 
          "cE1vbmV5Eg8KB3JvbGVfaWQYASACKAUSCwoDZXhwGAIgAigFEg0KBW1vbmV5" + 
          "GAMgAigFEhMKC3RvdGFsX21vbmV5GAQgAigFIo0BChNNc2dfUkNfU3luY1By" + 
          "b3BlcnR5Eg8KB3JvbGVfaWQYASACKAUSCgoCaHAYAiACKAUSCgoCbnAYAyAC" + 
          "KAUSDQoFc3RhdGUYBCACKAUSEgoKZW5lcmd5X251bRgFIAEoBRISCgpidWxs" + 
          "ZXRfbnVtGAYgASgFEhYKDmJ1bGxldF9udW1fbWF4GAcgASgFIpkCChdNc2df" + 
          "UkNfU3luY0ltcGFjdEVmZmVjdBIPCgdyb2xlX2lkGAEgAigFEhMKC2F0dGFj" + 
          "a2VyX2lkGAIgAigFEhUKDWF0dGFja2VyX3R5cGUYAyACKAUSEQoJaXNfa2ls" + 
          "bGVyGAQgAigIEkQKCXByb3BlcnR5cxgFIAMoCzIxLkRhc2hGaXJlTWVzc2Fn" + 
          "ZS5Nc2dfUkNfU3luY0ltcGFjdEVmZmVjdC5Qcm9wZXJ0eRIsCglzdGFuZF9w" + 
          "b3MYBiACKAsyGS5EYXNoRmlyZU1lc3NhZ2UuUG9zaXRpb24aOgoIUHJvcGVy" + 
          "dHkSFgoOcHJvcGVydHlfaW5kZXgYASACKAUSFgoOcHJvcGVydHlfdmFsdWUY" + 
          "AiACKAUinQEKD01zZ19SQ19TeW5jSXRlbRIPCgdyb2xlX2lkGAEgAigFEjgK" + 
          "BWl0ZW1zGAIgAygLMikuRGFzaEZpcmVNZXNzYWdlLk1zZ19SQ19TeW5jSXRl" + 
          "bS5JdGVtSW5mbxo/CghJdGVtSW5mbxIQCghpdGVtX3BvcxgBIAIoBRIPCgdp" + 
          "dGVtX2lkGAIgAigFEhAKCGl0ZW1fbnVtGAMgAigFIloKEk1zZ19SQ19JdGVt" + 
          "Q2hhbmdlZBIPCgdyb2xlX2lkGAEgAigFEhAKCGl0ZW1fcG9zGAIgAigFEg8K" + 
          "B2l0ZW1faWQYAyACKAUSEAoIaXRlbV9udW0YBCACKAUiTQoXTXNnX1JDX0Ny" + 
          "ZWF0ZVNjZW5lTG9naWMSCgoCaWQYASACKAUSEwoLY3JlYXRlX3RpbWUYAiAC" + 
          "KAMSEQoJY29uZmlnX2lkGAMgAigFIiYKGE1zZ19SQ19EZXN0cm95U2NlbmVM" + 
          "b2dpYxIKCgJpZBgBIAIoBSI2ChdNc2dfUkNfU2NlbmVMb2dpY0ltcGFjdBIK" + 
          "CgJpZBgBIAIoBRIPCgdyb2xlX2lkGAIgAygFIiUKEk1zZ19DUkNfUHJldldl" + 
          "YXBvbhIPCgdyb2xlX2lkGAEgASgFIiUKEk1zZ19DUkNfTmV4dFdlYXBvbhIP" + 
          "Cgdyb2xlX2lkGAEgASgFIpEBChBNc2dfUkNfU2hvb3RIdXJ0EhMKC2F0dGFj" + 
          "a2VyX2lkGAEgAigFEhUKDWF0dGFja2VyX3R5cGUYAiACKAUSEQoJaXNfa2ls" + 
          "bGVyGAMgAigIEhMKC2lzX2NyaXRpY2FsGAQgAigIEgoKAmhwGAUgAigFEgoK" + 
          "Am5wGAYgAigFEhEKCXRhcmdhdF9pZBgHIAIoBSLXAQoVTXNnX1JDX0RlYnVn" + 
          "U3BhY2VJbmZvEkoKC3NwYWNlX2luZm9zGAEgAygLMjUuRGFzaEZpcmVNZXNz" + 
          "YWdlLk1zZ19SQ19EZWJ1Z1NwYWNlSW5mby5EZWJ1Z1NwYWNlSW5mbxpyCg5E" + 
          "ZWJ1Z1NwYWNlSW5mbxIOCgZvYmpfaWQYASACKAUSEQoJaXNfcGxheWVyGAIg" + 
          "AigIEg0KBXBvc194GAMgAigCEg0KBXBvc195GAQgAigCEg0KBXBvc196GAUg" + 
          "AigCEhAKCGZhY2VfZGlyGAYgAigCIiYKEk1zZ19DUl9Td2l0Y2hEZWJ1ZxIQ" + 
          "Cghpc19kZWJ1ZxgBIAIoCCIhCg5Nc2dfQ1JfQnV5SXRlbRIPCgdpdGVtX2lk" + 
          "GAEgAigFIiMKD01zZ19DUl9TZWxsSXRlbRIQCghpdGVtX3BvcxgBIAIoBSI5" + 
          "Cg9Nc2dfQ1JfU3dhcEl0ZW0SEgoKaXRlbV9wb3NfMRgBIAIoBRISCgppdGVt" + 
          "X3Bvc18yGAIgAigFIiYKEk1zZ19DUl9EaXNjYXJkSXRlbRIQCghpdGVtX3Bv" + 
          "cxgBIAIoBSInChBNc2dfUkNfUHZwRmluaXNoEhMKC3dpbl9jYW1wX2lkGAEg" + 
          "AigFIiIKEE1zZ19SQ19QdmVGaW5pc2gSDgoGaXNfd2luGAEgAigIIpABCh5N" + 
          "c2dfUkNfU3luY0NvbWJhdFN0YXRpc3RpY0luZm8SDwoHcm9sZV9pZBgBIAIo" + 
          "BRIXCg9raWxsX2hlcm9fY291bnQYAiACKAUSGAoQYXNzaXRfa2lsbF9jb3Vu" + 
          "dBgDIAIoBRIWCg5raWxsX25wY19jb3VudBgEIAIoBRISCgpkZWFkX2NvdW50" + 
          "GAUgAigFIsMBChRNc2dfUkNfUHZwQ29tYmF0SW5mbxIgChhraWxsX2hlcm9f" + 
          "Y291bnRfZm9yX2JsdWUYASACKAUSHwoXa2lsbF9oZXJvX2NvdW50X2Zvcl9y" + 
          "ZWQYAiACKAUSGgoSbGlua19pZF9mb3Jfa2lsbGVyGAMgAigFEhoKEmxpbmtf" + 
          "aWRfZm9yX2tpbGxlZBgEIAIoBRIXCg9raWxsZXJfbmlja25hbWUYBSACKAkS" + 
          "FwoPa2lsbGVkX25pY2tuYW1lGAYgAigJIrkCChhNc2dfUkNfU2tpbGxTaG9v" + 
          "dEJhcnJhZ2USEgoKc2hvb3RfdGltZRgBIAIoAxIPCgdyb2xlX2lkGAIgAigF" + 
          "EhAKCHNraWxsX2lkGAMgAigFEhIKCmJhcnJhZ2VfaWQYBCACKAUSFwoPc2hv" + 
          "b3RfZGlyZWN0aW9uGAUgAigCEiwKCXNob290X3BvcxgGIAIoCzIZLkRhc2hG" + 
          "aXJlTWVzc2FnZS5Qb3NpdGlvbhIWCg50YXJnZXRfcm9sZV9pZBgHIAIoBRIs" + 
          "CglzdGFuZF9wb3MYCCACKAsyGS5EYXNoRmlyZU1lc3NhZ2UuUG9zaXRpb24S" + 
          "FgoOZmFjZV9kaXJlY3Rpb24YCSACKAISLQoKdGFyZ2V0X3BvcxgKIAIoCzIZ" + 
          "LkRhc2hGaXJlTWVzc2FnZS5Qb3NpdGlvbiK8AQoWTXNnX1JDX1dwblNob290" + 
          "QmFycmFnZRISCgpzaG9vdF90aW1lGAEgAigDEg8KB3JvbGVfaWQYAiACKAUS" + 
          "EQoJdGFyZ2V0X2lkGAMgAigFEhIKCmJhcnJhZ2VfaWQYBCACKAUSFwoPc2hv" + 
          "b3RfZGlyZWN0aW9uGAUgAigCEhMKC3Nob290X3Bvc194GAYgAigCEhMKC3No" + 
          "b290X3Bvc195GAcgAigCEhMKC3Nob290X3Bvc196GAggAigCIjsKE01zZ19D" + 
          "UkNfVXBkYXRlU2tpbGwSDwoHcm9sZV9pZBgBIAIoBRITCgtza2lsbF9pbmRl" + 
          "eBgCIAIoBSKzAQogTXNnX1JDX1NraWxsQ3JlYXRlU2NlbmVMb2dpY0luZm8S" + 
          "DwoHcm9sZV9pZBgBIAIoBRIQCghza2lsbF9pZBgCIAIoBRIZChFzY2VuZWxv" + 
          "Z2ljaW5mb19pZBgDIAIoBRIeChZzY2VuZWxvZ2ljaW5mb19sb2dpY2lkGAQg" + 
          "AigFEh0KFXNjZW5lbG9naWNpbmZvX2RhdGFpZBgFIAIoBRISCgpiYXJyYWdl" + 
          "X2lkGAYgASgFIscCCh1Nc2dfUkNfU2NlbmVMb2dpY1Nob290QmFycmFnZRIS" + 
          "CgpzaG9vdF90aW1lGAEgAigDEg8KB3JvbGVfaWQYAiACKAUSGQoRc2NlbmVs" + 
          "b2dpY2luZm9faWQYAyACKAUSEgoKYmFycmFnZV9pZBgEIAIoBRIXCg9zaG9v" + 
          "dF9kaXJlY3Rpb24YBSACKAISLAoJc2hvb3RfcG9zGAYgAigLMhkuRGFzaEZp" + 
          "cmVNZXNzYWdlLlBvc2l0aW9uEhYKDnRhcmdldF9yb2xlX2lkGAcgAigFEiwK" + 
          "CXN0YW5kX3BvcxgIIAIoCzIZLkRhc2hGaXJlTWVzc2FnZS5Qb3NpdGlvbhIW" + 
          "Cg5mYWNlX2RpcmVjdGlvbhgJIAIoAhItCgp0YXJnZXRfcG9zGAogAigLMhku" + 
          "RGFzaEZpcmVNZXNzYWdlLlBvc2l0aW9uIu0BChlNc2dfUkNfU2VuZEltcGFj" + 
          "dFRvRW50aXR5EhEKCXNlbmRlcl9pZBgBIAIoBRITCgtzZW5kZXJfdHlwZRgC" + 
          "IAIoBRIRCgl0YXJnZXRfaWQYAyACKAUSEQoJaW1wYWN0X2lkGAQgAigFEhAK" + 
          "CHNraWxsX2lkGAUgAigFEi0KCnNlbmRlcl9wb3MYBiACKAsyGS5EYXNoRmly" + 
          "ZU1lc3NhZ2UuUG9zaXRpb24SEgoKc3RhcnRfdGltZRgHIAIoAxItCgp0YXJn" + 
          "ZXRfcG9zGAggASgLMhkuRGFzaEZpcmVNZXNzYWdlLlBvc2l0aW9uIkMKHU1z" + 
          "Z19SQ19SZW1vdmVJbXBhY3RGcm9tRW50aXR5Eg8KB3JvbGVfaWQYASACKAUS" + 
          "EQoJaW1wYWN0X2lkGAIgAigFIk4KFU1zZ19DUkNfQmVnaW5TbG93RG93bhIR" + 
          "CglhY3Rpb25faWQYASABKAMSEQoJc2VuZF90aW1lGAIgASgDEg8KB3JvbGVf" + 
          "aWQYAyABKAUiTAoTTXNnX0NSQ19FbmRTbG93RG93bhIRCglhY3Rpb25faWQY" + 
          "ASABKAMSEQoJc2VuZF90aW1lGAIgASgDEg8KB3JvbGVfaWQYAyABKAUiqwEK" + 
          "FU1zZ19SQ19DcmVhdGVMYW5kTWFyaxIPCgdyb2xlX2lkGAEgAigFEhAKCHNr" + 
          "aWxsX2lkGAIgASgFEhAKCG1hcmtfbnVtGAMgAigFEjAKDW1hcmtfcG9zX2xp" + 
          "c3QYBCADKAsyGS5EYXNoRmlyZU1lc3NhZ2UuUG9zaXRpb24SFgoObWFya19s" + 
          "aWZlX3RpbWUYBSADKAISEwoLbWFya19lZmZlY3QYBiACKAkiTQoUTXNnX0NS" + 
          "Q19XZWFwb25TdGF0dXMSEQoJYWN0aW9uX2lkGAEgASgDEhEKCXNlbmRfdGlt" + 
          "ZRgCIAEoAxIPCgdyb2xlX2lkGAMgASgFImQKEE1zZ19DUkNfTW91c2VQb3MS" + 
          "DwoHcm9sZV9pZBgBIAEoBRIRCglzZW5kX3RpbWUYAiABKAMSLAoJbW91c2Vf" + 
          "cG9zGAogAigLMhkuRGFzaEZpcmVNZXNzYWdlLlBvc2l0aW9uIj0KF01zZ19S" + 
          "Q19DaGFuZ2VXZWFwb25TeW5jEg8KB3JvbGVfaWQYASACKAUSEQoJd2VhcG9u" + 
          "X2lkGAIgAigFIjIKD01zZ19DUl9LZXlQcmVzcxILCgNrZXkYASACKAkSEgoK" + 
          "aXNfcHJlc3NlZBgCIAIoCCJDChZNc2dfQ1JDX0ludGVyYWN0T2JqZWN0EhQK" + 
          "DGluaXRpYXRvcl9pZBgBIAEoBRITCgtyZWNlaXZlcl9pZBgCIAIoBSJgChRN" + 
          "c2dfUkNfQ29udHJvbE9iamVjdBIVCg1jb250cm9sbGVyX2lkGAEgAigFEhUK" + 
          "DWNvbnRyb2xsZWRfaWQYAiACKAUSGgoSY29udHJvbF9vcl9yZWxlYXNlGAMg" + 
          "AigIIisKGE1zZ19SQ19SZWZyZXNoSXRlbVNraWxscxIPCgdyb2xlX2lkGAEg" + 
          "AigFIjsKFk1zZ19SQ19IaWdobGlnaHRQcm9tcHQSDwoHZGljdF9pZBgBIAIo" + 
          "BRIQCghhcmd1bWVudBgCIAMoCSLVAQoWTXNnX1JDX1NlYXJjaExpZ2h0TW92" + 
          "ZRIKCgJpZBgBIAIoBRISCgpzdGFydF90aW1lGAIgAigDEhEKCWN1cl9wb3Nf" + 
          "eBgDIAIoAhIRCgljdXJfcG9zX3kYBCACKAISEQoJY3VyX3Bvc196GAUgAigC" + 
          "Eg0KBXNwZWVkGAYgAigCEhEKCXRhcmdldF9pZBgHIAEoBRIUCgx0YXJnZXRf" + 
          "cG9zX3gYCCABKAISFAoMdGFyZ2V0X3Bvc195GAkgASgCEhQKDHRhcmdldF9w" + 
          "b3NfehgKIAEoAiIzChZNc2dfUkNfTm90aWZ5RWFybk1vbmV5EgoKAmlkGAEg" + 
          "AigFEg0KBW1vbmV5GAIgAigFIhMKEU1zZ19DUl9RdWl0Q2xpZW50IpECCg9N" + 
          "c2dfUkNfVXNlck1vdmUSEQoJc2VuZF90aW1lGAEgAigDEg8KB3JvbGVfaWQY" + 
          "AiACKAUSEQoJY3VyX3Bvc194GAMgAigCEhEKCWN1cl9wb3NfeRgEIAIoAhIR" + 
          "CgljdXJfcG9zX3oYBSACKAISEQoJaXNfbW92aW5nGAYgAigIEhYKDm1vdmVf" + 
          "ZGlyZWN0aW9uGAcgASgCEhYKDmZhY2VfZGlyZWN0aW9uGAggASgCEhQKDHRh" + 
          "cmdldF9wb3NfeBgJIAEoAhIUCgx0YXJnZXRfcG9zX3kYCiABKAISFAoMdGFy" + 
          "Z2V0X3Bvc196GAsgASgCEhwKFHZlbG9jaXR5X2NvZWZmaWNpZW50GAwgASgC" + 
          "IjoKD01zZ19SQ19Vc2VyRmFjZRIPCgdyb2xlX2lkGAEgAigFEhYKDmZhY2Vf" + 
          "ZGlyZWN0aW9uGAIgAigCInwKFE1zZ19DUkNfVXNlckZpbmRQYXRoEhEKCXNl" + 
          "bmRfdGltZRgBIAEoAxIPCgdyb2xlX2lkGAIgASgFEhQKDHRhcmdldF9wb3Nf" + 
          "eBgDIAEoAhIUCgx0YXJnZXRfcG9zX3kYBCABKAISFAoMdGFyZ2V0X3Bvc196" + 
          "GAUgASgC");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_DashFireMessage_Msg_Ping__Descriptor = Descriptor.MessageTypes[0];
        internal__static_DashFireMessage_Msg_Ping__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_Ping, global::DashFireMessage.Msg_Ping.Builder>(internal__static_DashFireMessage_Msg_Ping__Descriptor,
                new string[] { "SendPingTime", });
        internal__static_DashFireMessage_Msg_Pong__Descriptor = Descriptor.MessageTypes[1];
        internal__static_DashFireMessage_Msg_Pong__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_Pong, global::DashFireMessage.Msg_Pong.Builder>(internal__static_DashFireMessage_Msg_Pong__Descriptor,
                new string[] { "SendPingTime", "SendPongTime", });
        internal__static_DashFireMessage_Position__Descriptor = Descriptor.MessageTypes[2];
        internal__static_DashFireMessage_Position__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Position, global::DashFireMessage.Position.Builder>(internal__static_DashFireMessage_Position__Descriptor,
                new string[] { "X", "Y", "Z", });
        internal__static_DashFireMessage_Msg_CR_ShakeHands__Descriptor = Descriptor.MessageTypes[3];
        internal__static_DashFireMessage_Msg_CR_ShakeHands__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CR_ShakeHands, global::DashFireMessage.Msg_CR_ShakeHands.Builder>(internal__static_DashFireMessage_Msg_CR_ShakeHands__Descriptor,
                new string[] { "AuthKey", });
        internal__static_DashFireMessage_Msg_RC_ShakeHands_Ret__Descriptor = Descriptor.MessageTypes[4];
        internal__static_DashFireMessage_Msg_RC_ShakeHands_Ret__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_ShakeHands_Ret, global::DashFireMessage.Msg_RC_ShakeHands_Ret.Builder>(internal__static_DashFireMessage_Msg_RC_ShakeHands_Ret__Descriptor,
                new string[] { "AuthResult", });
        internal__static_DashFireMessage_Msg_CR_Observer__Descriptor = Descriptor.MessageTypes[5];
        internal__static_DashFireMessage_Msg_CR_Observer__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CR_Observer, global::DashFireMessage.Msg_CR_Observer.Builder>(internal__static_DashFireMessage_Msg_CR_Observer__Descriptor,
                new string[] { });
        internal__static_DashFireMessage_Msg_CRC_Create__Descriptor = Descriptor.MessageTypes[6];
        internal__static_DashFireMessage_Msg_CRC_Create__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_Create, global::DashFireMessage.Msg_CRC_Create.Builder>(internal__static_DashFireMessage_Msg_CRC_Create__Descriptor,
                new string[] { "RoleId", "IsPlayerSelf", "HeroId", "CampId", "Position", "FaceDirction", "Weapons", "SkillLevels", "SceneStartTime", "Nickname", "ShopEquipmentsId", });
        internal__static_DashFireMessage_Msg_RC_Enter__Descriptor = Descriptor.MessageTypes[7];
        internal__static_DashFireMessage_Msg_RC_Enter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_Enter, global::DashFireMessage.Msg_RC_Enter.Builder>(internal__static_DashFireMessage_Msg_RC_Enter__Descriptor,
                new string[] { "RoleId", "HeroId", "CampId", "Position", "FaceDir", "IsMoving", "MoveDir", });
        internal__static_DashFireMessage_Msg_RC_Disappear__Descriptor = Descriptor.MessageTypes[8];
        internal__static_DashFireMessage_Msg_RC_Disappear__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_Disappear, global::DashFireMessage.Msg_RC_Disappear.Builder>(internal__static_DashFireMessage_Msg_RC_Disappear__Descriptor,
                new string[] { "RoleId", });
        internal__static_DashFireMessage_Msg_RC_Dead__Descriptor = Descriptor.MessageTypes[9];
        internal__static_DashFireMessage_Msg_RC_Dead__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_Dead, global::DashFireMessage.Msg_RC_Dead.Builder>(internal__static_DashFireMessage_Msg_RC_Dead__Descriptor,
                new string[] { "SendTime", "RoleId", });
        internal__static_DashFireMessage_Msg_RC_Revive__Descriptor = Descriptor.MessageTypes[10];
        internal__static_DashFireMessage_Msg_RC_Revive__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_Revive, global::DashFireMessage.Msg_RC_Revive.Builder>(internal__static_DashFireMessage_Msg_RC_Revive__Descriptor,
                new string[] { "RoleId", "IsPlayerSelf", "HeroId", "CampId", "Position", "FaceDirction", });
        internal__static_DashFireMessage_Msg_CRC_Exit__Descriptor = Descriptor.MessageTypes[11];
        internal__static_DashFireMessage_Msg_CRC_Exit__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_Exit, global::DashFireMessage.Msg_CRC_Exit.Builder>(internal__static_DashFireMessage_Msg_CRC_Exit__Descriptor,
                new string[] { "RoleId", });
        internal__static_DashFireMessage_Msg_CRC_MoveStart__Descriptor = Descriptor.MessageTypes[12];
        internal__static_DashFireMessage_Msg_CRC_MoveStart__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_MoveStart, global::DashFireMessage.Msg_CRC_MoveStart.Builder>(internal__static_DashFireMessage_Msg_CRC_MoveStart__Descriptor,
                new string[] { "ActionId", "SendTime", "RoleId", "Position", "Dir", });
        internal__static_DashFireMessage_Msg_CRC_MoveStop__Descriptor = Descriptor.MessageTypes[13];
        internal__static_DashFireMessage_Msg_CRC_MoveStop__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_MoveStop, global::DashFireMessage.Msg_CRC_MoveStop.Builder>(internal__static_DashFireMessage_Msg_CRC_MoveStop__Descriptor,
                new string[] { "ActionId", "SendTime", "RoleId", });
        internal__static_DashFireMessage_Msg_RC_MoveMeetObstacle__Descriptor = Descriptor.MessageTypes[14];
        internal__static_DashFireMessage_Msg_RC_MoveMeetObstacle__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_MoveMeetObstacle, global::DashFireMessage.Msg_RC_MoveMeetObstacle.Builder>(internal__static_DashFireMessage_Msg_RC_MoveMeetObstacle__Descriptor,
                new string[] { "RoleId", "CurPosX", "CurPosY", "CurPosZ", });
        internal__static_DashFireMessage_Msg_CRC_Face__Descriptor = Descriptor.MessageTypes[15];
        internal__static_DashFireMessage_Msg_CRC_Face__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_Face, global::DashFireMessage.Msg_CRC_Face.Builder>(internal__static_DashFireMessage_Msg_CRC_Face__Descriptor,
                new string[] { "RoleId", "FaceDirection", });
        internal__static_DashFireMessage_Msg_CRC_Action__Descriptor = Descriptor.MessageTypes[16];
        internal__static_DashFireMessage_Msg_CRC_Action__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_Action, global::DashFireMessage.Msg_CRC_Action.Builder>(internal__static_DashFireMessage_Msg_CRC_Action__Descriptor,
                new string[] { "SendTime", "RoleId", "ActionType", });
        internal__static_DashFireMessage_Msg_CRC_Skill__Descriptor = Descriptor.MessageTypes[17];
        internal__static_DashFireMessage_Msg_CRC_Skill__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_Skill, global::DashFireMessage.Msg_CRC_Skill.Builder>(internal__static_DashFireMessage_Msg_CRC_Skill__Descriptor,
                new string[] { "SendTime", "RoleId", "SkillId", "TargetId", "TargetPos", "TargetAngle", "ItemId", "StandPos", "FaceDirection", });
        internal__static_DashFireMessage_Msg_CRC_Reload__Descriptor = Descriptor.MessageTypes[18];
        internal__static_DashFireMessage_Msg_CRC_Reload__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_Reload, global::DashFireMessage.Msg_CRC_Reload.Builder>(internal__static_DashFireMessage_Msg_CRC_Reload__Descriptor,
                new string[] { "SendTime", "RoleId", });
        internal__static_DashFireMessage_Msg_CRC_Effect__Descriptor = Descriptor.MessageTypes[19];
        internal__static_DashFireMessage_Msg_CRC_Effect__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_Effect, global::DashFireMessage.Msg_CRC_Effect.Builder>(internal__static_DashFireMessage_Msg_CRC_Effect__Descriptor,
                new string[] { "SendTime", "RoleId", "Effect", });
        internal__static_DashFireMessage_Msg_CRC_NormalAttackBegin__Descriptor = Descriptor.MessageTypes[20];
        internal__static_DashFireMessage_Msg_CRC_NormalAttackBegin__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_NormalAttackBegin, global::DashFireMessage.Msg_CRC_NormalAttackBegin.Builder>(internal__static_DashFireMessage_Msg_CRC_NormalAttackBegin__Descriptor,
                new string[] { "SendTime", "RoleId", "TargetPos", "ShooterPos", "ShooterDir", });
        internal__static_DashFireMessage_Msg_CRC_NormalAttackEnd__Descriptor = Descriptor.MessageTypes[21];
        internal__static_DashFireMessage_Msg_CRC_NormalAttackEnd__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_NormalAttackEnd, global::DashFireMessage.Msg_CRC_NormalAttackEnd.Builder>(internal__static_DashFireMessage_Msg_CRC_NormalAttackEnd__Descriptor,
                new string[] { "SendTime", "RoleId", });
        internal__static_DashFireMessage_Msg_RC_CreateNpc__Descriptor = Descriptor.MessageTypes[22];
        internal__static_DashFireMessage_Msg_RC_CreateNpc__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_CreateNpc, global::DashFireMessage.Msg_RC_CreateNpc.Builder>(internal__static_DashFireMessage_Msg_RC_CreateNpc__Descriptor,
                new string[] { "NpcId", "UnitId", "CurPos", "FaceDirection", "LinkId", "CampId", "OwnerId", });
        internal__static_DashFireMessage_Msg_RC_DestroyNpc__Descriptor = Descriptor.MessageTypes[23];
        internal__static_DashFireMessage_Msg_RC_DestroyNpc__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_DestroyNpc, global::DashFireMessage.Msg_RC_DestroyNpc.Builder>(internal__static_DashFireMessage_Msg_RC_DestroyNpc__Descriptor,
                new string[] { "NpcId", });
        internal__static_DashFireMessage_Msg_RC_NpcEnter__Descriptor = Descriptor.MessageTypes[24];
        internal__static_DashFireMessage_Msg_RC_NpcEnter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_NpcEnter, global::DashFireMessage.Msg_RC_NpcEnter.Builder>(internal__static_DashFireMessage_Msg_RC_NpcEnter__Descriptor,
                new string[] { "NpcId", "CurPosX", "CurPosY", "CurPosZ", "FaceDirection", });
        internal__static_DashFireMessage_Msg_RC_NpcMove__Descriptor = Descriptor.MessageTypes[25];
        internal__static_DashFireMessage_Msg_RC_NpcMove__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_NpcMove, global::DashFireMessage.Msg_RC_NpcMove.Builder>(internal__static_DashFireMessage_Msg_RC_NpcMove__Descriptor,
                new string[] { "SendTime", "NpcId", "CurPosX", "CurPosY", "CurPosZ", "IsMoving", "MoveDirection", "FaceDirection", "TargetPosX", "TargetPosY", "TargetPosZ", "VelocityCoefficient", });
        internal__static_DashFireMessage_Msg_RC_NpcFace__Descriptor = Descriptor.MessageTypes[26];
        internal__static_DashFireMessage_Msg_RC_NpcFace__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_NpcFace, global::DashFireMessage.Msg_RC_NpcFace.Builder>(internal__static_DashFireMessage_Msg_RC_NpcFace__Descriptor,
                new string[] { "NpcId", "FaceDirection", });
        internal__static_DashFireMessage_Msg_RC_NpcTarget__Descriptor = Descriptor.MessageTypes[27];
        internal__static_DashFireMessage_Msg_RC_NpcTarget__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_NpcTarget, global::DashFireMessage.Msg_RC_NpcTarget.Builder>(internal__static_DashFireMessage_Msg_RC_NpcTarget__Descriptor,
                new string[] { "NpcId", "TargetId", });
        internal__static_DashFireMessage_Msg_RC_NpcShoot__Descriptor = Descriptor.MessageTypes[28];
        internal__static_DashFireMessage_Msg_RC_NpcShoot__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_NpcShoot, global::DashFireMessage.Msg_RC_NpcShoot.Builder>(internal__static_DashFireMessage_Msg_RC_NpcShoot__Descriptor,
                new string[] { "SendTime", "NpcId", "TargetId", });
        internal__static_DashFireMessage_Msg_RC_NpcSkill__Descriptor = Descriptor.MessageTypes[29];
        internal__static_DashFireMessage_Msg_RC_NpcSkill__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_NpcSkill, global::DashFireMessage.Msg_RC_NpcSkill.Builder>(internal__static_DashFireMessage_Msg_RC_NpcSkill__Descriptor,
                new string[] { "SendTime", "NpcId", "SkillId", "TargetId", "TargetPos", "TargetAngle", "StandPos", "FaceDirection", });
        internal__static_DashFireMessage_Msg_RC_NpcDead__Descriptor = Descriptor.MessageTypes[30];
        internal__static_DashFireMessage_Msg_RC_NpcDead__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_NpcDead, global::DashFireMessage.Msg_RC_NpcDead.Builder>(internal__static_DashFireMessage_Msg_RC_NpcDead__Descriptor,
                new string[] { "SendTime", "NpcId", });
        internal__static_DashFireMessage_Msg_RC_NpcDisappear__Descriptor = Descriptor.MessageTypes[31];
        internal__static_DashFireMessage_Msg_RC_NpcDisappear__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_NpcDisappear, global::DashFireMessage.Msg_RC_NpcDisappear.Builder>(internal__static_DashFireMessage_Msg_RC_NpcDisappear__Descriptor,
                new string[] { "NpcId", });
        internal__static_DashFireMessage_Msg_RC_Levelup__Descriptor = Descriptor.MessageTypes[32];
        internal__static_DashFireMessage_Msg_RC_Levelup__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_Levelup, global::DashFireMessage.Msg_RC_Levelup.Builder>(internal__static_DashFireMessage_Msg_RC_Levelup__Descriptor,
                new string[] { "RoleId", "Level", });
        internal__static_DashFireMessage_Msg_RC_SyncLevel__Descriptor = Descriptor.MessageTypes[33];
        internal__static_DashFireMessage_Msg_RC_SyncLevel__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SyncLevel, global::DashFireMessage.Msg_RC_SyncLevel.Builder>(internal__static_DashFireMessage_Msg_RC_SyncLevel__Descriptor,
                new string[] { "RoleId", "Level", });
        internal__static_DashFireMessage_Msg_RC_SyncExpMoney__Descriptor = Descriptor.MessageTypes[34];
        internal__static_DashFireMessage_Msg_RC_SyncExpMoney__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SyncExpMoney, global::DashFireMessage.Msg_RC_SyncExpMoney.Builder>(internal__static_DashFireMessage_Msg_RC_SyncExpMoney__Descriptor,
                new string[] { "RoleId", "Exp", "Money", "TotalMoney", });
        internal__static_DashFireMessage_Msg_RC_SyncProperty__Descriptor = Descriptor.MessageTypes[35];
        internal__static_DashFireMessage_Msg_RC_SyncProperty__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SyncProperty, global::DashFireMessage.Msg_RC_SyncProperty.Builder>(internal__static_DashFireMessage_Msg_RC_SyncProperty__Descriptor,
                new string[] { "RoleId", "Hp", "Np", "State", "EnergyNum", "BulletNum", "BulletNumMax", });
        internal__static_DashFireMessage_Msg_RC_SyncImpactEffect__Descriptor = Descriptor.MessageTypes[36];
        internal__static_DashFireMessage_Msg_RC_SyncImpactEffect__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SyncImpactEffect, global::DashFireMessage.Msg_RC_SyncImpactEffect.Builder>(internal__static_DashFireMessage_Msg_RC_SyncImpactEffect__Descriptor,
                new string[] { "RoleId", "AttackerId", "AttackerType", "IsKiller", "Propertys", "StandPos", });
        internal__static_DashFireMessage_Msg_RC_SyncImpactEffect_Property__Descriptor = internal__static_DashFireMessage_Msg_RC_SyncImpactEffect__Descriptor.NestedTypes[0];
        internal__static_DashFireMessage_Msg_RC_SyncImpactEffect_Property__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SyncImpactEffect.Types.Property, global::DashFireMessage.Msg_RC_SyncImpactEffect.Types.Property.Builder>(internal__static_DashFireMessage_Msg_RC_SyncImpactEffect_Property__Descriptor,
                new string[] { "PropertyIndex", "PropertyValue", });
        internal__static_DashFireMessage_Msg_RC_SyncItem__Descriptor = Descriptor.MessageTypes[37];
        internal__static_DashFireMessage_Msg_RC_SyncItem__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SyncItem, global::DashFireMessage.Msg_RC_SyncItem.Builder>(internal__static_DashFireMessage_Msg_RC_SyncItem__Descriptor,
                new string[] { "RoleId", "Items", });
        internal__static_DashFireMessage_Msg_RC_SyncItem_ItemInfo__Descriptor = internal__static_DashFireMessage_Msg_RC_SyncItem__Descriptor.NestedTypes[0];
        internal__static_DashFireMessage_Msg_RC_SyncItem_ItemInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SyncItem.Types.ItemInfo, global::DashFireMessage.Msg_RC_SyncItem.Types.ItemInfo.Builder>(internal__static_DashFireMessage_Msg_RC_SyncItem_ItemInfo__Descriptor,
                new string[] { "ItemPos", "ItemId", "ItemNum", });
        internal__static_DashFireMessage_Msg_RC_ItemChanged__Descriptor = Descriptor.MessageTypes[38];
        internal__static_DashFireMessage_Msg_RC_ItemChanged__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_ItemChanged, global::DashFireMessage.Msg_RC_ItemChanged.Builder>(internal__static_DashFireMessage_Msg_RC_ItemChanged__Descriptor,
                new string[] { "RoleId", "ItemPos", "ItemId", "ItemNum", });
        internal__static_DashFireMessage_Msg_RC_CreateSceneLogic__Descriptor = Descriptor.MessageTypes[39];
        internal__static_DashFireMessage_Msg_RC_CreateSceneLogic__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_CreateSceneLogic, global::DashFireMessage.Msg_RC_CreateSceneLogic.Builder>(internal__static_DashFireMessage_Msg_RC_CreateSceneLogic__Descriptor,
                new string[] { "Id", "CreateTime", "ConfigId", });
        internal__static_DashFireMessage_Msg_RC_DestroySceneLogic__Descriptor = Descriptor.MessageTypes[40];
        internal__static_DashFireMessage_Msg_RC_DestroySceneLogic__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_DestroySceneLogic, global::DashFireMessage.Msg_RC_DestroySceneLogic.Builder>(internal__static_DashFireMessage_Msg_RC_DestroySceneLogic__Descriptor,
                new string[] { "Id", });
        internal__static_DashFireMessage_Msg_RC_SceneLogicImpact__Descriptor = Descriptor.MessageTypes[41];
        internal__static_DashFireMessage_Msg_RC_SceneLogicImpact__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SceneLogicImpact, global::DashFireMessage.Msg_RC_SceneLogicImpact.Builder>(internal__static_DashFireMessage_Msg_RC_SceneLogicImpact__Descriptor,
                new string[] { "Id", "RoleId", });
        internal__static_DashFireMessage_Msg_CRC_PrevWeapon__Descriptor = Descriptor.MessageTypes[42];
        internal__static_DashFireMessage_Msg_CRC_PrevWeapon__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_PrevWeapon, global::DashFireMessage.Msg_CRC_PrevWeapon.Builder>(internal__static_DashFireMessage_Msg_CRC_PrevWeapon__Descriptor,
                new string[] { "RoleId", });
        internal__static_DashFireMessage_Msg_CRC_NextWeapon__Descriptor = Descriptor.MessageTypes[43];
        internal__static_DashFireMessage_Msg_CRC_NextWeapon__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_NextWeapon, global::DashFireMessage.Msg_CRC_NextWeapon.Builder>(internal__static_DashFireMessage_Msg_CRC_NextWeapon__Descriptor,
                new string[] { "RoleId", });
        internal__static_DashFireMessage_Msg_RC_ShootHurt__Descriptor = Descriptor.MessageTypes[44];
        internal__static_DashFireMessage_Msg_RC_ShootHurt__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_ShootHurt, global::DashFireMessage.Msg_RC_ShootHurt.Builder>(internal__static_DashFireMessage_Msg_RC_ShootHurt__Descriptor,
                new string[] { "AttackerId", "AttackerType", "IsKiller", "IsCritical", "Hp", "Np", "TargatId", });
        internal__static_DashFireMessage_Msg_RC_DebugSpaceInfo__Descriptor = Descriptor.MessageTypes[45];
        internal__static_DashFireMessage_Msg_RC_DebugSpaceInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_DebugSpaceInfo, global::DashFireMessage.Msg_RC_DebugSpaceInfo.Builder>(internal__static_DashFireMessage_Msg_RC_DebugSpaceInfo__Descriptor,
                new string[] { "SpaceInfos", });
        internal__static_DashFireMessage_Msg_RC_DebugSpaceInfo_DebugSpaceInfo__Descriptor = internal__static_DashFireMessage_Msg_RC_DebugSpaceInfo__Descriptor.NestedTypes[0];
        internal__static_DashFireMessage_Msg_RC_DebugSpaceInfo_DebugSpaceInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_DebugSpaceInfo.Types.DebugSpaceInfo, global::DashFireMessage.Msg_RC_DebugSpaceInfo.Types.DebugSpaceInfo.Builder>(internal__static_DashFireMessage_Msg_RC_DebugSpaceInfo_DebugSpaceInfo__Descriptor,
                new string[] { "ObjId", "IsPlayer", "PosX", "PosY", "PosZ", "FaceDir", });
        internal__static_DashFireMessage_Msg_CR_SwitchDebug__Descriptor = Descriptor.MessageTypes[46];
        internal__static_DashFireMessage_Msg_CR_SwitchDebug__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CR_SwitchDebug, global::DashFireMessage.Msg_CR_SwitchDebug.Builder>(internal__static_DashFireMessage_Msg_CR_SwitchDebug__Descriptor,
                new string[] { "IsDebug", });
        internal__static_DashFireMessage_Msg_CR_BuyItem__Descriptor = Descriptor.MessageTypes[47];
        internal__static_DashFireMessage_Msg_CR_BuyItem__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CR_BuyItem, global::DashFireMessage.Msg_CR_BuyItem.Builder>(internal__static_DashFireMessage_Msg_CR_BuyItem__Descriptor,
                new string[] { "ItemId", });
        internal__static_DashFireMessage_Msg_CR_SellItem__Descriptor = Descriptor.MessageTypes[48];
        internal__static_DashFireMessage_Msg_CR_SellItem__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CR_SellItem, global::DashFireMessage.Msg_CR_SellItem.Builder>(internal__static_DashFireMessage_Msg_CR_SellItem__Descriptor,
                new string[] { "ItemPos", });
        internal__static_DashFireMessage_Msg_CR_SwapItem__Descriptor = Descriptor.MessageTypes[49];
        internal__static_DashFireMessage_Msg_CR_SwapItem__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CR_SwapItem, global::DashFireMessage.Msg_CR_SwapItem.Builder>(internal__static_DashFireMessage_Msg_CR_SwapItem__Descriptor,
                new string[] { "ItemPos1", "ItemPos2", });
        internal__static_DashFireMessage_Msg_CR_DiscardItem__Descriptor = Descriptor.MessageTypes[50];
        internal__static_DashFireMessage_Msg_CR_DiscardItem__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CR_DiscardItem, global::DashFireMessage.Msg_CR_DiscardItem.Builder>(internal__static_DashFireMessage_Msg_CR_DiscardItem__Descriptor,
                new string[] { "ItemPos", });
        internal__static_DashFireMessage_Msg_RC_PvpFinish__Descriptor = Descriptor.MessageTypes[51];
        internal__static_DashFireMessage_Msg_RC_PvpFinish__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_PvpFinish, global::DashFireMessage.Msg_RC_PvpFinish.Builder>(internal__static_DashFireMessage_Msg_RC_PvpFinish__Descriptor,
                new string[] { "WinCampId", });
        internal__static_DashFireMessage_Msg_RC_PveFinish__Descriptor = Descriptor.MessageTypes[52];
        internal__static_DashFireMessage_Msg_RC_PveFinish__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_PveFinish, global::DashFireMessage.Msg_RC_PveFinish.Builder>(internal__static_DashFireMessage_Msg_RC_PveFinish__Descriptor,
                new string[] { "IsWin", });
        internal__static_DashFireMessage_Msg_RC_SyncCombatStatisticInfo__Descriptor = Descriptor.MessageTypes[53];
        internal__static_DashFireMessage_Msg_RC_SyncCombatStatisticInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SyncCombatStatisticInfo, global::DashFireMessage.Msg_RC_SyncCombatStatisticInfo.Builder>(internal__static_DashFireMessage_Msg_RC_SyncCombatStatisticInfo__Descriptor,
                new string[] { "RoleId", "KillHeroCount", "AssitKillCount", "KillNpcCount", "DeadCount", });
        internal__static_DashFireMessage_Msg_RC_PvpCombatInfo__Descriptor = Descriptor.MessageTypes[54];
        internal__static_DashFireMessage_Msg_RC_PvpCombatInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_PvpCombatInfo, global::DashFireMessage.Msg_RC_PvpCombatInfo.Builder>(internal__static_DashFireMessage_Msg_RC_PvpCombatInfo__Descriptor,
                new string[] { "KillHeroCountForBlue", "KillHeroCountForRed", "LinkIdForKiller", "LinkIdForKilled", "KillerNickname", "KilledNickname", });
        internal__static_DashFireMessage_Msg_RC_SkillShootBarrage__Descriptor = Descriptor.MessageTypes[55];
        internal__static_DashFireMessage_Msg_RC_SkillShootBarrage__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SkillShootBarrage, global::DashFireMessage.Msg_RC_SkillShootBarrage.Builder>(internal__static_DashFireMessage_Msg_RC_SkillShootBarrage__Descriptor,
                new string[] { "ShootTime", "RoleId", "SkillId", "BarrageId", "ShootDirection", "ShootPos", "TargetRoleId", "StandPos", "FaceDirection", "TargetPos", });
        internal__static_DashFireMessage_Msg_RC_WpnShootBarrage__Descriptor = Descriptor.MessageTypes[56];
        internal__static_DashFireMessage_Msg_RC_WpnShootBarrage__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_WpnShootBarrage, global::DashFireMessage.Msg_RC_WpnShootBarrage.Builder>(internal__static_DashFireMessage_Msg_RC_WpnShootBarrage__Descriptor,
                new string[] { "ShootTime", "RoleId", "TargetId", "BarrageId", "ShootDirection", "ShootPosX", "ShootPosY", "ShootPosZ", });
        internal__static_DashFireMessage_Msg_CRC_UpdateSkill__Descriptor = Descriptor.MessageTypes[57];
        internal__static_DashFireMessage_Msg_CRC_UpdateSkill__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_UpdateSkill, global::DashFireMessage.Msg_CRC_UpdateSkill.Builder>(internal__static_DashFireMessage_Msg_CRC_UpdateSkill__Descriptor,
                new string[] { "RoleId", "SkillIndex", });
        internal__static_DashFireMessage_Msg_RC_SkillCreateSceneLogicInfo__Descriptor = Descriptor.MessageTypes[58];
        internal__static_DashFireMessage_Msg_RC_SkillCreateSceneLogicInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SkillCreateSceneLogicInfo, global::DashFireMessage.Msg_RC_SkillCreateSceneLogicInfo.Builder>(internal__static_DashFireMessage_Msg_RC_SkillCreateSceneLogicInfo__Descriptor,
                new string[] { "RoleId", "SkillId", "ScenelogicinfoId", "ScenelogicinfoLogicid", "ScenelogicinfoDataid", "BarrageId", });
        internal__static_DashFireMessage_Msg_RC_SceneLogicShootBarrage__Descriptor = Descriptor.MessageTypes[59];
        internal__static_DashFireMessage_Msg_RC_SceneLogicShootBarrage__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SceneLogicShootBarrage, global::DashFireMessage.Msg_RC_SceneLogicShootBarrage.Builder>(internal__static_DashFireMessage_Msg_RC_SceneLogicShootBarrage__Descriptor,
                new string[] { "ShootTime", "RoleId", "ScenelogicinfoId", "BarrageId", "ShootDirection", "ShootPos", "TargetRoleId", "StandPos", "FaceDirection", "TargetPos", });
        internal__static_DashFireMessage_Msg_RC_SendImpactToEntity__Descriptor = Descriptor.MessageTypes[60];
        internal__static_DashFireMessage_Msg_RC_SendImpactToEntity__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SendImpactToEntity, global::DashFireMessage.Msg_RC_SendImpactToEntity.Builder>(internal__static_DashFireMessage_Msg_RC_SendImpactToEntity__Descriptor,
                new string[] { "SenderId", "SenderType", "TargetId", "ImpactId", "SkillId", "SenderPos", "StartTime", "TargetPos", });
        internal__static_DashFireMessage_Msg_RC_RemoveImpactFromEntity__Descriptor = Descriptor.MessageTypes[61];
        internal__static_DashFireMessage_Msg_RC_RemoveImpactFromEntity__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_RemoveImpactFromEntity, global::DashFireMessage.Msg_RC_RemoveImpactFromEntity.Builder>(internal__static_DashFireMessage_Msg_RC_RemoveImpactFromEntity__Descriptor,
                new string[] { "RoleId", "ImpactId", });
        internal__static_DashFireMessage_Msg_CRC_BeginSlowDown__Descriptor = Descriptor.MessageTypes[62];
        internal__static_DashFireMessage_Msg_CRC_BeginSlowDown__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_BeginSlowDown, global::DashFireMessage.Msg_CRC_BeginSlowDown.Builder>(internal__static_DashFireMessage_Msg_CRC_BeginSlowDown__Descriptor,
                new string[] { "ActionId", "SendTime", "RoleId", });
        internal__static_DashFireMessage_Msg_CRC_EndSlowDown__Descriptor = Descriptor.MessageTypes[63];
        internal__static_DashFireMessage_Msg_CRC_EndSlowDown__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_EndSlowDown, global::DashFireMessage.Msg_CRC_EndSlowDown.Builder>(internal__static_DashFireMessage_Msg_CRC_EndSlowDown__Descriptor,
                new string[] { "ActionId", "SendTime", "RoleId", });
        internal__static_DashFireMessage_Msg_RC_CreateLandMark__Descriptor = Descriptor.MessageTypes[64];
        internal__static_DashFireMessage_Msg_RC_CreateLandMark__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_CreateLandMark, global::DashFireMessage.Msg_RC_CreateLandMark.Builder>(internal__static_DashFireMessage_Msg_RC_CreateLandMark__Descriptor,
                new string[] { "RoleId", "SkillId", "MarkNum", "MarkPosList", "MarkLifeTime", "MarkEffect", });
        internal__static_DashFireMessage_Msg_CRC_WeaponStatus__Descriptor = Descriptor.MessageTypes[65];
        internal__static_DashFireMessage_Msg_CRC_WeaponStatus__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_WeaponStatus, global::DashFireMessage.Msg_CRC_WeaponStatus.Builder>(internal__static_DashFireMessage_Msg_CRC_WeaponStatus__Descriptor,
                new string[] { "ActionId", "SendTime", "RoleId", });
        internal__static_DashFireMessage_Msg_CRC_MousePos__Descriptor = Descriptor.MessageTypes[66];
        internal__static_DashFireMessage_Msg_CRC_MousePos__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_MousePos, global::DashFireMessage.Msg_CRC_MousePos.Builder>(internal__static_DashFireMessage_Msg_CRC_MousePos__Descriptor,
                new string[] { "RoleId", "SendTime", "MousePos", });
        internal__static_DashFireMessage_Msg_RC_ChangeWeaponSync__Descriptor = Descriptor.MessageTypes[67];
        internal__static_DashFireMessage_Msg_RC_ChangeWeaponSync__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_ChangeWeaponSync, global::DashFireMessage.Msg_RC_ChangeWeaponSync.Builder>(internal__static_DashFireMessage_Msg_RC_ChangeWeaponSync__Descriptor,
                new string[] { "RoleId", "WeaponId", });
        internal__static_DashFireMessage_Msg_CR_KeyPress__Descriptor = Descriptor.MessageTypes[68];
        internal__static_DashFireMessage_Msg_CR_KeyPress__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CR_KeyPress, global::DashFireMessage.Msg_CR_KeyPress.Builder>(internal__static_DashFireMessage_Msg_CR_KeyPress__Descriptor,
                new string[] { "Key", "IsPressed", });
        internal__static_DashFireMessage_Msg_CRC_InteractObject__Descriptor = Descriptor.MessageTypes[69];
        internal__static_DashFireMessage_Msg_CRC_InteractObject__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_InteractObject, global::DashFireMessage.Msg_CRC_InteractObject.Builder>(internal__static_DashFireMessage_Msg_CRC_InteractObject__Descriptor,
                new string[] { "InitiatorId", "ReceiverId", });
        internal__static_DashFireMessage_Msg_RC_ControlObject__Descriptor = Descriptor.MessageTypes[70];
        internal__static_DashFireMessage_Msg_RC_ControlObject__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_ControlObject, global::DashFireMessage.Msg_RC_ControlObject.Builder>(internal__static_DashFireMessage_Msg_RC_ControlObject__Descriptor,
                new string[] { "ControllerId", "ControlledId", "ControlOrRelease", });
        internal__static_DashFireMessage_Msg_RC_RefreshItemSkills__Descriptor = Descriptor.MessageTypes[71];
        internal__static_DashFireMessage_Msg_RC_RefreshItemSkills__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_RefreshItemSkills, global::DashFireMessage.Msg_RC_RefreshItemSkills.Builder>(internal__static_DashFireMessage_Msg_RC_RefreshItemSkills__Descriptor,
                new string[] { "RoleId", });
        internal__static_DashFireMessage_Msg_RC_HighlightPrompt__Descriptor = Descriptor.MessageTypes[72];
        internal__static_DashFireMessage_Msg_RC_HighlightPrompt__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_HighlightPrompt, global::DashFireMessage.Msg_RC_HighlightPrompt.Builder>(internal__static_DashFireMessage_Msg_RC_HighlightPrompt__Descriptor,
                new string[] { "DictId", "Argument", });
        internal__static_DashFireMessage_Msg_RC_SearchLightMove__Descriptor = Descriptor.MessageTypes[73];
        internal__static_DashFireMessage_Msg_RC_SearchLightMove__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_SearchLightMove, global::DashFireMessage.Msg_RC_SearchLightMove.Builder>(internal__static_DashFireMessage_Msg_RC_SearchLightMove__Descriptor,
                new string[] { "Id", "StartTime", "CurPosX", "CurPosY", "CurPosZ", "Speed", "TargetId", "TargetPosX", "TargetPosY", "TargetPosZ", });
        internal__static_DashFireMessage_Msg_RC_NotifyEarnMoney__Descriptor = Descriptor.MessageTypes[74];
        internal__static_DashFireMessage_Msg_RC_NotifyEarnMoney__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_NotifyEarnMoney, global::DashFireMessage.Msg_RC_NotifyEarnMoney.Builder>(internal__static_DashFireMessage_Msg_RC_NotifyEarnMoney__Descriptor,
                new string[] { "Id", "Money", });
        internal__static_DashFireMessage_Msg_CR_QuitClient__Descriptor = Descriptor.MessageTypes[75];
        internal__static_DashFireMessage_Msg_CR_QuitClient__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CR_QuitClient, global::DashFireMessage.Msg_CR_QuitClient.Builder>(internal__static_DashFireMessage_Msg_CR_QuitClient__Descriptor,
                new string[] { });
        internal__static_DashFireMessage_Msg_RC_UserMove__Descriptor = Descriptor.MessageTypes[76];
        internal__static_DashFireMessage_Msg_RC_UserMove__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_UserMove, global::DashFireMessage.Msg_RC_UserMove.Builder>(internal__static_DashFireMessage_Msg_RC_UserMove__Descriptor,
                new string[] { "SendTime", "RoleId", "CurPosX", "CurPosY", "CurPosZ", "IsMoving", "MoveDirection", "FaceDirection", "TargetPosX", "TargetPosY", "TargetPosZ", "VelocityCoefficient", });
        internal__static_DashFireMessage_Msg_RC_UserFace__Descriptor = Descriptor.MessageTypes[77];
        internal__static_DashFireMessage_Msg_RC_UserFace__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_RC_UserFace, global::DashFireMessage.Msg_RC_UserFace.Builder>(internal__static_DashFireMessage_Msg_RC_UserFace__Descriptor,
                new string[] { "RoleId", "FaceDirection", });
        internal__static_DashFireMessage_Msg_CRC_UserFindPath__Descriptor = Descriptor.MessageTypes[78];
        internal__static_DashFireMessage_Msg_CRC_UserFindPath__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFireMessage.Msg_CRC_UserFindPath, global::DashFireMessage.Msg_CRC_UserFindPath.Builder>(internal__static_DashFireMessage_Msg_CRC_UserFindPath__Descriptor,
                new string[] { "SendTime", "RoleId", "TargetPosX", "TargetPosY", "TargetPosZ", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_Ping : pb::GeneratedMessage<Msg_Ping, Msg_Ping.Builder> {
    private Msg_Ping() { }
    private static readonly Msg_Ping defaultInstance = new Msg_Ping().MakeReadOnly();
    private static readonly string[] _msgPingFieldNames = new string[] { "send_ping_time" };
    private static readonly uint[] _msgPingFieldTags = new uint[] { 8 };
    public static Msg_Ping DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_Ping DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_Ping ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_Ping__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_Ping, Msg_Ping.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_Ping__FieldAccessorTable; }
    }
    
    public const int SendPingTimeFieldNumber = 1;
    private bool hasSendPingTime;
    private long sendPingTime_;
    public bool HasSendPingTime {
      get { return hasSendPingTime; }
    }
    public long SendPingTime {
      get { return sendPingTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSendPingTime) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgPingFieldNames;
      if (hasSendPingTime) {
        output.WriteInt64(1, field_names[0], SendPingTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSendPingTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, SendPingTime);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_Ping ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_Ping ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_Ping ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_Ping ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_Ping ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_Ping ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_Ping ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_Ping ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_Ping ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_Ping ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_Ping MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_Ping prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_Ping, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_Ping cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_Ping result;
      
      private Msg_Ping PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_Ping original = result;
          result = new Msg_Ping();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_Ping MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_Ping.Descriptor; }
      }
      
      public override Msg_Ping DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_Ping.DefaultInstance; }
      }
      
      public override Msg_Ping BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_Ping) {
          return MergeFrom((Msg_Ping) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_Ping other) {
        if (other == global::DashFireMessage.Msg_Ping.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSendPingTime) {
          SendPingTime = other.SendPingTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgPingFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgPingFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSendPingTime = input.ReadInt64(ref result.sendPingTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSendPingTime {
        get { return result.hasSendPingTime; }
      }
      public long SendPingTime {
        get { return result.SendPingTime; }
        set { SetSendPingTime(value); }
      }
      public Builder SetSendPingTime(long value) {
        PrepareBuilder();
        result.hasSendPingTime = true;
        result.sendPingTime_ = value;
        return this;
      }
      public Builder ClearSendPingTime() {
        PrepareBuilder();
        result.hasSendPingTime = false;
        result.sendPingTime_ = 0L;
        return this;
      }
    }
    static Msg_Ping() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_Pong : pb::GeneratedMessage<Msg_Pong, Msg_Pong.Builder> {
    private Msg_Pong() { }
    private static readonly Msg_Pong defaultInstance = new Msg_Pong().MakeReadOnly();
    private static readonly string[] _msgPongFieldNames = new string[] { "send_ping_time", "send_pong_time" };
    private static readonly uint[] _msgPongFieldTags = new uint[] { 8, 16 };
    public static Msg_Pong DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_Pong DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_Pong ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_Pong__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_Pong, Msg_Pong.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_Pong__FieldAccessorTable; }
    }
    
    public const int SendPingTimeFieldNumber = 1;
    private bool hasSendPingTime;
    private long sendPingTime_;
    public bool HasSendPingTime {
      get { return hasSendPingTime; }
    }
    public long SendPingTime {
      get { return sendPingTime_; }
    }
    
    public const int SendPongTimeFieldNumber = 2;
    private bool hasSendPongTime;
    private long sendPongTime_;
    public bool HasSendPongTime {
      get { return hasSendPongTime; }
    }
    public long SendPongTime {
      get { return sendPongTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSendPingTime) return false;
        if (!hasSendPongTime) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgPongFieldNames;
      if (hasSendPingTime) {
        output.WriteInt64(1, field_names[0], SendPingTime);
      }
      if (hasSendPongTime) {
        output.WriteInt64(2, field_names[1], SendPongTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSendPingTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, SendPingTime);
        }
        if (hasSendPongTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, SendPongTime);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_Pong ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_Pong ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_Pong ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_Pong ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_Pong ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_Pong ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_Pong ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_Pong ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_Pong ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_Pong ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_Pong MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_Pong prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_Pong, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_Pong cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_Pong result;
      
      private Msg_Pong PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_Pong original = result;
          result = new Msg_Pong();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_Pong MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_Pong.Descriptor; }
      }
      
      public override Msg_Pong DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_Pong.DefaultInstance; }
      }
      
      public override Msg_Pong BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_Pong) {
          return MergeFrom((Msg_Pong) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_Pong other) {
        if (other == global::DashFireMessage.Msg_Pong.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSendPingTime) {
          SendPingTime = other.SendPingTime;
        }
        if (other.HasSendPongTime) {
          SendPongTime = other.SendPongTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgPongFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgPongFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSendPingTime = input.ReadInt64(ref result.sendPingTime_);
              break;
            }
            case 16: {
              result.hasSendPongTime = input.ReadInt64(ref result.sendPongTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSendPingTime {
        get { return result.hasSendPingTime; }
      }
      public long SendPingTime {
        get { return result.SendPingTime; }
        set { SetSendPingTime(value); }
      }
      public Builder SetSendPingTime(long value) {
        PrepareBuilder();
        result.hasSendPingTime = true;
        result.sendPingTime_ = value;
        return this;
      }
      public Builder ClearSendPingTime() {
        PrepareBuilder();
        result.hasSendPingTime = false;
        result.sendPingTime_ = 0L;
        return this;
      }
      
      public bool HasSendPongTime {
        get { return result.hasSendPongTime; }
      }
      public long SendPongTime {
        get { return result.SendPongTime; }
        set { SetSendPongTime(value); }
      }
      public Builder SetSendPongTime(long value) {
        PrepareBuilder();
        result.hasSendPongTime = true;
        result.sendPongTime_ = value;
        return this;
      }
      public Builder ClearSendPongTime() {
        PrepareBuilder();
        result.hasSendPongTime = false;
        result.sendPongTime_ = 0L;
        return this;
      }
    }
    static Msg_Pong() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Position : pb::GeneratedMessage<Position, Position.Builder> {
    private Position() { }
    private static readonly Position defaultInstance = new Position().MakeReadOnly();
    private static readonly string[] _positionFieldNames = new string[] { "x", "y", "z" };
    private static readonly uint[] _positionFieldTags = new uint[] { 13, 21, 29 };
    public static Position DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Position DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Position ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Position__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Position, Position.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Position__FieldAccessorTable; }
    }
    
    public const int XFieldNumber = 1;
    private bool hasX;
    private float x_;
    public bool HasX {
      get { return hasX; }
    }
    public float X {
      get { return x_; }
    }
    
    public const int YFieldNumber = 2;
    private bool hasY;
    private float y_;
    public bool HasY {
      get { return hasY; }
    }
    public float Y {
      get { return y_; }
    }
    
    public const int ZFieldNumber = 3;
    private bool hasZ;
    private float z_;
    public bool HasZ {
      get { return hasZ; }
    }
    public float Z {
      get { return z_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasX) return false;
        if (!hasY) return false;
        if (!hasZ) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _positionFieldNames;
      if (hasX) {
        output.WriteFloat(1, field_names[0], X);
      }
      if (hasY) {
        output.WriteFloat(2, field_names[1], Y);
      }
      if (hasZ) {
        output.WriteFloat(3, field_names[2], Z);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasX) {
          size += pb::CodedOutputStream.ComputeFloatSize(1, X);
        }
        if (hasY) {
          size += pb::CodedOutputStream.ComputeFloatSize(2, Y);
        }
        if (hasZ) {
          size += pb::CodedOutputStream.ComputeFloatSize(3, Z);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Position ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Position ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Position ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Position ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Position ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Position ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Position ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Position ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Position ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Position ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Position MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Position prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Position, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Position cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Position result;
      
      private Position PrepareBuilder() {
        if (resultIsReadOnly) {
          Position original = result;
          result = new Position();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Position MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Position.Descriptor; }
      }
      
      public override Position DefaultInstanceForType {
        get { return global::DashFireMessage.Position.DefaultInstance; }
      }
      
      public override Position BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Position) {
          return MergeFrom((Position) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Position other) {
        if (other == global::DashFireMessage.Position.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasX) {
          X = other.X;
        }
        if (other.HasY) {
          Y = other.Y;
        }
        if (other.HasZ) {
          Z = other.Z;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_positionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _positionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 13: {
              result.hasX = input.ReadFloat(ref result.x_);
              break;
            }
            case 21: {
              result.hasY = input.ReadFloat(ref result.y_);
              break;
            }
            case 29: {
              result.hasZ = input.ReadFloat(ref result.z_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasX {
        get { return result.hasX; }
      }
      public float X {
        get { return result.X; }
        set { SetX(value); }
      }
      public Builder SetX(float value) {
        PrepareBuilder();
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder ClearX() {
        PrepareBuilder();
        result.hasX = false;
        result.x_ = 0F;
        return this;
      }
      
      public bool HasY {
        get { return result.hasY; }
      }
      public float Y {
        get { return result.Y; }
        set { SetY(value); }
      }
      public Builder SetY(float value) {
        PrepareBuilder();
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder ClearY() {
        PrepareBuilder();
        result.hasY = false;
        result.y_ = 0F;
        return this;
      }
      
      public bool HasZ {
        get { return result.hasZ; }
      }
      public float Z {
        get { return result.Z; }
        set { SetZ(value); }
      }
      public Builder SetZ(float value) {
        PrepareBuilder();
        result.hasZ = true;
        result.z_ = value;
        return this;
      }
      public Builder ClearZ() {
        PrepareBuilder();
        result.hasZ = false;
        result.z_ = 0F;
        return this;
      }
    }
    static Position() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CR_ShakeHands : pb::GeneratedMessage<Msg_CR_ShakeHands, Msg_CR_ShakeHands.Builder> {
    private Msg_CR_ShakeHands() { }
    private static readonly Msg_CR_ShakeHands defaultInstance = new Msg_CR_ShakeHands().MakeReadOnly();
    private static readonly string[] _msgCRShakeHandsFieldNames = new string[] { "auth_key" };
    private static readonly uint[] _msgCRShakeHandsFieldTags = new uint[] { 8 };
    public static Msg_CR_ShakeHands DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CR_ShakeHands DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CR_ShakeHands ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CR_ShakeHands__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CR_ShakeHands, Msg_CR_ShakeHands.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CR_ShakeHands__FieldAccessorTable; }
    }
    
    public const int AuthKeyFieldNumber = 1;
    private bool hasAuthKey;
    private uint authKey_;
    public bool HasAuthKey {
      get { return hasAuthKey; }
    }
    [global::System.CLSCompliant(false)]
    public uint AuthKey {
      get { return authKey_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAuthKey) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRShakeHandsFieldNames;
      if (hasAuthKey) {
        output.WriteUInt32(1, field_names[0], AuthKey);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAuthKey) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, AuthKey);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CR_ShakeHands ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CR_ShakeHands ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_ShakeHands ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CR_ShakeHands ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_ShakeHands ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CR_ShakeHands ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_ShakeHands ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CR_ShakeHands ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CR_ShakeHands ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CR_ShakeHands ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CR_ShakeHands MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CR_ShakeHands prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CR_ShakeHands, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CR_ShakeHands cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CR_ShakeHands result;
      
      private Msg_CR_ShakeHands PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CR_ShakeHands original = result;
          result = new Msg_CR_ShakeHands();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CR_ShakeHands MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CR_ShakeHands.Descriptor; }
      }
      
      public override Msg_CR_ShakeHands DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CR_ShakeHands.DefaultInstance; }
      }
      
      public override Msg_CR_ShakeHands BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CR_ShakeHands) {
          return MergeFrom((Msg_CR_ShakeHands) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CR_ShakeHands other) {
        if (other == global::DashFireMessage.Msg_CR_ShakeHands.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAuthKey) {
          AuthKey = other.AuthKey;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRShakeHandsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRShakeHandsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAuthKey = input.ReadUInt32(ref result.authKey_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAuthKey {
        get { return result.hasAuthKey; }
      }
      [global::System.CLSCompliant(false)]
      public uint AuthKey {
        get { return result.AuthKey; }
        set { SetAuthKey(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetAuthKey(uint value) {
        PrepareBuilder();
        result.hasAuthKey = true;
        result.authKey_ = value;
        return this;
      }
      public Builder ClearAuthKey() {
        PrepareBuilder();
        result.hasAuthKey = false;
        result.authKey_ = 0;
        return this;
      }
    }
    static Msg_CR_ShakeHands() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_ShakeHands_Ret : pb::GeneratedMessage<Msg_RC_ShakeHands_Ret, Msg_RC_ShakeHands_Ret.Builder> {
    private Msg_RC_ShakeHands_Ret() { }
    private static readonly Msg_RC_ShakeHands_Ret defaultInstance = new Msg_RC_ShakeHands_Ret().MakeReadOnly();
    private static readonly string[] _msgRCShakeHandsRetFieldNames = new string[] { "auth_result" };
    private static readonly uint[] _msgRCShakeHandsRetFieldTags = new uint[] { 8 };
    public static Msg_RC_ShakeHands_Ret DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_ShakeHands_Ret DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_ShakeHands_Ret ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_ShakeHands_Ret__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_ShakeHands_Ret, Msg_RC_ShakeHands_Ret.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_ShakeHands_Ret__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum RetType {
        SUCCESS = 0,
        ERROR = 1,
      }
      
    }
    #endregion
    
    public const int AuthResultFieldNumber = 1;
    private bool hasAuthResult;
    private global::DashFireMessage.Msg_RC_ShakeHands_Ret.Types.RetType authResult_ = global::DashFireMessage.Msg_RC_ShakeHands_Ret.Types.RetType.SUCCESS;
    public bool HasAuthResult {
      get { return hasAuthResult; }
    }
    public global::DashFireMessage.Msg_RC_ShakeHands_Ret.Types.RetType AuthResult {
      get { return authResult_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAuthResult) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCShakeHandsRetFieldNames;
      if (hasAuthResult) {
        output.WriteEnum(1, field_names[0], (int) AuthResult, AuthResult);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAuthResult) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) AuthResult);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_ShakeHands_Ret ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_ShakeHands_Ret ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_ShakeHands_Ret ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_ShakeHands_Ret ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_ShakeHands_Ret ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_ShakeHands_Ret ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_ShakeHands_Ret ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_ShakeHands_Ret ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_ShakeHands_Ret ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_ShakeHands_Ret ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_ShakeHands_Ret MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_ShakeHands_Ret prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_ShakeHands_Ret, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_ShakeHands_Ret cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_ShakeHands_Ret result;
      
      private Msg_RC_ShakeHands_Ret PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_ShakeHands_Ret original = result;
          result = new Msg_RC_ShakeHands_Ret();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_ShakeHands_Ret MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_ShakeHands_Ret.Descriptor; }
      }
      
      public override Msg_RC_ShakeHands_Ret DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_ShakeHands_Ret.DefaultInstance; }
      }
      
      public override Msg_RC_ShakeHands_Ret BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_ShakeHands_Ret) {
          return MergeFrom((Msg_RC_ShakeHands_Ret) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_ShakeHands_Ret other) {
        if (other == global::DashFireMessage.Msg_RC_ShakeHands_Ret.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAuthResult) {
          AuthResult = other.AuthResult;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCShakeHandsRetFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCShakeHandsRetFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.authResult_, out unknown)) {
                result.hasAuthResult = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAuthResult {
       get { return result.hasAuthResult; }
      }
      public global::DashFireMessage.Msg_RC_ShakeHands_Ret.Types.RetType AuthResult {
        get { return result.AuthResult; }
        set { SetAuthResult(value); }
      }
      public Builder SetAuthResult(global::DashFireMessage.Msg_RC_ShakeHands_Ret.Types.RetType value) {
        PrepareBuilder();
        result.hasAuthResult = true;
        result.authResult_ = value;
        return this;
      }
      public Builder ClearAuthResult() {
        PrepareBuilder();
        result.hasAuthResult = false;
        result.authResult_ = global::DashFireMessage.Msg_RC_ShakeHands_Ret.Types.RetType.SUCCESS;
        return this;
      }
    }
    static Msg_RC_ShakeHands_Ret() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CR_Observer : pb::GeneratedMessage<Msg_CR_Observer, Msg_CR_Observer.Builder> {
    private Msg_CR_Observer() { }
    private static readonly Msg_CR_Observer defaultInstance = new Msg_CR_Observer().MakeReadOnly();
    private static readonly string[] _msgCRObserverFieldNames = new string[] {  };
    private static readonly uint[] _msgCRObserverFieldTags = new uint[] {  };
    public static Msg_CR_Observer DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CR_Observer DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CR_Observer ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CR_Observer__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CR_Observer, Msg_CR_Observer.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CR_Observer__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRObserverFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CR_Observer ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CR_Observer ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_Observer ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CR_Observer ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_Observer ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CR_Observer ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_Observer ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CR_Observer ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CR_Observer ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CR_Observer ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CR_Observer MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CR_Observer prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CR_Observer, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CR_Observer cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CR_Observer result;
      
      private Msg_CR_Observer PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CR_Observer original = result;
          result = new Msg_CR_Observer();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CR_Observer MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CR_Observer.Descriptor; }
      }
      
      public override Msg_CR_Observer DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CR_Observer.DefaultInstance; }
      }
      
      public override Msg_CR_Observer BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CR_Observer) {
          return MergeFrom((Msg_CR_Observer) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CR_Observer other) {
        if (other == global::DashFireMessage.Msg_CR_Observer.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRObserverFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRObserverFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static Msg_CR_Observer() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CRC_Create : pb::GeneratedMessage<Msg_CRC_Create, Msg_CRC_Create.Builder> {
    private Msg_CRC_Create() { }
    private static readonly Msg_CRC_Create defaultInstance = new Msg_CRC_Create().MakeReadOnly();
    private static readonly string[] _msgCRCCreateFieldNames = new string[] { "Weapons", "camp_id", "face_dirction", "hero_id", "is_player_self", "nickname", "position", "role_id", "scene_start_time", "shop_equipments_id", "skill_levels" };
    private static readonly uint[] _msgCRCCreateFieldTags = new uint[] { 56, 32, 53, 24, 16, 82, 42, 8, 72, 88, 64 };
    public static Msg_CRC_Create DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CRC_Create DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CRC_Create ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_Create__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CRC_Create, Msg_CRC_Create.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_Create__FieldAccessorTable; }
    }
    
    public const int RoleIdFieldNumber = 1;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int IsPlayerSelfFieldNumber = 2;
    private bool hasIsPlayerSelf;
    private bool isPlayerSelf_;
    public bool HasIsPlayerSelf {
      get { return hasIsPlayerSelf; }
    }
    public bool IsPlayerSelf {
      get { return isPlayerSelf_; }
    }
    
    public const int HeroIdFieldNumber = 3;
    private bool hasHeroId;
    private int heroId_;
    public bool HasHeroId {
      get { return hasHeroId; }
    }
    public int HeroId {
      get { return heroId_; }
    }
    
    public const int CampIdFieldNumber = 4;
    private bool hasCampId;
    private int campId_;
    public bool HasCampId {
      get { return hasCampId; }
    }
    public int CampId {
      get { return campId_; }
    }
    
    public const int PositionFieldNumber = 5;
    private bool hasPosition;
    private global::DashFireMessage.Position position_;
    public bool HasPosition {
      get { return hasPosition; }
    }
    public global::DashFireMessage.Position Position {
      get { return position_ ?? global::DashFireMessage.Position.DefaultInstance; }
    }
    
    public const int FaceDirctionFieldNumber = 6;
    private bool hasFaceDirction;
    private float faceDirction_;
    public bool HasFaceDirction {
      get { return hasFaceDirction; }
    }
    public float FaceDirction {
      get { return faceDirction_; }
    }
    
    public const int WeaponsFieldNumber = 7;
    private pbc::PopsicleList<int> weapons_ = new pbc::PopsicleList<int>();
    public scg::IList<int> WeaponsList {
      get { return pbc::Lists.AsReadOnly(weapons_); }
    }
    public int WeaponsCount {
      get { return weapons_.Count; }
    }
    public int GetWeapons(int index) {
      return weapons_[index];
    }
    
    public const int SkillLevelsFieldNumber = 8;
    private pbc::PopsicleList<int> skillLevels_ = new pbc::PopsicleList<int>();
    public scg::IList<int> SkillLevelsList {
      get { return pbc::Lists.AsReadOnly(skillLevels_); }
    }
    public int SkillLevelsCount {
      get { return skillLevels_.Count; }
    }
    public int GetSkillLevels(int index) {
      return skillLevels_[index];
    }
    
    public const int SceneStartTimeFieldNumber = 9;
    private bool hasSceneStartTime;
    private long sceneStartTime_;
    public bool HasSceneStartTime {
      get { return hasSceneStartTime; }
    }
    public long SceneStartTime {
      get { return sceneStartTime_; }
    }
    
    public const int NicknameFieldNumber = 10;
    private bool hasNickname;
    private string nickname_ = "";
    public bool HasNickname {
      get { return hasNickname; }
    }
    public string Nickname {
      get { return nickname_; }
    }
    
    public const int ShopEquipmentsIdFieldNumber = 11;
    private pbc::PopsicleList<int> shopEquipmentsId_ = new pbc::PopsicleList<int>();
    public scg::IList<int> ShopEquipmentsIdList {
      get { return pbc::Lists.AsReadOnly(shopEquipmentsId_); }
    }
    public int ShopEquipmentsIdCount {
      get { return shopEquipmentsId_.Count; }
    }
    public int GetShopEquipmentsId(int index) {
      return shopEquipmentsId_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasPosition) {
          if (!Position.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRCCreateFieldNames;
      if (hasRoleId) {
        output.WriteInt32(1, field_names[7], RoleId);
      }
      if (hasIsPlayerSelf) {
        output.WriteBool(2, field_names[4], IsPlayerSelf);
      }
      if (hasHeroId) {
        output.WriteInt32(3, field_names[3], HeroId);
      }
      if (hasCampId) {
        output.WriteInt32(4, field_names[1], CampId);
      }
      if (hasPosition) {
        output.WriteMessage(5, field_names[6], Position);
      }
      if (hasFaceDirction) {
        output.WriteFloat(6, field_names[2], FaceDirction);
      }
      if (weapons_.Count > 0) {
        output.WriteInt32Array(7, field_names[0], weapons_);
      }
      if (skillLevels_.Count > 0) {
        output.WriteInt32Array(8, field_names[10], skillLevels_);
      }
      if (hasSceneStartTime) {
        output.WriteInt64(9, field_names[8], SceneStartTime);
      }
      if (hasNickname) {
        output.WriteString(10, field_names[5], Nickname);
      }
      if (shopEquipmentsId_.Count > 0) {
        output.WriteInt32Array(11, field_names[9], shopEquipmentsId_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoleId);
        }
        if (hasIsPlayerSelf) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, IsPlayerSelf);
        }
        if (hasHeroId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, HeroId);
        }
        if (hasCampId) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, CampId);
        }
        if (hasPosition) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, Position);
        }
        if (hasFaceDirction) {
          size += pb::CodedOutputStream.ComputeFloatSize(6, FaceDirction);
        }
        {
          int dataSize = 0;
          foreach (int element in WeaponsList) {
            dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * weapons_.Count;
        }
        {
          int dataSize = 0;
          foreach (int element in SkillLevelsList) {
            dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * skillLevels_.Count;
        }
        if (hasSceneStartTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(9, SceneStartTime);
        }
        if (hasNickname) {
          size += pb::CodedOutputStream.ComputeStringSize(10, Nickname);
        }
        {
          int dataSize = 0;
          foreach (int element in ShopEquipmentsIdList) {
            dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * shopEquipmentsId_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CRC_Create ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_Create ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_Create ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_Create ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_Create ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_Create ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_Create ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CRC_Create ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CRC_Create ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_Create ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CRC_Create MakeReadOnly() {
      weapons_.MakeReadOnly();
      skillLevels_.MakeReadOnly();
      shopEquipmentsId_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CRC_Create prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CRC_Create, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CRC_Create cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CRC_Create result;
      
      private Msg_CRC_Create PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CRC_Create original = result;
          result = new Msg_CRC_Create();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CRC_Create MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CRC_Create.Descriptor; }
      }
      
      public override Msg_CRC_Create DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CRC_Create.DefaultInstance; }
      }
      
      public override Msg_CRC_Create BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CRC_Create) {
          return MergeFrom((Msg_CRC_Create) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CRC_Create other) {
        if (other == global::DashFireMessage.Msg_CRC_Create.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasIsPlayerSelf) {
          IsPlayerSelf = other.IsPlayerSelf;
        }
        if (other.HasHeroId) {
          HeroId = other.HeroId;
        }
        if (other.HasCampId) {
          CampId = other.CampId;
        }
        if (other.HasPosition) {
          MergePosition(other.Position);
        }
        if (other.HasFaceDirction) {
          FaceDirction = other.FaceDirction;
        }
        if (other.weapons_.Count != 0) {
          result.weapons_.Add(other.weapons_);
        }
        if (other.skillLevels_.Count != 0) {
          result.skillLevels_.Add(other.skillLevels_);
        }
        if (other.HasSceneStartTime) {
          SceneStartTime = other.SceneStartTime;
        }
        if (other.HasNickname) {
          Nickname = other.Nickname;
        }
        if (other.shopEquipmentsId_.Count != 0) {
          result.shopEquipmentsId_.Add(other.shopEquipmentsId_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRCCreateFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRCCreateFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 16: {
              result.hasIsPlayerSelf = input.ReadBool(ref result.isPlayerSelf_);
              break;
            }
            case 24: {
              result.hasHeroId = input.ReadInt32(ref result.heroId_);
              break;
            }
            case 32: {
              result.hasCampId = input.ReadInt32(ref result.campId_);
              break;
            }
            case 42: {
              global::DashFireMessage.Position.Builder subBuilder = global::DashFireMessage.Position.CreateBuilder();
              if (result.hasPosition) {
                subBuilder.MergeFrom(Position);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Position = subBuilder.BuildPartial();
              break;
            }
            case 53: {
              result.hasFaceDirction = input.ReadFloat(ref result.faceDirction_);
              break;
            }
            case 58:
            case 56: {
              input.ReadInt32Array(tag, field_name, result.weapons_);
              break;
            }
            case 66:
            case 64: {
              input.ReadInt32Array(tag, field_name, result.skillLevels_);
              break;
            }
            case 72: {
              result.hasSceneStartTime = input.ReadInt64(ref result.sceneStartTime_);
              break;
            }
            case 82: {
              result.hasNickname = input.ReadString(ref result.nickname_);
              break;
            }
            case 90:
            case 88: {
              input.ReadInt32Array(tag, field_name, result.shopEquipmentsId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasIsPlayerSelf {
        get { return result.hasIsPlayerSelf; }
      }
      public bool IsPlayerSelf {
        get { return result.IsPlayerSelf; }
        set { SetIsPlayerSelf(value); }
      }
      public Builder SetIsPlayerSelf(bool value) {
        PrepareBuilder();
        result.hasIsPlayerSelf = true;
        result.isPlayerSelf_ = value;
        return this;
      }
      public Builder ClearIsPlayerSelf() {
        PrepareBuilder();
        result.hasIsPlayerSelf = false;
        result.isPlayerSelf_ = false;
        return this;
      }
      
      public bool HasHeroId {
        get { return result.hasHeroId; }
      }
      public int HeroId {
        get { return result.HeroId; }
        set { SetHeroId(value); }
      }
      public Builder SetHeroId(int value) {
        PrepareBuilder();
        result.hasHeroId = true;
        result.heroId_ = value;
        return this;
      }
      public Builder ClearHeroId() {
        PrepareBuilder();
        result.hasHeroId = false;
        result.heroId_ = 0;
        return this;
      }
      
      public bool HasCampId {
        get { return result.hasCampId; }
      }
      public int CampId {
        get { return result.CampId; }
        set { SetCampId(value); }
      }
      public Builder SetCampId(int value) {
        PrepareBuilder();
        result.hasCampId = true;
        result.campId_ = value;
        return this;
      }
      public Builder ClearCampId() {
        PrepareBuilder();
        result.hasCampId = false;
        result.campId_ = 0;
        return this;
      }
      
      public bool HasPosition {
       get { return result.hasPosition; }
      }
      public global::DashFireMessage.Position Position {
        get { return result.Position; }
        set { SetPosition(value); }
      }
      public Builder SetPosition(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPosition = true;
        result.position_ = value;
        return this;
      }
      public Builder SetPosition(global::DashFireMessage.Position.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPosition = true;
        result.position_ = builderForValue.Build();
        return this;
      }
      public Builder MergePosition(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPosition &&
            result.position_ != global::DashFireMessage.Position.DefaultInstance) {
            result.position_ = global::DashFireMessage.Position.CreateBuilder(result.position_).MergeFrom(value).BuildPartial();
        } else {
          result.position_ = value;
        }
        result.hasPosition = true;
        return this;
      }
      public Builder ClearPosition() {
        PrepareBuilder();
        result.hasPosition = false;
        result.position_ = null;
        return this;
      }
      
      public bool HasFaceDirction {
        get { return result.hasFaceDirction; }
      }
      public float FaceDirction {
        get { return result.FaceDirction; }
        set { SetFaceDirction(value); }
      }
      public Builder SetFaceDirction(float value) {
        PrepareBuilder();
        result.hasFaceDirction = true;
        result.faceDirction_ = value;
        return this;
      }
      public Builder ClearFaceDirction() {
        PrepareBuilder();
        result.hasFaceDirction = false;
        result.faceDirction_ = 0F;
        return this;
      }
      
      public pbc::IPopsicleList<int> WeaponsList {
        get { return PrepareBuilder().weapons_; }
      }
      public int WeaponsCount {
        get { return result.WeaponsCount; }
      }
      public int GetWeapons(int index) {
        return result.GetWeapons(index);
      }
      public Builder SetWeapons(int index, int value) {
        PrepareBuilder();
        result.weapons_[index] = value;
        return this;
      }
      public Builder AddWeapons(int value) {
        PrepareBuilder();
        result.weapons_.Add(value);
        return this;
      }
      public Builder AddRangeWeapons(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.weapons_.Add(values);
        return this;
      }
      public Builder ClearWeapons() {
        PrepareBuilder();
        result.weapons_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<int> SkillLevelsList {
        get { return PrepareBuilder().skillLevels_; }
      }
      public int SkillLevelsCount {
        get { return result.SkillLevelsCount; }
      }
      public int GetSkillLevels(int index) {
        return result.GetSkillLevels(index);
      }
      public Builder SetSkillLevels(int index, int value) {
        PrepareBuilder();
        result.skillLevels_[index] = value;
        return this;
      }
      public Builder AddSkillLevels(int value) {
        PrepareBuilder();
        result.skillLevels_.Add(value);
        return this;
      }
      public Builder AddRangeSkillLevels(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.skillLevels_.Add(values);
        return this;
      }
      public Builder ClearSkillLevels() {
        PrepareBuilder();
        result.skillLevels_.Clear();
        return this;
      }
      
      public bool HasSceneStartTime {
        get { return result.hasSceneStartTime; }
      }
      public long SceneStartTime {
        get { return result.SceneStartTime; }
        set { SetSceneStartTime(value); }
      }
      public Builder SetSceneStartTime(long value) {
        PrepareBuilder();
        result.hasSceneStartTime = true;
        result.sceneStartTime_ = value;
        return this;
      }
      public Builder ClearSceneStartTime() {
        PrepareBuilder();
        result.hasSceneStartTime = false;
        result.sceneStartTime_ = 0L;
        return this;
      }
      
      public bool HasNickname {
        get { return result.hasNickname; }
      }
      public string Nickname {
        get { return result.Nickname; }
        set { SetNickname(value); }
      }
      public Builder SetNickname(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNickname = true;
        result.nickname_ = value;
        return this;
      }
      public Builder ClearNickname() {
        PrepareBuilder();
        result.hasNickname = false;
        result.nickname_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<int> ShopEquipmentsIdList {
        get { return PrepareBuilder().shopEquipmentsId_; }
      }
      public int ShopEquipmentsIdCount {
        get { return result.ShopEquipmentsIdCount; }
      }
      public int GetShopEquipmentsId(int index) {
        return result.GetShopEquipmentsId(index);
      }
      public Builder SetShopEquipmentsId(int index, int value) {
        PrepareBuilder();
        result.shopEquipmentsId_[index] = value;
        return this;
      }
      public Builder AddShopEquipmentsId(int value) {
        PrepareBuilder();
        result.shopEquipmentsId_.Add(value);
        return this;
      }
      public Builder AddRangeShopEquipmentsId(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.shopEquipmentsId_.Add(values);
        return this;
      }
      public Builder ClearShopEquipmentsId() {
        PrepareBuilder();
        result.shopEquipmentsId_.Clear();
        return this;
      }
    }
    static Msg_CRC_Create() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_Enter : pb::GeneratedMessage<Msg_RC_Enter, Msg_RC_Enter.Builder> {
    private Msg_RC_Enter() { }
    private static readonly Msg_RC_Enter defaultInstance = new Msg_RC_Enter().MakeReadOnly();
    private static readonly string[] _msgRCEnterFieldNames = new string[] { "camp_id", "face_dir", "hero_id", "is_moving", "move_dir", "position", "role_id" };
    private static readonly uint[] _msgRCEnterFieldTags = new uint[] { 24, 45, 16, 48, 61, 34, 8 };
    public static Msg_RC_Enter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_Enter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_Enter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_Enter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_Enter, Msg_RC_Enter.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_Enter__FieldAccessorTable; }
    }
    
    public const int RoleIdFieldNumber = 1;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int HeroIdFieldNumber = 2;
    private bool hasHeroId;
    private int heroId_;
    public bool HasHeroId {
      get { return hasHeroId; }
    }
    public int HeroId {
      get { return heroId_; }
    }
    
    public const int CampIdFieldNumber = 3;
    private bool hasCampId;
    private int campId_;
    public bool HasCampId {
      get { return hasCampId; }
    }
    public int CampId {
      get { return campId_; }
    }
    
    public const int PositionFieldNumber = 4;
    private bool hasPosition;
    private global::DashFireMessage.Position position_;
    public bool HasPosition {
      get { return hasPosition; }
    }
    public global::DashFireMessage.Position Position {
      get { return position_ ?? global::DashFireMessage.Position.DefaultInstance; }
    }
    
    public const int FaceDirFieldNumber = 5;
    private bool hasFaceDir;
    private float faceDir_;
    public bool HasFaceDir {
      get { return hasFaceDir; }
    }
    public float FaceDir {
      get { return faceDir_; }
    }
    
    public const int IsMovingFieldNumber = 6;
    private bool hasIsMoving;
    private bool isMoving_;
    public bool HasIsMoving {
      get { return hasIsMoving; }
    }
    public bool IsMoving {
      get { return isMoving_; }
    }
    
    public const int MoveDirFieldNumber = 7;
    private bool hasMoveDir;
    private float moveDir_;
    public bool HasMoveDir {
      get { return hasMoveDir; }
    }
    public float MoveDir {
      get { return moveDir_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoleId) return false;
        if (!hasHeroId) return false;
        if (!hasCampId) return false;
        if (!hasPosition) return false;
        if (!hasFaceDir) return false;
        if (!hasIsMoving) return false;
        if (!hasMoveDir) return false;
        if (!Position.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCEnterFieldNames;
      if (hasRoleId) {
        output.WriteInt32(1, field_names[6], RoleId);
      }
      if (hasHeroId) {
        output.WriteInt32(2, field_names[2], HeroId);
      }
      if (hasCampId) {
        output.WriteInt32(3, field_names[0], CampId);
      }
      if (hasPosition) {
        output.WriteMessage(4, field_names[5], Position);
      }
      if (hasFaceDir) {
        output.WriteFloat(5, field_names[1], FaceDir);
      }
      if (hasIsMoving) {
        output.WriteBool(6, field_names[3], IsMoving);
      }
      if (hasMoveDir) {
        output.WriteFloat(7, field_names[4], MoveDir);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoleId);
        }
        if (hasHeroId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, HeroId);
        }
        if (hasCampId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, CampId);
        }
        if (hasPosition) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Position);
        }
        if (hasFaceDir) {
          size += pb::CodedOutputStream.ComputeFloatSize(5, FaceDir);
        }
        if (hasIsMoving) {
          size += pb::CodedOutputStream.ComputeBoolSize(6, IsMoving);
        }
        if (hasMoveDir) {
          size += pb::CodedOutputStream.ComputeFloatSize(7, MoveDir);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_Enter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_Enter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_Enter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_Enter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_Enter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_Enter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_Enter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_Enter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_Enter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_Enter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_Enter MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_Enter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_Enter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_Enter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_Enter result;
      
      private Msg_RC_Enter PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_Enter original = result;
          result = new Msg_RC_Enter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_Enter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_Enter.Descriptor; }
      }
      
      public override Msg_RC_Enter DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_Enter.DefaultInstance; }
      }
      
      public override Msg_RC_Enter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_Enter) {
          return MergeFrom((Msg_RC_Enter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_Enter other) {
        if (other == global::DashFireMessage.Msg_RC_Enter.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasHeroId) {
          HeroId = other.HeroId;
        }
        if (other.HasCampId) {
          CampId = other.CampId;
        }
        if (other.HasPosition) {
          MergePosition(other.Position);
        }
        if (other.HasFaceDir) {
          FaceDir = other.FaceDir;
        }
        if (other.HasIsMoving) {
          IsMoving = other.IsMoving;
        }
        if (other.HasMoveDir) {
          MoveDir = other.MoveDir;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCEnterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCEnterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 16: {
              result.hasHeroId = input.ReadInt32(ref result.heroId_);
              break;
            }
            case 24: {
              result.hasCampId = input.ReadInt32(ref result.campId_);
              break;
            }
            case 34: {
              global::DashFireMessage.Position.Builder subBuilder = global::DashFireMessage.Position.CreateBuilder();
              if (result.hasPosition) {
                subBuilder.MergeFrom(Position);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Position = subBuilder.BuildPartial();
              break;
            }
            case 45: {
              result.hasFaceDir = input.ReadFloat(ref result.faceDir_);
              break;
            }
            case 48: {
              result.hasIsMoving = input.ReadBool(ref result.isMoving_);
              break;
            }
            case 61: {
              result.hasMoveDir = input.ReadFloat(ref result.moveDir_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasHeroId {
        get { return result.hasHeroId; }
      }
      public int HeroId {
        get { return result.HeroId; }
        set { SetHeroId(value); }
      }
      public Builder SetHeroId(int value) {
        PrepareBuilder();
        result.hasHeroId = true;
        result.heroId_ = value;
        return this;
      }
      public Builder ClearHeroId() {
        PrepareBuilder();
        result.hasHeroId = false;
        result.heroId_ = 0;
        return this;
      }
      
      public bool HasCampId {
        get { return result.hasCampId; }
      }
      public int CampId {
        get { return result.CampId; }
        set { SetCampId(value); }
      }
      public Builder SetCampId(int value) {
        PrepareBuilder();
        result.hasCampId = true;
        result.campId_ = value;
        return this;
      }
      public Builder ClearCampId() {
        PrepareBuilder();
        result.hasCampId = false;
        result.campId_ = 0;
        return this;
      }
      
      public bool HasPosition {
       get { return result.hasPosition; }
      }
      public global::DashFireMessage.Position Position {
        get { return result.Position; }
        set { SetPosition(value); }
      }
      public Builder SetPosition(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPosition = true;
        result.position_ = value;
        return this;
      }
      public Builder SetPosition(global::DashFireMessage.Position.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPosition = true;
        result.position_ = builderForValue.Build();
        return this;
      }
      public Builder MergePosition(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPosition &&
            result.position_ != global::DashFireMessage.Position.DefaultInstance) {
            result.position_ = global::DashFireMessage.Position.CreateBuilder(result.position_).MergeFrom(value).BuildPartial();
        } else {
          result.position_ = value;
        }
        result.hasPosition = true;
        return this;
      }
      public Builder ClearPosition() {
        PrepareBuilder();
        result.hasPosition = false;
        result.position_ = null;
        return this;
      }
      
      public bool HasFaceDir {
        get { return result.hasFaceDir; }
      }
      public float FaceDir {
        get { return result.FaceDir; }
        set { SetFaceDir(value); }
      }
      public Builder SetFaceDir(float value) {
        PrepareBuilder();
        result.hasFaceDir = true;
        result.faceDir_ = value;
        return this;
      }
      public Builder ClearFaceDir() {
        PrepareBuilder();
        result.hasFaceDir = false;
        result.faceDir_ = 0F;
        return this;
      }
      
      public bool HasIsMoving {
        get { return result.hasIsMoving; }
      }
      public bool IsMoving {
        get { return result.IsMoving; }
        set { SetIsMoving(value); }
      }
      public Builder SetIsMoving(bool value) {
        PrepareBuilder();
        result.hasIsMoving = true;
        result.isMoving_ = value;
        return this;
      }
      public Builder ClearIsMoving() {
        PrepareBuilder();
        result.hasIsMoving = false;
        result.isMoving_ = false;
        return this;
      }
      
      public bool HasMoveDir {
        get { return result.hasMoveDir; }
      }
      public float MoveDir {
        get { return result.MoveDir; }
        set { SetMoveDir(value); }
      }
      public Builder SetMoveDir(float value) {
        PrepareBuilder();
        result.hasMoveDir = true;
        result.moveDir_ = value;
        return this;
      }
      public Builder ClearMoveDir() {
        PrepareBuilder();
        result.hasMoveDir = false;
        result.moveDir_ = 0F;
        return this;
      }
    }
    static Msg_RC_Enter() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_Disappear : pb::GeneratedMessage<Msg_RC_Disappear, Msg_RC_Disappear.Builder> {
    private Msg_RC_Disappear() { }
    private static readonly Msg_RC_Disappear defaultInstance = new Msg_RC_Disappear().MakeReadOnly();
    private static readonly string[] _msgRCDisappearFieldNames = new string[] { "role_id" };
    private static readonly uint[] _msgRCDisappearFieldTags = new uint[] { 8 };
    public static Msg_RC_Disappear DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_Disappear DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_Disappear ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_Disappear__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_Disappear, Msg_RC_Disappear.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_Disappear__FieldAccessorTable; }
    }
    
    public const int RoleIdFieldNumber = 1;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoleId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCDisappearFieldNames;
      if (hasRoleId) {
        output.WriteInt32(1, field_names[0], RoleId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoleId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_Disappear ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_Disappear ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_Disappear ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_Disappear ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_Disappear ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_Disappear ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_Disappear ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_Disappear ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_Disappear ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_Disappear ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_Disappear MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_Disappear prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_Disappear, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_Disappear cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_Disappear result;
      
      private Msg_RC_Disappear PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_Disappear original = result;
          result = new Msg_RC_Disappear();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_Disappear MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_Disappear.Descriptor; }
      }
      
      public override Msg_RC_Disappear DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_Disappear.DefaultInstance; }
      }
      
      public override Msg_RC_Disappear BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_Disappear) {
          return MergeFrom((Msg_RC_Disappear) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_Disappear other) {
        if (other == global::DashFireMessage.Msg_RC_Disappear.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCDisappearFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCDisappearFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
    }
    static Msg_RC_Disappear() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_Dead : pb::GeneratedMessage<Msg_RC_Dead, Msg_RC_Dead.Builder> {
    private Msg_RC_Dead() { }
    private static readonly Msg_RC_Dead defaultInstance = new Msg_RC_Dead().MakeReadOnly();
    private static readonly string[] _msgRCDeadFieldNames = new string[] { "role_id", "send_time" };
    private static readonly uint[] _msgRCDeadFieldTags = new uint[] { 16, 8 };
    public static Msg_RC_Dead DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_Dead DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_Dead ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_Dead__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_Dead, Msg_RC_Dead.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_Dead__FieldAccessorTable; }
    }
    
    public const int SendTimeFieldNumber = 1;
    private bool hasSendTime;
    private long sendTime_;
    public bool HasSendTime {
      get { return hasSendTime; }
    }
    public long SendTime {
      get { return sendTime_; }
    }
    
    public const int RoleIdFieldNumber = 2;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSendTime) return false;
        if (!hasRoleId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCDeadFieldNames;
      if (hasSendTime) {
        output.WriteInt64(1, field_names[1], SendTime);
      }
      if (hasRoleId) {
        output.WriteInt32(2, field_names[0], RoleId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSendTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, SendTime);
        }
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, RoleId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_Dead ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_Dead ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_Dead ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_Dead ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_Dead ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_Dead ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_Dead ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_Dead ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_Dead ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_Dead ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_Dead MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_Dead prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_Dead, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_Dead cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_Dead result;
      
      private Msg_RC_Dead PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_Dead original = result;
          result = new Msg_RC_Dead();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_Dead MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_Dead.Descriptor; }
      }
      
      public override Msg_RC_Dead DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_Dead.DefaultInstance; }
      }
      
      public override Msg_RC_Dead BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_Dead) {
          return MergeFrom((Msg_RC_Dead) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_Dead other) {
        if (other == global::DashFireMessage.Msg_RC_Dead.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSendTime) {
          SendTime = other.SendTime;
        }
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCDeadFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCDeadFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSendTime = input.ReadInt64(ref result.sendTime_);
              break;
            }
            case 16: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSendTime {
        get { return result.hasSendTime; }
      }
      public long SendTime {
        get { return result.SendTime; }
        set { SetSendTime(value); }
      }
      public Builder SetSendTime(long value) {
        PrepareBuilder();
        result.hasSendTime = true;
        result.sendTime_ = value;
        return this;
      }
      public Builder ClearSendTime() {
        PrepareBuilder();
        result.hasSendTime = false;
        result.sendTime_ = 0L;
        return this;
      }
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
    }
    static Msg_RC_Dead() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_Revive : pb::GeneratedMessage<Msg_RC_Revive, Msg_RC_Revive.Builder> {
    private Msg_RC_Revive() { }
    private static readonly Msg_RC_Revive defaultInstance = new Msg_RC_Revive().MakeReadOnly();
    private static readonly string[] _msgRCReviveFieldNames = new string[] { "camp_id", "face_dirction", "hero_id", "is_player_self", "position", "role_id" };
    private static readonly uint[] _msgRCReviveFieldTags = new uint[] { 32, 53, 24, 16, 42, 8 };
    public static Msg_RC_Revive DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_Revive DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_Revive ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_Revive__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_Revive, Msg_RC_Revive.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_Revive__FieldAccessorTable; }
    }
    
    public const int RoleIdFieldNumber = 1;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int IsPlayerSelfFieldNumber = 2;
    private bool hasIsPlayerSelf;
    private bool isPlayerSelf_;
    public bool HasIsPlayerSelf {
      get { return hasIsPlayerSelf; }
    }
    public bool IsPlayerSelf {
      get { return isPlayerSelf_; }
    }
    
    public const int HeroIdFieldNumber = 3;
    private bool hasHeroId;
    private int heroId_;
    public bool HasHeroId {
      get { return hasHeroId; }
    }
    public int HeroId {
      get { return heroId_; }
    }
    
    public const int CampIdFieldNumber = 4;
    private bool hasCampId;
    private int campId_;
    public bool HasCampId {
      get { return hasCampId; }
    }
    public int CampId {
      get { return campId_; }
    }
    
    public const int PositionFieldNumber = 5;
    private bool hasPosition;
    private global::DashFireMessage.Position position_;
    public bool HasPosition {
      get { return hasPosition; }
    }
    public global::DashFireMessage.Position Position {
      get { return position_ ?? global::DashFireMessage.Position.DefaultInstance; }
    }
    
    public const int FaceDirctionFieldNumber = 6;
    private bool hasFaceDirction;
    private float faceDirction_;
    public bool HasFaceDirction {
      get { return hasFaceDirction; }
    }
    public float FaceDirction {
      get { return faceDirction_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoleId) return false;
        if (!hasIsPlayerSelf) return false;
        if (!hasHeroId) return false;
        if (!hasCampId) return false;
        if (!hasPosition) return false;
        if (!hasFaceDirction) return false;
        if (!Position.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCReviveFieldNames;
      if (hasRoleId) {
        output.WriteInt32(1, field_names[5], RoleId);
      }
      if (hasIsPlayerSelf) {
        output.WriteBool(2, field_names[3], IsPlayerSelf);
      }
      if (hasHeroId) {
        output.WriteInt32(3, field_names[2], HeroId);
      }
      if (hasCampId) {
        output.WriteInt32(4, field_names[0], CampId);
      }
      if (hasPosition) {
        output.WriteMessage(5, field_names[4], Position);
      }
      if (hasFaceDirction) {
        output.WriteFloat(6, field_names[1], FaceDirction);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoleId);
        }
        if (hasIsPlayerSelf) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, IsPlayerSelf);
        }
        if (hasHeroId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, HeroId);
        }
        if (hasCampId) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, CampId);
        }
        if (hasPosition) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, Position);
        }
        if (hasFaceDirction) {
          size += pb::CodedOutputStream.ComputeFloatSize(6, FaceDirction);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_Revive ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_Revive ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_Revive ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_Revive ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_Revive ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_Revive ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_Revive ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_Revive ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_Revive ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_Revive ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_Revive MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_Revive prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_Revive, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_Revive cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_Revive result;
      
      private Msg_RC_Revive PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_Revive original = result;
          result = new Msg_RC_Revive();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_Revive MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_Revive.Descriptor; }
      }
      
      public override Msg_RC_Revive DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_Revive.DefaultInstance; }
      }
      
      public override Msg_RC_Revive BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_Revive) {
          return MergeFrom((Msg_RC_Revive) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_Revive other) {
        if (other == global::DashFireMessage.Msg_RC_Revive.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasIsPlayerSelf) {
          IsPlayerSelf = other.IsPlayerSelf;
        }
        if (other.HasHeroId) {
          HeroId = other.HeroId;
        }
        if (other.HasCampId) {
          CampId = other.CampId;
        }
        if (other.HasPosition) {
          MergePosition(other.Position);
        }
        if (other.HasFaceDirction) {
          FaceDirction = other.FaceDirction;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCReviveFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCReviveFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 16: {
              result.hasIsPlayerSelf = input.ReadBool(ref result.isPlayerSelf_);
              break;
            }
            case 24: {
              result.hasHeroId = input.ReadInt32(ref result.heroId_);
              break;
            }
            case 32: {
              result.hasCampId = input.ReadInt32(ref result.campId_);
              break;
            }
            case 42: {
              global::DashFireMessage.Position.Builder subBuilder = global::DashFireMessage.Position.CreateBuilder();
              if (result.hasPosition) {
                subBuilder.MergeFrom(Position);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Position = subBuilder.BuildPartial();
              break;
            }
            case 53: {
              result.hasFaceDirction = input.ReadFloat(ref result.faceDirction_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasIsPlayerSelf {
        get { return result.hasIsPlayerSelf; }
      }
      public bool IsPlayerSelf {
        get { return result.IsPlayerSelf; }
        set { SetIsPlayerSelf(value); }
      }
      public Builder SetIsPlayerSelf(bool value) {
        PrepareBuilder();
        result.hasIsPlayerSelf = true;
        result.isPlayerSelf_ = value;
        return this;
      }
      public Builder ClearIsPlayerSelf() {
        PrepareBuilder();
        result.hasIsPlayerSelf = false;
        result.isPlayerSelf_ = false;
        return this;
      }
      
      public bool HasHeroId {
        get { return result.hasHeroId; }
      }
      public int HeroId {
        get { return result.HeroId; }
        set { SetHeroId(value); }
      }
      public Builder SetHeroId(int value) {
        PrepareBuilder();
        result.hasHeroId = true;
        result.heroId_ = value;
        return this;
      }
      public Builder ClearHeroId() {
        PrepareBuilder();
        result.hasHeroId = false;
        result.heroId_ = 0;
        return this;
      }
      
      public bool HasCampId {
        get { return result.hasCampId; }
      }
      public int CampId {
        get { return result.CampId; }
        set { SetCampId(value); }
      }
      public Builder SetCampId(int value) {
        PrepareBuilder();
        result.hasCampId = true;
        result.campId_ = value;
        return this;
      }
      public Builder ClearCampId() {
        PrepareBuilder();
        result.hasCampId = false;
        result.campId_ = 0;
        return this;
      }
      
      public bool HasPosition {
       get { return result.hasPosition; }
      }
      public global::DashFireMessage.Position Position {
        get { return result.Position; }
        set { SetPosition(value); }
      }
      public Builder SetPosition(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPosition = true;
        result.position_ = value;
        return this;
      }
      public Builder SetPosition(global::DashFireMessage.Position.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPosition = true;
        result.position_ = builderForValue.Build();
        return this;
      }
      public Builder MergePosition(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPosition &&
            result.position_ != global::DashFireMessage.Position.DefaultInstance) {
            result.position_ = global::DashFireMessage.Position.CreateBuilder(result.position_).MergeFrom(value).BuildPartial();
        } else {
          result.position_ = value;
        }
        result.hasPosition = true;
        return this;
      }
      public Builder ClearPosition() {
        PrepareBuilder();
        result.hasPosition = false;
        result.position_ = null;
        return this;
      }
      
      public bool HasFaceDirction {
        get { return result.hasFaceDirction; }
      }
      public float FaceDirction {
        get { return result.FaceDirction; }
        set { SetFaceDirction(value); }
      }
      public Builder SetFaceDirction(float value) {
        PrepareBuilder();
        result.hasFaceDirction = true;
        result.faceDirction_ = value;
        return this;
      }
      public Builder ClearFaceDirction() {
        PrepareBuilder();
        result.hasFaceDirction = false;
        result.faceDirction_ = 0F;
        return this;
      }
    }
    static Msg_RC_Revive() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CRC_Exit : pb::GeneratedMessage<Msg_CRC_Exit, Msg_CRC_Exit.Builder> {
    private Msg_CRC_Exit() { }
    private static readonly Msg_CRC_Exit defaultInstance = new Msg_CRC_Exit().MakeReadOnly();
    private static readonly string[] _msgCRCExitFieldNames = new string[] { "role_id" };
    private static readonly uint[] _msgCRCExitFieldTags = new uint[] { 8 };
    public static Msg_CRC_Exit DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CRC_Exit DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CRC_Exit ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_Exit__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CRC_Exit, Msg_CRC_Exit.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_Exit__FieldAccessorTable; }
    }
    
    public const int RoleIdFieldNumber = 1;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRCExitFieldNames;
      if (hasRoleId) {
        output.WriteInt32(1, field_names[0], RoleId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoleId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CRC_Exit ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_Exit ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_Exit ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_Exit ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_Exit ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_Exit ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_Exit ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CRC_Exit ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CRC_Exit ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_Exit ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CRC_Exit MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CRC_Exit prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CRC_Exit, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CRC_Exit cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CRC_Exit result;
      
      private Msg_CRC_Exit PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CRC_Exit original = result;
          result = new Msg_CRC_Exit();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CRC_Exit MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CRC_Exit.Descriptor; }
      }
      
      public override Msg_CRC_Exit DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CRC_Exit.DefaultInstance; }
      }
      
      public override Msg_CRC_Exit BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CRC_Exit) {
          return MergeFrom((Msg_CRC_Exit) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CRC_Exit other) {
        if (other == global::DashFireMessage.Msg_CRC_Exit.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRCExitFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRCExitFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
    }
    static Msg_CRC_Exit() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CRC_MoveStart : pb::GeneratedMessage<Msg_CRC_MoveStart, Msg_CRC_MoveStart.Builder> {
    private Msg_CRC_MoveStart() { }
    private static readonly Msg_CRC_MoveStart defaultInstance = new Msg_CRC_MoveStart().MakeReadOnly();
    private static readonly string[] _msgCRCMoveStartFieldNames = new string[] { "action_id", "dir", "position", "role_id", "send_time" };
    private static readonly uint[] _msgCRCMoveStartFieldTags = new uint[] { 8, 45, 34, 24, 16 };
    public static Msg_CRC_MoveStart DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CRC_MoveStart DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CRC_MoveStart ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_MoveStart__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CRC_MoveStart, Msg_CRC_MoveStart.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_MoveStart__FieldAccessorTable; }
    }
    
    public const int ActionIdFieldNumber = 1;
    private bool hasActionId;
    private long actionId_;
    public bool HasActionId {
      get { return hasActionId; }
    }
    public long ActionId {
      get { return actionId_; }
    }
    
    public const int SendTimeFieldNumber = 2;
    private bool hasSendTime;
    private long sendTime_;
    public bool HasSendTime {
      get { return hasSendTime; }
    }
    public long SendTime {
      get { return sendTime_; }
    }
    
    public const int RoleIdFieldNumber = 3;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int PositionFieldNumber = 4;
    private bool hasPosition;
    private global::DashFireMessage.Position position_;
    public bool HasPosition {
      get { return hasPosition; }
    }
    public global::DashFireMessage.Position Position {
      get { return position_ ?? global::DashFireMessage.Position.DefaultInstance; }
    }
    
    public const int DirFieldNumber = 5;
    private bool hasDir;
    private float dir_;
    public bool HasDir {
      get { return hasDir; }
    }
    public float Dir {
      get { return dir_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasDir) return false;
        if (HasPosition) {
          if (!Position.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRCMoveStartFieldNames;
      if (hasActionId) {
        output.WriteInt64(1, field_names[0], ActionId);
      }
      if (hasSendTime) {
        output.WriteInt64(2, field_names[4], SendTime);
      }
      if (hasRoleId) {
        output.WriteInt32(3, field_names[3], RoleId);
      }
      if (hasPosition) {
        output.WriteMessage(4, field_names[2], Position);
      }
      if (hasDir) {
        output.WriteFloat(5, field_names[1], Dir);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasActionId) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, ActionId);
        }
        if (hasSendTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, SendTime);
        }
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, RoleId);
        }
        if (hasPosition) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Position);
        }
        if (hasDir) {
          size += pb::CodedOutputStream.ComputeFloatSize(5, Dir);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CRC_MoveStart ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_MoveStart ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_MoveStart ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_MoveStart ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_MoveStart ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_MoveStart ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_MoveStart ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CRC_MoveStart ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CRC_MoveStart ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_MoveStart ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CRC_MoveStart MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CRC_MoveStart prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CRC_MoveStart, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CRC_MoveStart cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CRC_MoveStart result;
      
      private Msg_CRC_MoveStart PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CRC_MoveStart original = result;
          result = new Msg_CRC_MoveStart();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CRC_MoveStart MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CRC_MoveStart.Descriptor; }
      }
      
      public override Msg_CRC_MoveStart DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CRC_MoveStart.DefaultInstance; }
      }
      
      public override Msg_CRC_MoveStart BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CRC_MoveStart) {
          return MergeFrom((Msg_CRC_MoveStart) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CRC_MoveStart other) {
        if (other == global::DashFireMessage.Msg_CRC_MoveStart.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasActionId) {
          ActionId = other.ActionId;
        }
        if (other.HasSendTime) {
          SendTime = other.SendTime;
        }
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasPosition) {
          MergePosition(other.Position);
        }
        if (other.HasDir) {
          Dir = other.Dir;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRCMoveStartFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRCMoveStartFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasActionId = input.ReadInt64(ref result.actionId_);
              break;
            }
            case 16: {
              result.hasSendTime = input.ReadInt64(ref result.sendTime_);
              break;
            }
            case 24: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 34: {
              global::DashFireMessage.Position.Builder subBuilder = global::DashFireMessage.Position.CreateBuilder();
              if (result.hasPosition) {
                subBuilder.MergeFrom(Position);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Position = subBuilder.BuildPartial();
              break;
            }
            case 45: {
              result.hasDir = input.ReadFloat(ref result.dir_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasActionId {
        get { return result.hasActionId; }
      }
      public long ActionId {
        get { return result.ActionId; }
        set { SetActionId(value); }
      }
      public Builder SetActionId(long value) {
        PrepareBuilder();
        result.hasActionId = true;
        result.actionId_ = value;
        return this;
      }
      public Builder ClearActionId() {
        PrepareBuilder();
        result.hasActionId = false;
        result.actionId_ = 0L;
        return this;
      }
      
      public bool HasSendTime {
        get { return result.hasSendTime; }
      }
      public long SendTime {
        get { return result.SendTime; }
        set { SetSendTime(value); }
      }
      public Builder SetSendTime(long value) {
        PrepareBuilder();
        result.hasSendTime = true;
        result.sendTime_ = value;
        return this;
      }
      public Builder ClearSendTime() {
        PrepareBuilder();
        result.hasSendTime = false;
        result.sendTime_ = 0L;
        return this;
      }
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasPosition {
       get { return result.hasPosition; }
      }
      public global::DashFireMessage.Position Position {
        get { return result.Position; }
        set { SetPosition(value); }
      }
      public Builder SetPosition(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPosition = true;
        result.position_ = value;
        return this;
      }
      public Builder SetPosition(global::DashFireMessage.Position.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPosition = true;
        result.position_ = builderForValue.Build();
        return this;
      }
      public Builder MergePosition(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPosition &&
            result.position_ != global::DashFireMessage.Position.DefaultInstance) {
            result.position_ = global::DashFireMessage.Position.CreateBuilder(result.position_).MergeFrom(value).BuildPartial();
        } else {
          result.position_ = value;
        }
        result.hasPosition = true;
        return this;
      }
      public Builder ClearPosition() {
        PrepareBuilder();
        result.hasPosition = false;
        result.position_ = null;
        return this;
      }
      
      public bool HasDir {
        get { return result.hasDir; }
      }
      public float Dir {
        get { return result.Dir; }
        set { SetDir(value); }
      }
      public Builder SetDir(float value) {
        PrepareBuilder();
        result.hasDir = true;
        result.dir_ = value;
        return this;
      }
      public Builder ClearDir() {
        PrepareBuilder();
        result.hasDir = false;
        result.dir_ = 0F;
        return this;
      }
    }
    static Msg_CRC_MoveStart() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CRC_MoveStop : pb::GeneratedMessage<Msg_CRC_MoveStop, Msg_CRC_MoveStop.Builder> {
    private Msg_CRC_MoveStop() { }
    private static readonly Msg_CRC_MoveStop defaultInstance = new Msg_CRC_MoveStop().MakeReadOnly();
    private static readonly string[] _msgCRCMoveStopFieldNames = new string[] { "action_id", "role_id", "send_time" };
    private static readonly uint[] _msgCRCMoveStopFieldTags = new uint[] { 8, 24, 16 };
    public static Msg_CRC_MoveStop DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CRC_MoveStop DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CRC_MoveStop ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_MoveStop__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CRC_MoveStop, Msg_CRC_MoveStop.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_MoveStop__FieldAccessorTable; }
    }
    
    public const int ActionIdFieldNumber = 1;
    private bool hasActionId;
    private long actionId_;
    public bool HasActionId {
      get { return hasActionId; }
    }
    public long ActionId {
      get { return actionId_; }
    }
    
    public const int SendTimeFieldNumber = 2;
    private bool hasSendTime;
    private long sendTime_;
    public bool HasSendTime {
      get { return hasSendTime; }
    }
    public long SendTime {
      get { return sendTime_; }
    }
    
    public const int RoleIdFieldNumber = 3;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRCMoveStopFieldNames;
      if (hasActionId) {
        output.WriteInt64(1, field_names[0], ActionId);
      }
      if (hasSendTime) {
        output.WriteInt64(2, field_names[2], SendTime);
      }
      if (hasRoleId) {
        output.WriteInt32(3, field_names[1], RoleId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasActionId) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, ActionId);
        }
        if (hasSendTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, SendTime);
        }
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, RoleId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CRC_MoveStop ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_MoveStop ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_MoveStop ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_MoveStop ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_MoveStop ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_MoveStop ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_MoveStop ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CRC_MoveStop ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CRC_MoveStop ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_MoveStop ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CRC_MoveStop MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CRC_MoveStop prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CRC_MoveStop, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CRC_MoveStop cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CRC_MoveStop result;
      
      private Msg_CRC_MoveStop PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CRC_MoveStop original = result;
          result = new Msg_CRC_MoveStop();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CRC_MoveStop MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CRC_MoveStop.Descriptor; }
      }
      
      public override Msg_CRC_MoveStop DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CRC_MoveStop.DefaultInstance; }
      }
      
      public override Msg_CRC_MoveStop BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CRC_MoveStop) {
          return MergeFrom((Msg_CRC_MoveStop) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CRC_MoveStop other) {
        if (other == global::DashFireMessage.Msg_CRC_MoveStop.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasActionId) {
          ActionId = other.ActionId;
        }
        if (other.HasSendTime) {
          SendTime = other.SendTime;
        }
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRCMoveStopFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRCMoveStopFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasActionId = input.ReadInt64(ref result.actionId_);
              break;
            }
            case 16: {
              result.hasSendTime = input.ReadInt64(ref result.sendTime_);
              break;
            }
            case 24: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasActionId {
        get { return result.hasActionId; }
      }
      public long ActionId {
        get { return result.ActionId; }
        set { SetActionId(value); }
      }
      public Builder SetActionId(long value) {
        PrepareBuilder();
        result.hasActionId = true;
        result.actionId_ = value;
        return this;
      }
      public Builder ClearActionId() {
        PrepareBuilder();
        result.hasActionId = false;
        result.actionId_ = 0L;
        return this;
      }
      
      public bool HasSendTime {
        get { return result.hasSendTime; }
      }
      public long SendTime {
        get { return result.SendTime; }
        set { SetSendTime(value); }
      }
      public Builder SetSendTime(long value) {
        PrepareBuilder();
        result.hasSendTime = true;
        result.sendTime_ = value;
        return this;
      }
      public Builder ClearSendTime() {
        PrepareBuilder();
        result.hasSendTime = false;
        result.sendTime_ = 0L;
        return this;
      }
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
    }
    static Msg_CRC_MoveStop() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_MoveMeetObstacle : pb::GeneratedMessage<Msg_RC_MoveMeetObstacle, Msg_RC_MoveMeetObstacle.Builder> {
    private Msg_RC_MoveMeetObstacle() { }
    private static readonly Msg_RC_MoveMeetObstacle defaultInstance = new Msg_RC_MoveMeetObstacle().MakeReadOnly();
    private static readonly string[] _msgRCMoveMeetObstacleFieldNames = new string[] { "cur_pos_x", "cur_pos_y", "cur_pos_z", "role_id" };
    private static readonly uint[] _msgRCMoveMeetObstacleFieldTags = new uint[] { 21, 29, 37, 8 };
    public static Msg_RC_MoveMeetObstacle DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_MoveMeetObstacle DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_MoveMeetObstacle ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_MoveMeetObstacle__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_MoveMeetObstacle, Msg_RC_MoveMeetObstacle.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_MoveMeetObstacle__FieldAccessorTable; }
    }
    
    public const int RoleIdFieldNumber = 1;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int CurPosXFieldNumber = 2;
    private bool hasCurPosX;
    private float curPosX_;
    public bool HasCurPosX {
      get { return hasCurPosX; }
    }
    public float CurPosX {
      get { return curPosX_; }
    }
    
    public const int CurPosYFieldNumber = 3;
    private bool hasCurPosY;
    private float curPosY_;
    public bool HasCurPosY {
      get { return hasCurPosY; }
    }
    public float CurPosY {
      get { return curPosY_; }
    }
    
    public const int CurPosZFieldNumber = 4;
    private bool hasCurPosZ;
    private float curPosZ_;
    public bool HasCurPosZ {
      get { return hasCurPosZ; }
    }
    public float CurPosZ {
      get { return curPosZ_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoleId) return false;
        if (!hasCurPosX) return false;
        if (!hasCurPosY) return false;
        if (!hasCurPosZ) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCMoveMeetObstacleFieldNames;
      if (hasRoleId) {
        output.WriteInt32(1, field_names[3], RoleId);
      }
      if (hasCurPosX) {
        output.WriteFloat(2, field_names[0], CurPosX);
      }
      if (hasCurPosY) {
        output.WriteFloat(3, field_names[1], CurPosY);
      }
      if (hasCurPosZ) {
        output.WriteFloat(4, field_names[2], CurPosZ);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoleId);
        }
        if (hasCurPosX) {
          size += pb::CodedOutputStream.ComputeFloatSize(2, CurPosX);
        }
        if (hasCurPosY) {
          size += pb::CodedOutputStream.ComputeFloatSize(3, CurPosY);
        }
        if (hasCurPosZ) {
          size += pb::CodedOutputStream.ComputeFloatSize(4, CurPosZ);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_MoveMeetObstacle ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_MoveMeetObstacle ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_MoveMeetObstacle ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_MoveMeetObstacle ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_MoveMeetObstacle ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_MoveMeetObstacle ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_MoveMeetObstacle ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_MoveMeetObstacle ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_MoveMeetObstacle ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_MoveMeetObstacle ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_MoveMeetObstacle MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_MoveMeetObstacle prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_MoveMeetObstacle, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_MoveMeetObstacle cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_MoveMeetObstacle result;
      
      private Msg_RC_MoveMeetObstacle PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_MoveMeetObstacle original = result;
          result = new Msg_RC_MoveMeetObstacle();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_MoveMeetObstacle MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_MoveMeetObstacle.Descriptor; }
      }
      
      public override Msg_RC_MoveMeetObstacle DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_MoveMeetObstacle.DefaultInstance; }
      }
      
      public override Msg_RC_MoveMeetObstacle BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_MoveMeetObstacle) {
          return MergeFrom((Msg_RC_MoveMeetObstacle) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_MoveMeetObstacle other) {
        if (other == global::DashFireMessage.Msg_RC_MoveMeetObstacle.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasCurPosX) {
          CurPosX = other.CurPosX;
        }
        if (other.HasCurPosY) {
          CurPosY = other.CurPosY;
        }
        if (other.HasCurPosZ) {
          CurPosZ = other.CurPosZ;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCMoveMeetObstacleFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCMoveMeetObstacleFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 21: {
              result.hasCurPosX = input.ReadFloat(ref result.curPosX_);
              break;
            }
            case 29: {
              result.hasCurPosY = input.ReadFloat(ref result.curPosY_);
              break;
            }
            case 37: {
              result.hasCurPosZ = input.ReadFloat(ref result.curPosZ_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasCurPosX {
        get { return result.hasCurPosX; }
      }
      public float CurPosX {
        get { return result.CurPosX; }
        set { SetCurPosX(value); }
      }
      public Builder SetCurPosX(float value) {
        PrepareBuilder();
        result.hasCurPosX = true;
        result.curPosX_ = value;
        return this;
      }
      public Builder ClearCurPosX() {
        PrepareBuilder();
        result.hasCurPosX = false;
        result.curPosX_ = 0F;
        return this;
      }
      
      public bool HasCurPosY {
        get { return result.hasCurPosY; }
      }
      public float CurPosY {
        get { return result.CurPosY; }
        set { SetCurPosY(value); }
      }
      public Builder SetCurPosY(float value) {
        PrepareBuilder();
        result.hasCurPosY = true;
        result.curPosY_ = value;
        return this;
      }
      public Builder ClearCurPosY() {
        PrepareBuilder();
        result.hasCurPosY = false;
        result.curPosY_ = 0F;
        return this;
      }
      
      public bool HasCurPosZ {
        get { return result.hasCurPosZ; }
      }
      public float CurPosZ {
        get { return result.CurPosZ; }
        set { SetCurPosZ(value); }
      }
      public Builder SetCurPosZ(float value) {
        PrepareBuilder();
        result.hasCurPosZ = true;
        result.curPosZ_ = value;
        return this;
      }
      public Builder ClearCurPosZ() {
        PrepareBuilder();
        result.hasCurPosZ = false;
        result.curPosZ_ = 0F;
        return this;
      }
    }
    static Msg_RC_MoveMeetObstacle() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CRC_Face : pb::GeneratedMessage<Msg_CRC_Face, Msg_CRC_Face.Builder> {
    private Msg_CRC_Face() { }
    private static readonly Msg_CRC_Face defaultInstance = new Msg_CRC_Face().MakeReadOnly();
    private static readonly string[] _msgCRCFaceFieldNames = new string[] { "face_direction", "role_id" };
    private static readonly uint[] _msgCRCFaceFieldTags = new uint[] { 21, 8 };
    public static Msg_CRC_Face DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CRC_Face DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CRC_Face ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_Face__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CRC_Face, Msg_CRC_Face.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_Face__FieldAccessorTable; }
    }
    
    public const int RoleIdFieldNumber = 1;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int FaceDirectionFieldNumber = 2;
    private bool hasFaceDirection;
    private float faceDirection_;
    public bool HasFaceDirection {
      get { return hasFaceDirection; }
    }
    public float FaceDirection {
      get { return faceDirection_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasFaceDirection) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRCFaceFieldNames;
      if (hasRoleId) {
        output.WriteInt32(1, field_names[1], RoleId);
      }
      if (hasFaceDirection) {
        output.WriteFloat(2, field_names[0], FaceDirection);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoleId);
        }
        if (hasFaceDirection) {
          size += pb::CodedOutputStream.ComputeFloatSize(2, FaceDirection);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CRC_Face ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_Face ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_Face ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_Face ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_Face ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_Face ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_Face ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CRC_Face ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CRC_Face ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_Face ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CRC_Face MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CRC_Face prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CRC_Face, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CRC_Face cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CRC_Face result;
      
      private Msg_CRC_Face PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CRC_Face original = result;
          result = new Msg_CRC_Face();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CRC_Face MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CRC_Face.Descriptor; }
      }
      
      public override Msg_CRC_Face DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CRC_Face.DefaultInstance; }
      }
      
      public override Msg_CRC_Face BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CRC_Face) {
          return MergeFrom((Msg_CRC_Face) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CRC_Face other) {
        if (other == global::DashFireMessage.Msg_CRC_Face.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasFaceDirection) {
          FaceDirection = other.FaceDirection;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRCFaceFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRCFaceFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 21: {
              result.hasFaceDirection = input.ReadFloat(ref result.faceDirection_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasFaceDirection {
        get { return result.hasFaceDirection; }
      }
      public float FaceDirection {
        get { return result.FaceDirection; }
        set { SetFaceDirection(value); }
      }
      public Builder SetFaceDirection(float value) {
        PrepareBuilder();
        result.hasFaceDirection = true;
        result.faceDirection_ = value;
        return this;
      }
      public Builder ClearFaceDirection() {
        PrepareBuilder();
        result.hasFaceDirection = false;
        result.faceDirection_ = 0F;
        return this;
      }
    }
    static Msg_CRC_Face() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CRC_Action : pb::GeneratedMessage<Msg_CRC_Action, Msg_CRC_Action.Builder> {
    private Msg_CRC_Action() { }
    private static readonly Msg_CRC_Action defaultInstance = new Msg_CRC_Action().MakeReadOnly();
    private static readonly string[] _msgCRCActionFieldNames = new string[] { "action_type", "role_id", "send_time" };
    private static readonly uint[] _msgCRCActionFieldTags = new uint[] { 24, 16, 8 };
    public static Msg_CRC_Action DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CRC_Action DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CRC_Action ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_Action__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CRC_Action, Msg_CRC_Action.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_Action__FieldAccessorTable; }
    }
    
    public const int SendTimeFieldNumber = 1;
    private bool hasSendTime;
    private long sendTime_;
    public bool HasSendTime {
      get { return hasSendTime; }
    }
    public long SendTime {
      get { return sendTime_; }
    }
    
    public const int RoleIdFieldNumber = 2;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int ActionTypeFieldNumber = 3;
    private bool hasActionType;
    private int actionType_;
    public bool HasActionType {
      get { return hasActionType; }
    }
    public int ActionType {
      get { return actionType_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasActionType) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRCActionFieldNames;
      if (hasSendTime) {
        output.WriteInt64(1, field_names[2], SendTime);
      }
      if (hasRoleId) {
        output.WriteInt32(2, field_names[1], RoleId);
      }
      if (hasActionType) {
        output.WriteInt32(3, field_names[0], ActionType);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSendTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, SendTime);
        }
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, RoleId);
        }
        if (hasActionType) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ActionType);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CRC_Action ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_Action ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_Action ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_Action ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_Action ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_Action ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_Action ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CRC_Action ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CRC_Action ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_Action ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CRC_Action MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CRC_Action prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CRC_Action, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CRC_Action cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CRC_Action result;
      
      private Msg_CRC_Action PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CRC_Action original = result;
          result = new Msg_CRC_Action();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CRC_Action MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CRC_Action.Descriptor; }
      }
      
      public override Msg_CRC_Action DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CRC_Action.DefaultInstance; }
      }
      
      public override Msg_CRC_Action BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CRC_Action) {
          return MergeFrom((Msg_CRC_Action) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CRC_Action other) {
        if (other == global::DashFireMessage.Msg_CRC_Action.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSendTime) {
          SendTime = other.SendTime;
        }
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasActionType) {
          ActionType = other.ActionType;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRCActionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRCActionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSendTime = input.ReadInt64(ref result.sendTime_);
              break;
            }
            case 16: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 24: {
              result.hasActionType = input.ReadInt32(ref result.actionType_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSendTime {
        get { return result.hasSendTime; }
      }
      public long SendTime {
        get { return result.SendTime; }
        set { SetSendTime(value); }
      }
      public Builder SetSendTime(long value) {
        PrepareBuilder();
        result.hasSendTime = true;
        result.sendTime_ = value;
        return this;
      }
      public Builder ClearSendTime() {
        PrepareBuilder();
        result.hasSendTime = false;
        result.sendTime_ = 0L;
        return this;
      }
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasActionType {
        get { return result.hasActionType; }
      }
      public int ActionType {
        get { return result.ActionType; }
        set { SetActionType(value); }
      }
      public Builder SetActionType(int value) {
        PrepareBuilder();
        result.hasActionType = true;
        result.actionType_ = value;
        return this;
      }
      public Builder ClearActionType() {
        PrepareBuilder();
        result.hasActionType = false;
        result.actionType_ = 0;
        return this;
      }
    }
    static Msg_CRC_Action() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CRC_Skill : pb::GeneratedMessage<Msg_CRC_Skill, Msg_CRC_Skill.Builder> {
    private Msg_CRC_Skill() { }
    private static readonly Msg_CRC_Skill defaultInstance = new Msg_CRC_Skill().MakeReadOnly();
    private static readonly string[] _msgCRCSkillFieldNames = new string[] { "face_direction", "item_id", "role_id", "send_time", "skill_id", "stand_pos", "target_angle", "target_id", "target_pos" };
    private static readonly uint[] _msgCRCSkillFieldTags = new uint[] { 77, 56, 16, 8, 24, 66, 53, 32, 42 };
    public static Msg_CRC_Skill DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CRC_Skill DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CRC_Skill ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_Skill__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CRC_Skill, Msg_CRC_Skill.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_Skill__FieldAccessorTable; }
    }
    
    public const int SendTimeFieldNumber = 1;
    private bool hasSendTime;
    private long sendTime_;
    public bool HasSendTime {
      get { return hasSendTime; }
    }
    public long SendTime {
      get { return sendTime_; }
    }
    
    public const int RoleIdFieldNumber = 2;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int SkillIdFieldNumber = 3;
    private bool hasSkillId;
    private int skillId_;
    public bool HasSkillId {
      get { return hasSkillId; }
    }
    public int SkillId {
      get { return skillId_; }
    }
    
    public const int TargetIdFieldNumber = 4;
    private bool hasTargetId;
    private int targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public int TargetId {
      get { return targetId_; }
    }
    
    public const int TargetPosFieldNumber = 5;
    private bool hasTargetPos;
    private global::DashFireMessage.Position targetPos_;
    public bool HasTargetPos {
      get { return hasTargetPos; }
    }
    public global::DashFireMessage.Position TargetPos {
      get { return targetPos_ ?? global::DashFireMessage.Position.DefaultInstance; }
    }
    
    public const int TargetAngleFieldNumber = 6;
    private bool hasTargetAngle;
    private float targetAngle_;
    public bool HasTargetAngle {
      get { return hasTargetAngle; }
    }
    public float TargetAngle {
      get { return targetAngle_; }
    }
    
    public const int ItemIdFieldNumber = 7;
    private bool hasItemId;
    private int itemId_;
    public bool HasItemId {
      get { return hasItemId; }
    }
    public int ItemId {
      get { return itemId_; }
    }
    
    public const int StandPosFieldNumber = 8;
    private bool hasStandPos;
    private global::DashFireMessage.Position standPos_;
    public bool HasStandPos {
      get { return hasStandPos; }
    }
    public global::DashFireMessage.Position StandPos {
      get { return standPos_ ?? global::DashFireMessage.Position.DefaultInstance; }
    }
    
    public const int FaceDirectionFieldNumber = 9;
    private bool hasFaceDirection;
    private float faceDirection_;
    public bool HasFaceDirection {
      get { return hasFaceDirection; }
    }
    public float FaceDirection {
      get { return faceDirection_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSkillId) return false;
        if (!hasTargetId) return false;
        if (!hasTargetPos) return false;
        if (!hasTargetAngle) return false;
        if (!hasItemId) return false;
        if (!TargetPos.IsInitialized) return false;
        if (HasStandPos) {
          if (!StandPos.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRCSkillFieldNames;
      if (hasSendTime) {
        output.WriteInt64(1, field_names[3], SendTime);
      }
      if (hasRoleId) {
        output.WriteInt32(2, field_names[2], RoleId);
      }
      if (hasSkillId) {
        output.WriteInt32(3, field_names[4], SkillId);
      }
      if (hasTargetId) {
        output.WriteInt32(4, field_names[7], TargetId);
      }
      if (hasTargetPos) {
        output.WriteMessage(5, field_names[8], TargetPos);
      }
      if (hasTargetAngle) {
        output.WriteFloat(6, field_names[6], TargetAngle);
      }
      if (hasItemId) {
        output.WriteInt32(7, field_names[1], ItemId);
      }
      if (hasStandPos) {
        output.WriteMessage(8, field_names[5], StandPos);
      }
      if (hasFaceDirection) {
        output.WriteFloat(9, field_names[0], FaceDirection);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSendTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, SendTime);
        }
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, RoleId);
        }
        if (hasSkillId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, SkillId);
        }
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, TargetId);
        }
        if (hasTargetPos) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, TargetPos);
        }
        if (hasTargetAngle) {
          size += pb::CodedOutputStream.ComputeFloatSize(6, TargetAngle);
        }
        if (hasItemId) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, ItemId);
        }
        if (hasStandPos) {
          size += pb::CodedOutputStream.ComputeMessageSize(8, StandPos);
        }
        if (hasFaceDirection) {
          size += pb::CodedOutputStream.ComputeFloatSize(9, FaceDirection);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CRC_Skill ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_Skill ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_Skill ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_Skill ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_Skill ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_Skill ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_Skill ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CRC_Skill ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CRC_Skill ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_Skill ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CRC_Skill MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CRC_Skill prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CRC_Skill, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CRC_Skill cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CRC_Skill result;
      
      private Msg_CRC_Skill PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CRC_Skill original = result;
          result = new Msg_CRC_Skill();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CRC_Skill MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CRC_Skill.Descriptor; }
      }
      
      public override Msg_CRC_Skill DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CRC_Skill.DefaultInstance; }
      }
      
      public override Msg_CRC_Skill BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CRC_Skill) {
          return MergeFrom((Msg_CRC_Skill) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CRC_Skill other) {
        if (other == global::DashFireMessage.Msg_CRC_Skill.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSendTime) {
          SendTime = other.SendTime;
        }
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasSkillId) {
          SkillId = other.SkillId;
        }
        if (other.HasTargetId) {
          TargetId = other.TargetId;
        }
        if (other.HasTargetPos) {
          MergeTargetPos(other.TargetPos);
        }
        if (other.HasTargetAngle) {
          TargetAngle = other.TargetAngle;
        }
        if (other.HasItemId) {
          ItemId = other.ItemId;
        }
        if (other.HasStandPos) {
          MergeStandPos(other.StandPos);
        }
        if (other.HasFaceDirection) {
          FaceDirection = other.FaceDirection;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRCSkillFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRCSkillFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSendTime = input.ReadInt64(ref result.sendTime_);
              break;
            }
            case 16: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 24: {
              result.hasSkillId = input.ReadInt32(ref result.skillId_);
              break;
            }
            case 32: {
              result.hasTargetId = input.ReadInt32(ref result.targetId_);
              break;
            }
            case 42: {
              global::DashFireMessage.Position.Builder subBuilder = global::DashFireMessage.Position.CreateBuilder();
              if (result.hasTargetPos) {
                subBuilder.MergeFrom(TargetPos);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetPos = subBuilder.BuildPartial();
              break;
            }
            case 53: {
              result.hasTargetAngle = input.ReadFloat(ref result.targetAngle_);
              break;
            }
            case 56: {
              result.hasItemId = input.ReadInt32(ref result.itemId_);
              break;
            }
            case 66: {
              global::DashFireMessage.Position.Builder subBuilder = global::DashFireMessage.Position.CreateBuilder();
              if (result.hasStandPos) {
                subBuilder.MergeFrom(StandPos);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StandPos = subBuilder.BuildPartial();
              break;
            }
            case 77: {
              result.hasFaceDirection = input.ReadFloat(ref result.faceDirection_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSendTime {
        get { return result.hasSendTime; }
      }
      public long SendTime {
        get { return result.SendTime; }
        set { SetSendTime(value); }
      }
      public Builder SetSendTime(long value) {
        PrepareBuilder();
        result.hasSendTime = true;
        result.sendTime_ = value;
        return this;
      }
      public Builder ClearSendTime() {
        PrepareBuilder();
        result.hasSendTime = false;
        result.sendTime_ = 0L;
        return this;
      }
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasSkillId {
        get { return result.hasSkillId; }
      }
      public int SkillId {
        get { return result.SkillId; }
        set { SetSkillId(value); }
      }
      public Builder SetSkillId(int value) {
        PrepareBuilder();
        result.hasSkillId = true;
        result.skillId_ = value;
        return this;
      }
      public Builder ClearSkillId() {
        PrepareBuilder();
        result.hasSkillId = false;
        result.skillId_ = 0;
        return this;
      }
      
      public bool HasTargetId {
        get { return result.hasTargetId; }
      }
      public int TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(int value) {
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = 0;
        return this;
      }
      
      public bool HasTargetPos {
       get { return result.hasTargetPos; }
      }
      public global::DashFireMessage.Position TargetPos {
        get { return result.TargetPos; }
        set { SetTargetPos(value); }
      }
      public Builder SetTargetPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetPos = true;
        result.targetPos_ = value;
        return this;
      }
      public Builder SetTargetPos(global::DashFireMessage.Position.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetPos = true;
        result.targetPos_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetPos &&
            result.targetPos_ != global::DashFireMessage.Position.DefaultInstance) {
            result.targetPos_ = global::DashFireMessage.Position.CreateBuilder(result.targetPos_).MergeFrom(value).BuildPartial();
        } else {
          result.targetPos_ = value;
        }
        result.hasTargetPos = true;
        return this;
      }
      public Builder ClearTargetPos() {
        PrepareBuilder();
        result.hasTargetPos = false;
        result.targetPos_ = null;
        return this;
      }
      
      public bool HasTargetAngle {
        get { return result.hasTargetAngle; }
      }
      public float TargetAngle {
        get { return result.TargetAngle; }
        set { SetTargetAngle(value); }
      }
      public Builder SetTargetAngle(float value) {
        PrepareBuilder();
        result.hasTargetAngle = true;
        result.targetAngle_ = value;
        return this;
      }
      public Builder ClearTargetAngle() {
        PrepareBuilder();
        result.hasTargetAngle = false;
        result.targetAngle_ = 0F;
        return this;
      }
      
      public bool HasItemId {
        get { return result.hasItemId; }
      }
      public int ItemId {
        get { return result.ItemId; }
        set { SetItemId(value); }
      }
      public Builder SetItemId(int value) {
        PrepareBuilder();
        result.hasItemId = true;
        result.itemId_ = value;
        return this;
      }
      public Builder ClearItemId() {
        PrepareBuilder();
        result.hasItemId = false;
        result.itemId_ = 0;
        return this;
      }
      
      public bool HasStandPos {
       get { return result.hasStandPos; }
      }
      public global::DashFireMessage.Position StandPos {
        get { return result.StandPos; }
        set { SetStandPos(value); }
      }
      public Builder SetStandPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStandPos = true;
        result.standPos_ = value;
        return this;
      }
      public Builder SetStandPos(global::DashFireMessage.Position.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStandPos = true;
        result.standPos_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStandPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStandPos &&
            result.standPos_ != global::DashFireMessage.Position.DefaultInstance) {
            result.standPos_ = global::DashFireMessage.Position.CreateBuilder(result.standPos_).MergeFrom(value).BuildPartial();
        } else {
          result.standPos_ = value;
        }
        result.hasStandPos = true;
        return this;
      }
      public Builder ClearStandPos() {
        PrepareBuilder();
        result.hasStandPos = false;
        result.standPos_ = null;
        return this;
      }
      
      public bool HasFaceDirection {
        get { return result.hasFaceDirection; }
      }
      public float FaceDirection {
        get { return result.FaceDirection; }
        set { SetFaceDirection(value); }
      }
      public Builder SetFaceDirection(float value) {
        PrepareBuilder();
        result.hasFaceDirection = true;
        result.faceDirection_ = value;
        return this;
      }
      public Builder ClearFaceDirection() {
        PrepareBuilder();
        result.hasFaceDirection = false;
        result.faceDirection_ = 0F;
        return this;
      }
    }
    static Msg_CRC_Skill() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CRC_Reload : pb::GeneratedMessage<Msg_CRC_Reload, Msg_CRC_Reload.Builder> {
    private Msg_CRC_Reload() { }
    private static readonly Msg_CRC_Reload defaultInstance = new Msg_CRC_Reload().MakeReadOnly();
    private static readonly string[] _msgCRCReloadFieldNames = new string[] { "role_id", "send_time" };
    private static readonly uint[] _msgCRCReloadFieldTags = new uint[] { 16, 8 };
    public static Msg_CRC_Reload DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CRC_Reload DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CRC_Reload ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_Reload__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CRC_Reload, Msg_CRC_Reload.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_Reload__FieldAccessorTable; }
    }
    
    public const int SendTimeFieldNumber = 1;
    private bool hasSendTime;
    private long sendTime_;
    public bool HasSendTime {
      get { return hasSendTime; }
    }
    public long SendTime {
      get { return sendTime_; }
    }
    
    public const int RoleIdFieldNumber = 2;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRCReloadFieldNames;
      if (hasSendTime) {
        output.WriteInt64(1, field_names[1], SendTime);
      }
      if (hasRoleId) {
        output.WriteInt32(2, field_names[0], RoleId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSendTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, SendTime);
        }
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, RoleId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CRC_Reload ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_Reload ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_Reload ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_Reload ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_Reload ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_Reload ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_Reload ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CRC_Reload ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CRC_Reload ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_Reload ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CRC_Reload MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CRC_Reload prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CRC_Reload, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CRC_Reload cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CRC_Reload result;
      
      private Msg_CRC_Reload PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CRC_Reload original = result;
          result = new Msg_CRC_Reload();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CRC_Reload MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CRC_Reload.Descriptor; }
      }
      
      public override Msg_CRC_Reload DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CRC_Reload.DefaultInstance; }
      }
      
      public override Msg_CRC_Reload BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CRC_Reload) {
          return MergeFrom((Msg_CRC_Reload) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CRC_Reload other) {
        if (other == global::DashFireMessage.Msg_CRC_Reload.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSendTime) {
          SendTime = other.SendTime;
        }
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRCReloadFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRCReloadFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSendTime = input.ReadInt64(ref result.sendTime_);
              break;
            }
            case 16: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSendTime {
        get { return result.hasSendTime; }
      }
      public long SendTime {
        get { return result.SendTime; }
        set { SetSendTime(value); }
      }
      public Builder SetSendTime(long value) {
        PrepareBuilder();
        result.hasSendTime = true;
        result.sendTime_ = value;
        return this;
      }
      public Builder ClearSendTime() {
        PrepareBuilder();
        result.hasSendTime = false;
        result.sendTime_ = 0L;
        return this;
      }
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
    }
    static Msg_CRC_Reload() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CRC_Effect : pb::GeneratedMessage<Msg_CRC_Effect, Msg_CRC_Effect.Builder> {
    private Msg_CRC_Effect() { }
    private static readonly Msg_CRC_Effect defaultInstance = new Msg_CRC_Effect().MakeReadOnly();
    private static readonly string[] _msgCRCEffectFieldNames = new string[] { "effect", "role_id", "send_time" };
    private static readonly uint[] _msgCRCEffectFieldTags = new uint[] { 24, 16, 8 };
    public static Msg_CRC_Effect DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CRC_Effect DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CRC_Effect ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_Effect__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CRC_Effect, Msg_CRC_Effect.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_Effect__FieldAccessorTable; }
    }
    
    public const int SendTimeFieldNumber = 1;
    private bool hasSendTime;
    private long sendTime_;
    public bool HasSendTime {
      get { return hasSendTime; }
    }
    public long SendTime {
      get { return sendTime_; }
    }
    
    public const int RoleIdFieldNumber = 2;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int EffectFieldNumber = 3;
    private bool hasEffect;
    private int effect_;
    public bool HasEffect {
      get { return hasEffect; }
    }
    public int Effect {
      get { return effect_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEffect) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRCEffectFieldNames;
      if (hasSendTime) {
        output.WriteInt64(1, field_names[2], SendTime);
      }
      if (hasRoleId) {
        output.WriteInt32(2, field_names[1], RoleId);
      }
      if (hasEffect) {
        output.WriteInt32(3, field_names[0], Effect);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSendTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, SendTime);
        }
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, RoleId);
        }
        if (hasEffect) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, Effect);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CRC_Effect ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_Effect ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_Effect ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_Effect ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_Effect ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_Effect ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_Effect ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CRC_Effect ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CRC_Effect ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_Effect ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CRC_Effect MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CRC_Effect prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CRC_Effect, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CRC_Effect cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CRC_Effect result;
      
      private Msg_CRC_Effect PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CRC_Effect original = result;
          result = new Msg_CRC_Effect();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CRC_Effect MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CRC_Effect.Descriptor; }
      }
      
      public override Msg_CRC_Effect DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CRC_Effect.DefaultInstance; }
      }
      
      public override Msg_CRC_Effect BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CRC_Effect) {
          return MergeFrom((Msg_CRC_Effect) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CRC_Effect other) {
        if (other == global::DashFireMessage.Msg_CRC_Effect.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSendTime) {
          SendTime = other.SendTime;
        }
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasEffect) {
          Effect = other.Effect;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRCEffectFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRCEffectFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSendTime = input.ReadInt64(ref result.sendTime_);
              break;
            }
            case 16: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 24: {
              result.hasEffect = input.ReadInt32(ref result.effect_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSendTime {
        get { return result.hasSendTime; }
      }
      public long SendTime {
        get { return result.SendTime; }
        set { SetSendTime(value); }
      }
      public Builder SetSendTime(long value) {
        PrepareBuilder();
        result.hasSendTime = true;
        result.sendTime_ = value;
        return this;
      }
      public Builder ClearSendTime() {
        PrepareBuilder();
        result.hasSendTime = false;
        result.sendTime_ = 0L;
        return this;
      }
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasEffect {
        get { return result.hasEffect; }
      }
      public int Effect {
        get { return result.Effect; }
        set { SetEffect(value); }
      }
      public Builder SetEffect(int value) {
        PrepareBuilder();
        result.hasEffect = true;
        result.effect_ = value;
        return this;
      }
      public Builder ClearEffect() {
        PrepareBuilder();
        result.hasEffect = false;
        result.effect_ = 0;
        return this;
      }
    }
    static Msg_CRC_Effect() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CRC_NormalAttackBegin : pb::GeneratedMessage<Msg_CRC_NormalAttackBegin, Msg_CRC_NormalAttackBegin.Builder> {
    private Msg_CRC_NormalAttackBegin() { }
    private static readonly Msg_CRC_NormalAttackBegin defaultInstance = new Msg_CRC_NormalAttackBegin().MakeReadOnly();
    private static readonly string[] _msgCRCNormalAttackBeginFieldNames = new string[] { "role_id", "send_time", "shooter_dir", "shooter_pos", "target_pos" };
    private static readonly uint[] _msgCRCNormalAttackBeginFieldTags = new uint[] { 16, 8, 45, 34, 26 };
    public static Msg_CRC_NormalAttackBegin DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CRC_NormalAttackBegin DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CRC_NormalAttackBegin ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_NormalAttackBegin__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CRC_NormalAttackBegin, Msg_CRC_NormalAttackBegin.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_NormalAttackBegin__FieldAccessorTable; }
    }
    
    public const int SendTimeFieldNumber = 1;
    private bool hasSendTime;
    private long sendTime_;
    public bool HasSendTime {
      get { return hasSendTime; }
    }
    public long SendTime {
      get { return sendTime_; }
    }
    
    public const int RoleIdFieldNumber = 2;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int TargetPosFieldNumber = 3;
    private bool hasTargetPos;
    private global::DashFireMessage.Position targetPos_;
    public bool HasTargetPos {
      get { return hasTargetPos; }
    }
    public global::DashFireMessage.Position TargetPos {
      get { return targetPos_ ?? global::DashFireMessage.Position.DefaultInstance; }
    }
    
    public const int ShooterPosFieldNumber = 4;
    private bool hasShooterPos;
    private global::DashFireMessage.Position shooterPos_;
    public bool HasShooterPos {
      get { return hasShooterPos; }
    }
    public global::DashFireMessage.Position ShooterPos {
      get { return shooterPos_ ?? global::DashFireMessage.Position.DefaultInstance; }
    }
    
    public const int ShooterDirFieldNumber = 5;
    private bool hasShooterDir;
    private float shooterDir_;
    public bool HasShooterDir {
      get { return hasShooterDir; }
    }
    public float ShooterDir {
      get { return shooterDir_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasTargetPos) {
          if (!TargetPos.IsInitialized) return false;
        }
        if (HasShooterPos) {
          if (!ShooterPos.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRCNormalAttackBeginFieldNames;
      if (hasSendTime) {
        output.WriteInt64(1, field_names[1], SendTime);
      }
      if (hasRoleId) {
        output.WriteInt32(2, field_names[0], RoleId);
      }
      if (hasTargetPos) {
        output.WriteMessage(3, field_names[4], TargetPos);
      }
      if (hasShooterPos) {
        output.WriteMessage(4, field_names[3], ShooterPos);
      }
      if (hasShooterDir) {
        output.WriteFloat(5, field_names[2], ShooterDir);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSendTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, SendTime);
        }
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, RoleId);
        }
        if (hasTargetPos) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, TargetPos);
        }
        if (hasShooterPos) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, ShooterPos);
        }
        if (hasShooterDir) {
          size += pb::CodedOutputStream.ComputeFloatSize(5, ShooterDir);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CRC_NormalAttackBegin ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_NormalAttackBegin ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_NormalAttackBegin ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_NormalAttackBegin ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_NormalAttackBegin ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_NormalAttackBegin ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_NormalAttackBegin ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CRC_NormalAttackBegin ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CRC_NormalAttackBegin ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_NormalAttackBegin ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CRC_NormalAttackBegin MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CRC_NormalAttackBegin prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CRC_NormalAttackBegin, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CRC_NormalAttackBegin cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CRC_NormalAttackBegin result;
      
      private Msg_CRC_NormalAttackBegin PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CRC_NormalAttackBegin original = result;
          result = new Msg_CRC_NormalAttackBegin();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CRC_NormalAttackBegin MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CRC_NormalAttackBegin.Descriptor; }
      }
      
      public override Msg_CRC_NormalAttackBegin DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CRC_NormalAttackBegin.DefaultInstance; }
      }
      
      public override Msg_CRC_NormalAttackBegin BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CRC_NormalAttackBegin) {
          return MergeFrom((Msg_CRC_NormalAttackBegin) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CRC_NormalAttackBegin other) {
        if (other == global::DashFireMessage.Msg_CRC_NormalAttackBegin.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSendTime) {
          SendTime = other.SendTime;
        }
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasTargetPos) {
          MergeTargetPos(other.TargetPos);
        }
        if (other.HasShooterPos) {
          MergeShooterPos(other.ShooterPos);
        }
        if (other.HasShooterDir) {
          ShooterDir = other.ShooterDir;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRCNormalAttackBeginFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRCNormalAttackBeginFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSendTime = input.ReadInt64(ref result.sendTime_);
              break;
            }
            case 16: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 26: {
              global::DashFireMessage.Position.Builder subBuilder = global::DashFireMessage.Position.CreateBuilder();
              if (result.hasTargetPos) {
                subBuilder.MergeFrom(TargetPos);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetPos = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::DashFireMessage.Position.Builder subBuilder = global::DashFireMessage.Position.CreateBuilder();
              if (result.hasShooterPos) {
                subBuilder.MergeFrom(ShooterPos);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ShooterPos = subBuilder.BuildPartial();
              break;
            }
            case 45: {
              result.hasShooterDir = input.ReadFloat(ref result.shooterDir_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSendTime {
        get { return result.hasSendTime; }
      }
      public long SendTime {
        get { return result.SendTime; }
        set { SetSendTime(value); }
      }
      public Builder SetSendTime(long value) {
        PrepareBuilder();
        result.hasSendTime = true;
        result.sendTime_ = value;
        return this;
      }
      public Builder ClearSendTime() {
        PrepareBuilder();
        result.hasSendTime = false;
        result.sendTime_ = 0L;
        return this;
      }
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasTargetPos {
       get { return result.hasTargetPos; }
      }
      public global::DashFireMessage.Position TargetPos {
        get { return result.TargetPos; }
        set { SetTargetPos(value); }
      }
      public Builder SetTargetPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetPos = true;
        result.targetPos_ = value;
        return this;
      }
      public Builder SetTargetPos(global::DashFireMessage.Position.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetPos = true;
        result.targetPos_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetPos &&
            result.targetPos_ != global::DashFireMessage.Position.DefaultInstance) {
            result.targetPos_ = global::DashFireMessage.Position.CreateBuilder(result.targetPos_).MergeFrom(value).BuildPartial();
        } else {
          result.targetPos_ = value;
        }
        result.hasTargetPos = true;
        return this;
      }
      public Builder ClearTargetPos() {
        PrepareBuilder();
        result.hasTargetPos = false;
        result.targetPos_ = null;
        return this;
      }
      
      public bool HasShooterPos {
       get { return result.hasShooterPos; }
      }
      public global::DashFireMessage.Position ShooterPos {
        get { return result.ShooterPos; }
        set { SetShooterPos(value); }
      }
      public Builder SetShooterPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasShooterPos = true;
        result.shooterPos_ = value;
        return this;
      }
      public Builder SetShooterPos(global::DashFireMessage.Position.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasShooterPos = true;
        result.shooterPos_ = builderForValue.Build();
        return this;
      }
      public Builder MergeShooterPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasShooterPos &&
            result.shooterPos_ != global::DashFireMessage.Position.DefaultInstance) {
            result.shooterPos_ = global::DashFireMessage.Position.CreateBuilder(result.shooterPos_).MergeFrom(value).BuildPartial();
        } else {
          result.shooterPos_ = value;
        }
        result.hasShooterPos = true;
        return this;
      }
      public Builder ClearShooterPos() {
        PrepareBuilder();
        result.hasShooterPos = false;
        result.shooterPos_ = null;
        return this;
      }
      
      public bool HasShooterDir {
        get { return result.hasShooterDir; }
      }
      public float ShooterDir {
        get { return result.ShooterDir; }
        set { SetShooterDir(value); }
      }
      public Builder SetShooterDir(float value) {
        PrepareBuilder();
        result.hasShooterDir = true;
        result.shooterDir_ = value;
        return this;
      }
      public Builder ClearShooterDir() {
        PrepareBuilder();
        result.hasShooterDir = false;
        result.shooterDir_ = 0F;
        return this;
      }
    }
    static Msg_CRC_NormalAttackBegin() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CRC_NormalAttackEnd : pb::GeneratedMessage<Msg_CRC_NormalAttackEnd, Msg_CRC_NormalAttackEnd.Builder> {
    private Msg_CRC_NormalAttackEnd() { }
    private static readonly Msg_CRC_NormalAttackEnd defaultInstance = new Msg_CRC_NormalAttackEnd().MakeReadOnly();
    private static readonly string[] _msgCRCNormalAttackEndFieldNames = new string[] { "role_id", "send_time" };
    private static readonly uint[] _msgCRCNormalAttackEndFieldTags = new uint[] { 16, 8 };
    public static Msg_CRC_NormalAttackEnd DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CRC_NormalAttackEnd DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CRC_NormalAttackEnd ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_NormalAttackEnd__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CRC_NormalAttackEnd, Msg_CRC_NormalAttackEnd.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_NormalAttackEnd__FieldAccessorTable; }
    }
    
    public const int SendTimeFieldNumber = 1;
    private bool hasSendTime;
    private long sendTime_;
    public bool HasSendTime {
      get { return hasSendTime; }
    }
    public long SendTime {
      get { return sendTime_; }
    }
    
    public const int RoleIdFieldNumber = 2;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRCNormalAttackEndFieldNames;
      if (hasSendTime) {
        output.WriteInt64(1, field_names[1], SendTime);
      }
      if (hasRoleId) {
        output.WriteInt32(2, field_names[0], RoleId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSendTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, SendTime);
        }
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, RoleId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CRC_NormalAttackEnd ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_NormalAttackEnd ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_NormalAttackEnd ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_NormalAttackEnd ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_NormalAttackEnd ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_NormalAttackEnd ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_NormalAttackEnd ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CRC_NormalAttackEnd ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CRC_NormalAttackEnd ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_NormalAttackEnd ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CRC_NormalAttackEnd MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CRC_NormalAttackEnd prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CRC_NormalAttackEnd, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CRC_NormalAttackEnd cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CRC_NormalAttackEnd result;
      
      private Msg_CRC_NormalAttackEnd PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CRC_NormalAttackEnd original = result;
          result = new Msg_CRC_NormalAttackEnd();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CRC_NormalAttackEnd MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CRC_NormalAttackEnd.Descriptor; }
      }
      
      public override Msg_CRC_NormalAttackEnd DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CRC_NormalAttackEnd.DefaultInstance; }
      }
      
      public override Msg_CRC_NormalAttackEnd BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CRC_NormalAttackEnd) {
          return MergeFrom((Msg_CRC_NormalAttackEnd) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CRC_NormalAttackEnd other) {
        if (other == global::DashFireMessage.Msg_CRC_NormalAttackEnd.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSendTime) {
          SendTime = other.SendTime;
        }
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRCNormalAttackEndFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRCNormalAttackEndFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSendTime = input.ReadInt64(ref result.sendTime_);
              break;
            }
            case 16: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSendTime {
        get { return result.hasSendTime; }
      }
      public long SendTime {
        get { return result.SendTime; }
        set { SetSendTime(value); }
      }
      public Builder SetSendTime(long value) {
        PrepareBuilder();
        result.hasSendTime = true;
        result.sendTime_ = value;
        return this;
      }
      public Builder ClearSendTime() {
        PrepareBuilder();
        result.hasSendTime = false;
        result.sendTime_ = 0L;
        return this;
      }
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
    }
    static Msg_CRC_NormalAttackEnd() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_CreateNpc : pb::GeneratedMessage<Msg_RC_CreateNpc, Msg_RC_CreateNpc.Builder> {
    private Msg_RC_CreateNpc() { }
    private static readonly Msg_RC_CreateNpc defaultInstance = new Msg_RC_CreateNpc().MakeReadOnly();
    private static readonly string[] _msgRCCreateNpcFieldNames = new string[] { "camp_id", "cur_pos", "face_direction", "link_id", "npc_id", "owner_id", "unit_id" };
    private static readonly uint[] _msgRCCreateNpcFieldTags = new uint[] { 48, 26, 37, 40, 8, 56, 16 };
    public static Msg_RC_CreateNpc DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_CreateNpc DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_CreateNpc ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_CreateNpc__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_CreateNpc, Msg_RC_CreateNpc.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_CreateNpc__FieldAccessorTable; }
    }
    
    public const int NpcIdFieldNumber = 1;
    private bool hasNpcId;
    private int npcId_;
    public bool HasNpcId {
      get { return hasNpcId; }
    }
    public int NpcId {
      get { return npcId_; }
    }
    
    public const int UnitIdFieldNumber = 2;
    private bool hasUnitId;
    private int unitId_;
    public bool HasUnitId {
      get { return hasUnitId; }
    }
    public int UnitId {
      get { return unitId_; }
    }
    
    public const int CurPosFieldNumber = 3;
    private bool hasCurPos;
    private global::DashFireMessage.Position curPos_;
    public bool HasCurPos {
      get { return hasCurPos; }
    }
    public global::DashFireMessage.Position CurPos {
      get { return curPos_ ?? global::DashFireMessage.Position.DefaultInstance; }
    }
    
    public const int FaceDirectionFieldNumber = 4;
    private bool hasFaceDirection;
    private float faceDirection_;
    public bool HasFaceDirection {
      get { return hasFaceDirection; }
    }
    public float FaceDirection {
      get { return faceDirection_; }
    }
    
    public const int LinkIdFieldNumber = 5;
    private bool hasLinkId;
    private int linkId_;
    public bool HasLinkId {
      get { return hasLinkId; }
    }
    public int LinkId {
      get { return linkId_; }
    }
    
    public const int CampIdFieldNumber = 6;
    private bool hasCampId;
    private int campId_;
    public bool HasCampId {
      get { return hasCampId; }
    }
    public int CampId {
      get { return campId_; }
    }
    
    public const int OwnerIdFieldNumber = 7;
    private bool hasOwnerId;
    private int ownerId_;
    public bool HasOwnerId {
      get { return hasOwnerId; }
    }
    public int OwnerId {
      get { return ownerId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasNpcId) return false;
        if (!hasUnitId) return false;
        if (!hasCurPos) return false;
        if (!hasFaceDirection) return false;
        if (!hasLinkId) return false;
        if (!CurPos.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCCreateNpcFieldNames;
      if (hasNpcId) {
        output.WriteInt32(1, field_names[4], NpcId);
      }
      if (hasUnitId) {
        output.WriteInt32(2, field_names[6], UnitId);
      }
      if (hasCurPos) {
        output.WriteMessage(3, field_names[1], CurPos);
      }
      if (hasFaceDirection) {
        output.WriteFloat(4, field_names[2], FaceDirection);
      }
      if (hasLinkId) {
        output.WriteInt32(5, field_names[3], LinkId);
      }
      if (hasCampId) {
        output.WriteInt32(6, field_names[0], CampId);
      }
      if (hasOwnerId) {
        output.WriteInt32(7, field_names[5], OwnerId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasNpcId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, NpcId);
        }
        if (hasUnitId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, UnitId);
        }
        if (hasCurPos) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, CurPos);
        }
        if (hasFaceDirection) {
          size += pb::CodedOutputStream.ComputeFloatSize(4, FaceDirection);
        }
        if (hasLinkId) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, LinkId);
        }
        if (hasCampId) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, CampId);
        }
        if (hasOwnerId) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, OwnerId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_CreateNpc ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_CreateNpc ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_CreateNpc ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_CreateNpc ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_CreateNpc ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_CreateNpc ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_CreateNpc ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_CreateNpc ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_CreateNpc ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_CreateNpc ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_CreateNpc MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_CreateNpc prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_CreateNpc, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_CreateNpc cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_CreateNpc result;
      
      private Msg_RC_CreateNpc PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_CreateNpc original = result;
          result = new Msg_RC_CreateNpc();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_CreateNpc MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_CreateNpc.Descriptor; }
      }
      
      public override Msg_RC_CreateNpc DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_CreateNpc.DefaultInstance; }
      }
      
      public override Msg_RC_CreateNpc BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_CreateNpc) {
          return MergeFrom((Msg_RC_CreateNpc) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_CreateNpc other) {
        if (other == global::DashFireMessage.Msg_RC_CreateNpc.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasNpcId) {
          NpcId = other.NpcId;
        }
        if (other.HasUnitId) {
          UnitId = other.UnitId;
        }
        if (other.HasCurPos) {
          MergeCurPos(other.CurPos);
        }
        if (other.HasFaceDirection) {
          FaceDirection = other.FaceDirection;
        }
        if (other.HasLinkId) {
          LinkId = other.LinkId;
        }
        if (other.HasCampId) {
          CampId = other.CampId;
        }
        if (other.HasOwnerId) {
          OwnerId = other.OwnerId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCCreateNpcFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCCreateNpcFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasNpcId = input.ReadInt32(ref result.npcId_);
              break;
            }
            case 16: {
              result.hasUnitId = input.ReadInt32(ref result.unitId_);
              break;
            }
            case 26: {
              global::DashFireMessage.Position.Builder subBuilder = global::DashFireMessage.Position.CreateBuilder();
              if (result.hasCurPos) {
                subBuilder.MergeFrom(CurPos);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CurPos = subBuilder.BuildPartial();
              break;
            }
            case 37: {
              result.hasFaceDirection = input.ReadFloat(ref result.faceDirection_);
              break;
            }
            case 40: {
              result.hasLinkId = input.ReadInt32(ref result.linkId_);
              break;
            }
            case 48: {
              result.hasCampId = input.ReadInt32(ref result.campId_);
              break;
            }
            case 56: {
              result.hasOwnerId = input.ReadInt32(ref result.ownerId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasNpcId {
        get { return result.hasNpcId; }
      }
      public int NpcId {
        get { return result.NpcId; }
        set { SetNpcId(value); }
      }
      public Builder SetNpcId(int value) {
        PrepareBuilder();
        result.hasNpcId = true;
        result.npcId_ = value;
        return this;
      }
      public Builder ClearNpcId() {
        PrepareBuilder();
        result.hasNpcId = false;
        result.npcId_ = 0;
        return this;
      }
      
      public bool HasUnitId {
        get { return result.hasUnitId; }
      }
      public int UnitId {
        get { return result.UnitId; }
        set { SetUnitId(value); }
      }
      public Builder SetUnitId(int value) {
        PrepareBuilder();
        result.hasUnitId = true;
        result.unitId_ = value;
        return this;
      }
      public Builder ClearUnitId() {
        PrepareBuilder();
        result.hasUnitId = false;
        result.unitId_ = 0;
        return this;
      }
      
      public bool HasCurPos {
       get { return result.hasCurPos; }
      }
      public global::DashFireMessage.Position CurPos {
        get { return result.CurPos; }
        set { SetCurPos(value); }
      }
      public Builder SetCurPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurPos = true;
        result.curPos_ = value;
        return this;
      }
      public Builder SetCurPos(global::DashFireMessage.Position.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCurPos = true;
        result.curPos_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCurPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCurPos &&
            result.curPos_ != global::DashFireMessage.Position.DefaultInstance) {
            result.curPos_ = global::DashFireMessage.Position.CreateBuilder(result.curPos_).MergeFrom(value).BuildPartial();
        } else {
          result.curPos_ = value;
        }
        result.hasCurPos = true;
        return this;
      }
      public Builder ClearCurPos() {
        PrepareBuilder();
        result.hasCurPos = false;
        result.curPos_ = null;
        return this;
      }
      
      public bool HasFaceDirection {
        get { return result.hasFaceDirection; }
      }
      public float FaceDirection {
        get { return result.FaceDirection; }
        set { SetFaceDirection(value); }
      }
      public Builder SetFaceDirection(float value) {
        PrepareBuilder();
        result.hasFaceDirection = true;
        result.faceDirection_ = value;
        return this;
      }
      public Builder ClearFaceDirection() {
        PrepareBuilder();
        result.hasFaceDirection = false;
        result.faceDirection_ = 0F;
        return this;
      }
      
      public bool HasLinkId {
        get { return result.hasLinkId; }
      }
      public int LinkId {
        get { return result.LinkId; }
        set { SetLinkId(value); }
      }
      public Builder SetLinkId(int value) {
        PrepareBuilder();
        result.hasLinkId = true;
        result.linkId_ = value;
        return this;
      }
      public Builder ClearLinkId() {
        PrepareBuilder();
        result.hasLinkId = false;
        result.linkId_ = 0;
        return this;
      }
      
      public bool HasCampId {
        get { return result.hasCampId; }
      }
      public int CampId {
        get { return result.CampId; }
        set { SetCampId(value); }
      }
      public Builder SetCampId(int value) {
        PrepareBuilder();
        result.hasCampId = true;
        result.campId_ = value;
        return this;
      }
      public Builder ClearCampId() {
        PrepareBuilder();
        result.hasCampId = false;
        result.campId_ = 0;
        return this;
      }
      
      public bool HasOwnerId {
        get { return result.hasOwnerId; }
      }
      public int OwnerId {
        get { return result.OwnerId; }
        set { SetOwnerId(value); }
      }
      public Builder SetOwnerId(int value) {
        PrepareBuilder();
        result.hasOwnerId = true;
        result.ownerId_ = value;
        return this;
      }
      public Builder ClearOwnerId() {
        PrepareBuilder();
        result.hasOwnerId = false;
        result.ownerId_ = 0;
        return this;
      }
    }
    static Msg_RC_CreateNpc() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_DestroyNpc : pb::GeneratedMessage<Msg_RC_DestroyNpc, Msg_RC_DestroyNpc.Builder> {
    private Msg_RC_DestroyNpc() { }
    private static readonly Msg_RC_DestroyNpc defaultInstance = new Msg_RC_DestroyNpc().MakeReadOnly();
    private static readonly string[] _msgRCDestroyNpcFieldNames = new string[] { "npc_id" };
    private static readonly uint[] _msgRCDestroyNpcFieldTags = new uint[] { 8 };
    public static Msg_RC_DestroyNpc DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_DestroyNpc DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_DestroyNpc ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_DestroyNpc__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_DestroyNpc, Msg_RC_DestroyNpc.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_DestroyNpc__FieldAccessorTable; }
    }
    
    public const int NpcIdFieldNumber = 1;
    private bool hasNpcId;
    private int npcId_;
    public bool HasNpcId {
      get { return hasNpcId; }
    }
    public int NpcId {
      get { return npcId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasNpcId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCDestroyNpcFieldNames;
      if (hasNpcId) {
        output.WriteInt32(1, field_names[0], NpcId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasNpcId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, NpcId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_DestroyNpc ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_DestroyNpc ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_DestroyNpc ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_DestroyNpc ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_DestroyNpc ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_DestroyNpc ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_DestroyNpc ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_DestroyNpc ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_DestroyNpc ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_DestroyNpc ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_DestroyNpc MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_DestroyNpc prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_DestroyNpc, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_DestroyNpc cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_DestroyNpc result;
      
      private Msg_RC_DestroyNpc PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_DestroyNpc original = result;
          result = new Msg_RC_DestroyNpc();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_DestroyNpc MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_DestroyNpc.Descriptor; }
      }
      
      public override Msg_RC_DestroyNpc DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_DestroyNpc.DefaultInstance; }
      }
      
      public override Msg_RC_DestroyNpc BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_DestroyNpc) {
          return MergeFrom((Msg_RC_DestroyNpc) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_DestroyNpc other) {
        if (other == global::DashFireMessage.Msg_RC_DestroyNpc.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasNpcId) {
          NpcId = other.NpcId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCDestroyNpcFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCDestroyNpcFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasNpcId = input.ReadInt32(ref result.npcId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasNpcId {
        get { return result.hasNpcId; }
      }
      public int NpcId {
        get { return result.NpcId; }
        set { SetNpcId(value); }
      }
      public Builder SetNpcId(int value) {
        PrepareBuilder();
        result.hasNpcId = true;
        result.npcId_ = value;
        return this;
      }
      public Builder ClearNpcId() {
        PrepareBuilder();
        result.hasNpcId = false;
        result.npcId_ = 0;
        return this;
      }
    }
    static Msg_RC_DestroyNpc() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_NpcEnter : pb::GeneratedMessage<Msg_RC_NpcEnter, Msg_RC_NpcEnter.Builder> {
    private Msg_RC_NpcEnter() { }
    private static readonly Msg_RC_NpcEnter defaultInstance = new Msg_RC_NpcEnter().MakeReadOnly();
    private static readonly string[] _msgRCNpcEnterFieldNames = new string[] { "cur_pos_x", "cur_pos_y", "cur_pos_z", "face_direction", "npc_id" };
    private static readonly uint[] _msgRCNpcEnterFieldTags = new uint[] { 21, 29, 37, 45, 8 };
    public static Msg_RC_NpcEnter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_NpcEnter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_NpcEnter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_NpcEnter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_NpcEnter, Msg_RC_NpcEnter.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_NpcEnter__FieldAccessorTable; }
    }
    
    public const int NpcIdFieldNumber = 1;
    private bool hasNpcId;
    private int npcId_;
    public bool HasNpcId {
      get { return hasNpcId; }
    }
    public int NpcId {
      get { return npcId_; }
    }
    
    public const int CurPosXFieldNumber = 2;
    private bool hasCurPosX;
    private float curPosX_;
    public bool HasCurPosX {
      get { return hasCurPosX; }
    }
    public float CurPosX {
      get { return curPosX_; }
    }
    
    public const int CurPosYFieldNumber = 3;
    private bool hasCurPosY;
    private float curPosY_;
    public bool HasCurPosY {
      get { return hasCurPosY; }
    }
    public float CurPosY {
      get { return curPosY_; }
    }
    
    public const int CurPosZFieldNumber = 4;
    private bool hasCurPosZ;
    private float curPosZ_;
    public bool HasCurPosZ {
      get { return hasCurPosZ; }
    }
    public float CurPosZ {
      get { return curPosZ_; }
    }
    
    public const int FaceDirectionFieldNumber = 5;
    private bool hasFaceDirection;
    private float faceDirection_;
    public bool HasFaceDirection {
      get { return hasFaceDirection; }
    }
    public float FaceDirection {
      get { return faceDirection_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasNpcId) return false;
        if (!hasCurPosX) return false;
        if (!hasCurPosY) return false;
        if (!hasCurPosZ) return false;
        if (!hasFaceDirection) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCNpcEnterFieldNames;
      if (hasNpcId) {
        output.WriteInt32(1, field_names[4], NpcId);
      }
      if (hasCurPosX) {
        output.WriteFloat(2, field_names[0], CurPosX);
      }
      if (hasCurPosY) {
        output.WriteFloat(3, field_names[1], CurPosY);
      }
      if (hasCurPosZ) {
        output.WriteFloat(4, field_names[2], CurPosZ);
      }
      if (hasFaceDirection) {
        output.WriteFloat(5, field_names[3], FaceDirection);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasNpcId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, NpcId);
        }
        if (hasCurPosX) {
          size += pb::CodedOutputStream.ComputeFloatSize(2, CurPosX);
        }
        if (hasCurPosY) {
          size += pb::CodedOutputStream.ComputeFloatSize(3, CurPosY);
        }
        if (hasCurPosZ) {
          size += pb::CodedOutputStream.ComputeFloatSize(4, CurPosZ);
        }
        if (hasFaceDirection) {
          size += pb::CodedOutputStream.ComputeFloatSize(5, FaceDirection);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_NpcEnter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_NpcEnter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NpcEnter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_NpcEnter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NpcEnter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_NpcEnter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NpcEnter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_NpcEnter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_NpcEnter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_NpcEnter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_NpcEnter MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_NpcEnter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_NpcEnter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_NpcEnter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_NpcEnter result;
      
      private Msg_RC_NpcEnter PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_NpcEnter original = result;
          result = new Msg_RC_NpcEnter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_NpcEnter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_NpcEnter.Descriptor; }
      }
      
      public override Msg_RC_NpcEnter DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_NpcEnter.DefaultInstance; }
      }
      
      public override Msg_RC_NpcEnter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_NpcEnter) {
          return MergeFrom((Msg_RC_NpcEnter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_NpcEnter other) {
        if (other == global::DashFireMessage.Msg_RC_NpcEnter.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasNpcId) {
          NpcId = other.NpcId;
        }
        if (other.HasCurPosX) {
          CurPosX = other.CurPosX;
        }
        if (other.HasCurPosY) {
          CurPosY = other.CurPosY;
        }
        if (other.HasCurPosZ) {
          CurPosZ = other.CurPosZ;
        }
        if (other.HasFaceDirection) {
          FaceDirection = other.FaceDirection;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCNpcEnterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCNpcEnterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasNpcId = input.ReadInt32(ref result.npcId_);
              break;
            }
            case 21: {
              result.hasCurPosX = input.ReadFloat(ref result.curPosX_);
              break;
            }
            case 29: {
              result.hasCurPosY = input.ReadFloat(ref result.curPosY_);
              break;
            }
            case 37: {
              result.hasCurPosZ = input.ReadFloat(ref result.curPosZ_);
              break;
            }
            case 45: {
              result.hasFaceDirection = input.ReadFloat(ref result.faceDirection_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasNpcId {
        get { return result.hasNpcId; }
      }
      public int NpcId {
        get { return result.NpcId; }
        set { SetNpcId(value); }
      }
      public Builder SetNpcId(int value) {
        PrepareBuilder();
        result.hasNpcId = true;
        result.npcId_ = value;
        return this;
      }
      public Builder ClearNpcId() {
        PrepareBuilder();
        result.hasNpcId = false;
        result.npcId_ = 0;
        return this;
      }
      
      public bool HasCurPosX {
        get { return result.hasCurPosX; }
      }
      public float CurPosX {
        get { return result.CurPosX; }
        set { SetCurPosX(value); }
      }
      public Builder SetCurPosX(float value) {
        PrepareBuilder();
        result.hasCurPosX = true;
        result.curPosX_ = value;
        return this;
      }
      public Builder ClearCurPosX() {
        PrepareBuilder();
        result.hasCurPosX = false;
        result.curPosX_ = 0F;
        return this;
      }
      
      public bool HasCurPosY {
        get { return result.hasCurPosY; }
      }
      public float CurPosY {
        get { return result.CurPosY; }
        set { SetCurPosY(value); }
      }
      public Builder SetCurPosY(float value) {
        PrepareBuilder();
        result.hasCurPosY = true;
        result.curPosY_ = value;
        return this;
      }
      public Builder ClearCurPosY() {
        PrepareBuilder();
        result.hasCurPosY = false;
        result.curPosY_ = 0F;
        return this;
      }
      
      public bool HasCurPosZ {
        get { return result.hasCurPosZ; }
      }
      public float CurPosZ {
        get { return result.CurPosZ; }
        set { SetCurPosZ(value); }
      }
      public Builder SetCurPosZ(float value) {
        PrepareBuilder();
        result.hasCurPosZ = true;
        result.curPosZ_ = value;
        return this;
      }
      public Builder ClearCurPosZ() {
        PrepareBuilder();
        result.hasCurPosZ = false;
        result.curPosZ_ = 0F;
        return this;
      }
      
      public bool HasFaceDirection {
        get { return result.hasFaceDirection; }
      }
      public float FaceDirection {
        get { return result.FaceDirection; }
        set { SetFaceDirection(value); }
      }
      public Builder SetFaceDirection(float value) {
        PrepareBuilder();
        result.hasFaceDirection = true;
        result.faceDirection_ = value;
        return this;
      }
      public Builder ClearFaceDirection() {
        PrepareBuilder();
        result.hasFaceDirection = false;
        result.faceDirection_ = 0F;
        return this;
      }
    }
    static Msg_RC_NpcEnter() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_NpcMove : pb::GeneratedMessage<Msg_RC_NpcMove, Msg_RC_NpcMove.Builder> {
    private Msg_RC_NpcMove() { }
    private static readonly Msg_RC_NpcMove defaultInstance = new Msg_RC_NpcMove().MakeReadOnly();
    private static readonly string[] _msgRCNpcMoveFieldNames = new string[] { "cur_pos_x", "cur_pos_y", "cur_pos_z", "face_direction", "is_moving", "move_direction", "npc_id", "send_time", "target_pos_x", "target_pos_y", "target_pos_z", "velocity_coefficient" };
    private static readonly uint[] _msgRCNpcMoveFieldTags = new uint[] { 29, 37, 45, 69, 48, 61, 16, 8, 77, 85, 93, 101 };
    public static Msg_RC_NpcMove DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_NpcMove DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_NpcMove ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_NpcMove__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_NpcMove, Msg_RC_NpcMove.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_NpcMove__FieldAccessorTable; }
    }
    
    public const int SendTimeFieldNumber = 1;
    private bool hasSendTime;
    private long sendTime_;
    public bool HasSendTime {
      get { return hasSendTime; }
    }
    public long SendTime {
      get { return sendTime_; }
    }
    
    public const int NpcIdFieldNumber = 2;
    private bool hasNpcId;
    private int npcId_;
    public bool HasNpcId {
      get { return hasNpcId; }
    }
    public int NpcId {
      get { return npcId_; }
    }
    
    public const int CurPosXFieldNumber = 3;
    private bool hasCurPosX;
    private float curPosX_;
    public bool HasCurPosX {
      get { return hasCurPosX; }
    }
    public float CurPosX {
      get { return curPosX_; }
    }
    
    public const int CurPosYFieldNumber = 4;
    private bool hasCurPosY;
    private float curPosY_;
    public bool HasCurPosY {
      get { return hasCurPosY; }
    }
    public float CurPosY {
      get { return curPosY_; }
    }
    
    public const int CurPosZFieldNumber = 5;
    private bool hasCurPosZ;
    private float curPosZ_;
    public bool HasCurPosZ {
      get { return hasCurPosZ; }
    }
    public float CurPosZ {
      get { return curPosZ_; }
    }
    
    public const int IsMovingFieldNumber = 6;
    private bool hasIsMoving;
    private bool isMoving_;
    public bool HasIsMoving {
      get { return hasIsMoving; }
    }
    public bool IsMoving {
      get { return isMoving_; }
    }
    
    public const int MoveDirectionFieldNumber = 7;
    private bool hasMoveDirection;
    private float moveDirection_;
    public bool HasMoveDirection {
      get { return hasMoveDirection; }
    }
    public float MoveDirection {
      get { return moveDirection_; }
    }
    
    public const int FaceDirectionFieldNumber = 8;
    private bool hasFaceDirection;
    private float faceDirection_;
    public bool HasFaceDirection {
      get { return hasFaceDirection; }
    }
    public float FaceDirection {
      get { return faceDirection_; }
    }
    
    public const int TargetPosXFieldNumber = 9;
    private bool hasTargetPosX;
    private float targetPosX_;
    public bool HasTargetPosX {
      get { return hasTargetPosX; }
    }
    public float TargetPosX {
      get { return targetPosX_; }
    }
    
    public const int TargetPosYFieldNumber = 10;
    private bool hasTargetPosY;
    private float targetPosY_;
    public bool HasTargetPosY {
      get { return hasTargetPosY; }
    }
    public float TargetPosY {
      get { return targetPosY_; }
    }
    
    public const int TargetPosZFieldNumber = 11;
    private bool hasTargetPosZ;
    private float targetPosZ_;
    public bool HasTargetPosZ {
      get { return hasTargetPosZ; }
    }
    public float TargetPosZ {
      get { return targetPosZ_; }
    }
    
    public const int VelocityCoefficientFieldNumber = 12;
    private bool hasVelocityCoefficient;
    private float velocityCoefficient_;
    public bool HasVelocityCoefficient {
      get { return hasVelocityCoefficient; }
    }
    public float VelocityCoefficient {
      get { return velocityCoefficient_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSendTime) return false;
        if (!hasNpcId) return false;
        if (!hasCurPosX) return false;
        if (!hasCurPosY) return false;
        if (!hasCurPosZ) return false;
        if (!hasIsMoving) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCNpcMoveFieldNames;
      if (hasSendTime) {
        output.WriteInt64(1, field_names[7], SendTime);
      }
      if (hasNpcId) {
        output.WriteInt32(2, field_names[6], NpcId);
      }
      if (hasCurPosX) {
        output.WriteFloat(3, field_names[0], CurPosX);
      }
      if (hasCurPosY) {
        output.WriteFloat(4, field_names[1], CurPosY);
      }
      if (hasCurPosZ) {
        output.WriteFloat(5, field_names[2], CurPosZ);
      }
      if (hasIsMoving) {
        output.WriteBool(6, field_names[4], IsMoving);
      }
      if (hasMoveDirection) {
        output.WriteFloat(7, field_names[5], MoveDirection);
      }
      if (hasFaceDirection) {
        output.WriteFloat(8, field_names[3], FaceDirection);
      }
      if (hasTargetPosX) {
        output.WriteFloat(9, field_names[8], TargetPosX);
      }
      if (hasTargetPosY) {
        output.WriteFloat(10, field_names[9], TargetPosY);
      }
      if (hasTargetPosZ) {
        output.WriteFloat(11, field_names[10], TargetPosZ);
      }
      if (hasVelocityCoefficient) {
        output.WriteFloat(12, field_names[11], VelocityCoefficient);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSendTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, SendTime);
        }
        if (hasNpcId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, NpcId);
        }
        if (hasCurPosX) {
          size += pb::CodedOutputStream.ComputeFloatSize(3, CurPosX);
        }
        if (hasCurPosY) {
          size += pb::CodedOutputStream.ComputeFloatSize(4, CurPosY);
        }
        if (hasCurPosZ) {
          size += pb::CodedOutputStream.ComputeFloatSize(5, CurPosZ);
        }
        if (hasIsMoving) {
          size += pb::CodedOutputStream.ComputeBoolSize(6, IsMoving);
        }
        if (hasMoveDirection) {
          size += pb::CodedOutputStream.ComputeFloatSize(7, MoveDirection);
        }
        if (hasFaceDirection) {
          size += pb::CodedOutputStream.ComputeFloatSize(8, FaceDirection);
        }
        if (hasTargetPosX) {
          size += pb::CodedOutputStream.ComputeFloatSize(9, TargetPosX);
        }
        if (hasTargetPosY) {
          size += pb::CodedOutputStream.ComputeFloatSize(10, TargetPosY);
        }
        if (hasTargetPosZ) {
          size += pb::CodedOutputStream.ComputeFloatSize(11, TargetPosZ);
        }
        if (hasVelocityCoefficient) {
          size += pb::CodedOutputStream.ComputeFloatSize(12, VelocityCoefficient);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_NpcMove ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_NpcMove ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NpcMove ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_NpcMove ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NpcMove ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_NpcMove ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NpcMove ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_NpcMove ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_NpcMove ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_NpcMove ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_NpcMove MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_NpcMove prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_NpcMove, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_NpcMove cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_NpcMove result;
      
      private Msg_RC_NpcMove PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_NpcMove original = result;
          result = new Msg_RC_NpcMove();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_NpcMove MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_NpcMove.Descriptor; }
      }
      
      public override Msg_RC_NpcMove DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_NpcMove.DefaultInstance; }
      }
      
      public override Msg_RC_NpcMove BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_NpcMove) {
          return MergeFrom((Msg_RC_NpcMove) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_NpcMove other) {
        if (other == global::DashFireMessage.Msg_RC_NpcMove.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSendTime) {
          SendTime = other.SendTime;
        }
        if (other.HasNpcId) {
          NpcId = other.NpcId;
        }
        if (other.HasCurPosX) {
          CurPosX = other.CurPosX;
        }
        if (other.HasCurPosY) {
          CurPosY = other.CurPosY;
        }
        if (other.HasCurPosZ) {
          CurPosZ = other.CurPosZ;
        }
        if (other.HasIsMoving) {
          IsMoving = other.IsMoving;
        }
        if (other.HasMoveDirection) {
          MoveDirection = other.MoveDirection;
        }
        if (other.HasFaceDirection) {
          FaceDirection = other.FaceDirection;
        }
        if (other.HasTargetPosX) {
          TargetPosX = other.TargetPosX;
        }
        if (other.HasTargetPosY) {
          TargetPosY = other.TargetPosY;
        }
        if (other.HasTargetPosZ) {
          TargetPosZ = other.TargetPosZ;
        }
        if (other.HasVelocityCoefficient) {
          VelocityCoefficient = other.VelocityCoefficient;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCNpcMoveFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCNpcMoveFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSendTime = input.ReadInt64(ref result.sendTime_);
              break;
            }
            case 16: {
              result.hasNpcId = input.ReadInt32(ref result.npcId_);
              break;
            }
            case 29: {
              result.hasCurPosX = input.ReadFloat(ref result.curPosX_);
              break;
            }
            case 37: {
              result.hasCurPosY = input.ReadFloat(ref result.curPosY_);
              break;
            }
            case 45: {
              result.hasCurPosZ = input.ReadFloat(ref result.curPosZ_);
              break;
            }
            case 48: {
              result.hasIsMoving = input.ReadBool(ref result.isMoving_);
              break;
            }
            case 61: {
              result.hasMoveDirection = input.ReadFloat(ref result.moveDirection_);
              break;
            }
            case 69: {
              result.hasFaceDirection = input.ReadFloat(ref result.faceDirection_);
              break;
            }
            case 77: {
              result.hasTargetPosX = input.ReadFloat(ref result.targetPosX_);
              break;
            }
            case 85: {
              result.hasTargetPosY = input.ReadFloat(ref result.targetPosY_);
              break;
            }
            case 93: {
              result.hasTargetPosZ = input.ReadFloat(ref result.targetPosZ_);
              break;
            }
            case 101: {
              result.hasVelocityCoefficient = input.ReadFloat(ref result.velocityCoefficient_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSendTime {
        get { return result.hasSendTime; }
      }
      public long SendTime {
        get { return result.SendTime; }
        set { SetSendTime(value); }
      }
      public Builder SetSendTime(long value) {
        PrepareBuilder();
        result.hasSendTime = true;
        result.sendTime_ = value;
        return this;
      }
      public Builder ClearSendTime() {
        PrepareBuilder();
        result.hasSendTime = false;
        result.sendTime_ = 0L;
        return this;
      }
      
      public bool HasNpcId {
        get { return result.hasNpcId; }
      }
      public int NpcId {
        get { return result.NpcId; }
        set { SetNpcId(value); }
      }
      public Builder SetNpcId(int value) {
        PrepareBuilder();
        result.hasNpcId = true;
        result.npcId_ = value;
        return this;
      }
      public Builder ClearNpcId() {
        PrepareBuilder();
        result.hasNpcId = false;
        result.npcId_ = 0;
        return this;
      }
      
      public bool HasCurPosX {
        get { return result.hasCurPosX; }
      }
      public float CurPosX {
        get { return result.CurPosX; }
        set { SetCurPosX(value); }
      }
      public Builder SetCurPosX(float value) {
        PrepareBuilder();
        result.hasCurPosX = true;
        result.curPosX_ = value;
        return this;
      }
      public Builder ClearCurPosX() {
        PrepareBuilder();
        result.hasCurPosX = false;
        result.curPosX_ = 0F;
        return this;
      }
      
      public bool HasCurPosY {
        get { return result.hasCurPosY; }
      }
      public float CurPosY {
        get { return result.CurPosY; }
        set { SetCurPosY(value); }
      }
      public Builder SetCurPosY(float value) {
        PrepareBuilder();
        result.hasCurPosY = true;
        result.curPosY_ = value;
        return this;
      }
      public Builder ClearCurPosY() {
        PrepareBuilder();
        result.hasCurPosY = false;
        result.curPosY_ = 0F;
        return this;
      }
      
      public bool HasCurPosZ {
        get { return result.hasCurPosZ; }
      }
      public float CurPosZ {
        get { return result.CurPosZ; }
        set { SetCurPosZ(value); }
      }
      public Builder SetCurPosZ(float value) {
        PrepareBuilder();
        result.hasCurPosZ = true;
        result.curPosZ_ = value;
        return this;
      }
      public Builder ClearCurPosZ() {
        PrepareBuilder();
        result.hasCurPosZ = false;
        result.curPosZ_ = 0F;
        return this;
      }
      
      public bool HasIsMoving {
        get { return result.hasIsMoving; }
      }
      public bool IsMoving {
        get { return result.IsMoving; }
        set { SetIsMoving(value); }
      }
      public Builder SetIsMoving(bool value) {
        PrepareBuilder();
        result.hasIsMoving = true;
        result.isMoving_ = value;
        return this;
      }
      public Builder ClearIsMoving() {
        PrepareBuilder();
        result.hasIsMoving = false;
        result.isMoving_ = false;
        return this;
      }
      
      public bool HasMoveDirection {
        get { return result.hasMoveDirection; }
      }
      public float MoveDirection {
        get { return result.MoveDirection; }
        set { SetMoveDirection(value); }
      }
      public Builder SetMoveDirection(float value) {
        PrepareBuilder();
        result.hasMoveDirection = true;
        result.moveDirection_ = value;
        return this;
      }
      public Builder ClearMoveDirection() {
        PrepareBuilder();
        result.hasMoveDirection = false;
        result.moveDirection_ = 0F;
        return this;
      }
      
      public bool HasFaceDirection {
        get { return result.hasFaceDirection; }
      }
      public float FaceDirection {
        get { return result.FaceDirection; }
        set { SetFaceDirection(value); }
      }
      public Builder SetFaceDirection(float value) {
        PrepareBuilder();
        result.hasFaceDirection = true;
        result.faceDirection_ = value;
        return this;
      }
      public Builder ClearFaceDirection() {
        PrepareBuilder();
        result.hasFaceDirection = false;
        result.faceDirection_ = 0F;
        return this;
      }
      
      public bool HasTargetPosX {
        get { return result.hasTargetPosX; }
      }
      public float TargetPosX {
        get { return result.TargetPosX; }
        set { SetTargetPosX(value); }
      }
      public Builder SetTargetPosX(float value) {
        PrepareBuilder();
        result.hasTargetPosX = true;
        result.targetPosX_ = value;
        return this;
      }
      public Builder ClearTargetPosX() {
        PrepareBuilder();
        result.hasTargetPosX = false;
        result.targetPosX_ = 0F;
        return this;
      }
      
      public bool HasTargetPosY {
        get { return result.hasTargetPosY; }
      }
      public float TargetPosY {
        get { return result.TargetPosY; }
        set { SetTargetPosY(value); }
      }
      public Builder SetTargetPosY(float value) {
        PrepareBuilder();
        result.hasTargetPosY = true;
        result.targetPosY_ = value;
        return this;
      }
      public Builder ClearTargetPosY() {
        PrepareBuilder();
        result.hasTargetPosY = false;
        result.targetPosY_ = 0F;
        return this;
      }
      
      public bool HasTargetPosZ {
        get { return result.hasTargetPosZ; }
      }
      public float TargetPosZ {
        get { return result.TargetPosZ; }
        set { SetTargetPosZ(value); }
      }
      public Builder SetTargetPosZ(float value) {
        PrepareBuilder();
        result.hasTargetPosZ = true;
        result.targetPosZ_ = value;
        return this;
      }
      public Builder ClearTargetPosZ() {
        PrepareBuilder();
        result.hasTargetPosZ = false;
        result.targetPosZ_ = 0F;
        return this;
      }
      
      public bool HasVelocityCoefficient {
        get { return result.hasVelocityCoefficient; }
      }
      public float VelocityCoefficient {
        get { return result.VelocityCoefficient; }
        set { SetVelocityCoefficient(value); }
      }
      public Builder SetVelocityCoefficient(float value) {
        PrepareBuilder();
        result.hasVelocityCoefficient = true;
        result.velocityCoefficient_ = value;
        return this;
      }
      public Builder ClearVelocityCoefficient() {
        PrepareBuilder();
        result.hasVelocityCoefficient = false;
        result.velocityCoefficient_ = 0F;
        return this;
      }
    }
    static Msg_RC_NpcMove() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_NpcFace : pb::GeneratedMessage<Msg_RC_NpcFace, Msg_RC_NpcFace.Builder> {
    private Msg_RC_NpcFace() { }
    private static readonly Msg_RC_NpcFace defaultInstance = new Msg_RC_NpcFace().MakeReadOnly();
    private static readonly string[] _msgRCNpcFaceFieldNames = new string[] { "face_direction", "npc_id" };
    private static readonly uint[] _msgRCNpcFaceFieldTags = new uint[] { 21, 8 };
    public static Msg_RC_NpcFace DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_NpcFace DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_NpcFace ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_NpcFace__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_NpcFace, Msg_RC_NpcFace.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_NpcFace__FieldAccessorTable; }
    }
    
    public const int NpcIdFieldNumber = 1;
    private bool hasNpcId;
    private int npcId_;
    public bool HasNpcId {
      get { return hasNpcId; }
    }
    public int NpcId {
      get { return npcId_; }
    }
    
    public const int FaceDirectionFieldNumber = 2;
    private bool hasFaceDirection;
    private float faceDirection_;
    public bool HasFaceDirection {
      get { return hasFaceDirection; }
    }
    public float FaceDirection {
      get { return faceDirection_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasFaceDirection) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCNpcFaceFieldNames;
      if (hasNpcId) {
        output.WriteInt32(1, field_names[1], NpcId);
      }
      if (hasFaceDirection) {
        output.WriteFloat(2, field_names[0], FaceDirection);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasNpcId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, NpcId);
        }
        if (hasFaceDirection) {
          size += pb::CodedOutputStream.ComputeFloatSize(2, FaceDirection);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_NpcFace ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_NpcFace ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NpcFace ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_NpcFace ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NpcFace ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_NpcFace ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NpcFace ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_NpcFace ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_NpcFace ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_NpcFace ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_NpcFace MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_NpcFace prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_NpcFace, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_NpcFace cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_NpcFace result;
      
      private Msg_RC_NpcFace PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_NpcFace original = result;
          result = new Msg_RC_NpcFace();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_NpcFace MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_NpcFace.Descriptor; }
      }
      
      public override Msg_RC_NpcFace DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_NpcFace.DefaultInstance; }
      }
      
      public override Msg_RC_NpcFace BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_NpcFace) {
          return MergeFrom((Msg_RC_NpcFace) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_NpcFace other) {
        if (other == global::DashFireMessage.Msg_RC_NpcFace.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasNpcId) {
          NpcId = other.NpcId;
        }
        if (other.HasFaceDirection) {
          FaceDirection = other.FaceDirection;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCNpcFaceFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCNpcFaceFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasNpcId = input.ReadInt32(ref result.npcId_);
              break;
            }
            case 21: {
              result.hasFaceDirection = input.ReadFloat(ref result.faceDirection_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasNpcId {
        get { return result.hasNpcId; }
      }
      public int NpcId {
        get { return result.NpcId; }
        set { SetNpcId(value); }
      }
      public Builder SetNpcId(int value) {
        PrepareBuilder();
        result.hasNpcId = true;
        result.npcId_ = value;
        return this;
      }
      public Builder ClearNpcId() {
        PrepareBuilder();
        result.hasNpcId = false;
        result.npcId_ = 0;
        return this;
      }
      
      public bool HasFaceDirection {
        get { return result.hasFaceDirection; }
      }
      public float FaceDirection {
        get { return result.FaceDirection; }
        set { SetFaceDirection(value); }
      }
      public Builder SetFaceDirection(float value) {
        PrepareBuilder();
        result.hasFaceDirection = true;
        result.faceDirection_ = value;
        return this;
      }
      public Builder ClearFaceDirection() {
        PrepareBuilder();
        result.hasFaceDirection = false;
        result.faceDirection_ = 0F;
        return this;
      }
    }
    static Msg_RC_NpcFace() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_NpcTarget : pb::GeneratedMessage<Msg_RC_NpcTarget, Msg_RC_NpcTarget.Builder> {
    private Msg_RC_NpcTarget() { }
    private static readonly Msg_RC_NpcTarget defaultInstance = new Msg_RC_NpcTarget().MakeReadOnly();
    private static readonly string[] _msgRCNpcTargetFieldNames = new string[] { "npc_id", "target_id" };
    private static readonly uint[] _msgRCNpcTargetFieldTags = new uint[] { 8, 16 };
    public static Msg_RC_NpcTarget DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_NpcTarget DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_NpcTarget ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_NpcTarget__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_NpcTarget, Msg_RC_NpcTarget.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_NpcTarget__FieldAccessorTable; }
    }
    
    public const int NpcIdFieldNumber = 1;
    private bool hasNpcId;
    private int npcId_;
    public bool HasNpcId {
      get { return hasNpcId; }
    }
    public int NpcId {
      get { return npcId_; }
    }
    
    public const int TargetIdFieldNumber = 2;
    private bool hasTargetId;
    private int targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public int TargetId {
      get { return targetId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasNpcId) return false;
        if (!hasTargetId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCNpcTargetFieldNames;
      if (hasNpcId) {
        output.WriteInt32(1, field_names[0], NpcId);
      }
      if (hasTargetId) {
        output.WriteInt32(2, field_names[1], TargetId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasNpcId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, NpcId);
        }
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, TargetId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_NpcTarget ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_NpcTarget ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NpcTarget ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_NpcTarget ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NpcTarget ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_NpcTarget ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NpcTarget ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_NpcTarget ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_NpcTarget ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_NpcTarget ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_NpcTarget MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_NpcTarget prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_NpcTarget, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_NpcTarget cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_NpcTarget result;
      
      private Msg_RC_NpcTarget PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_NpcTarget original = result;
          result = new Msg_RC_NpcTarget();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_NpcTarget MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_NpcTarget.Descriptor; }
      }
      
      public override Msg_RC_NpcTarget DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_NpcTarget.DefaultInstance; }
      }
      
      public override Msg_RC_NpcTarget BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_NpcTarget) {
          return MergeFrom((Msg_RC_NpcTarget) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_NpcTarget other) {
        if (other == global::DashFireMessage.Msg_RC_NpcTarget.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasNpcId) {
          NpcId = other.NpcId;
        }
        if (other.HasTargetId) {
          TargetId = other.TargetId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCNpcTargetFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCNpcTargetFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasNpcId = input.ReadInt32(ref result.npcId_);
              break;
            }
            case 16: {
              result.hasTargetId = input.ReadInt32(ref result.targetId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasNpcId {
        get { return result.hasNpcId; }
      }
      public int NpcId {
        get { return result.NpcId; }
        set { SetNpcId(value); }
      }
      public Builder SetNpcId(int value) {
        PrepareBuilder();
        result.hasNpcId = true;
        result.npcId_ = value;
        return this;
      }
      public Builder ClearNpcId() {
        PrepareBuilder();
        result.hasNpcId = false;
        result.npcId_ = 0;
        return this;
      }
      
      public bool HasTargetId {
        get { return result.hasTargetId; }
      }
      public int TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(int value) {
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = 0;
        return this;
      }
    }
    static Msg_RC_NpcTarget() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_NpcShoot : pb::GeneratedMessage<Msg_RC_NpcShoot, Msg_RC_NpcShoot.Builder> {
    private Msg_RC_NpcShoot() { }
    private static readonly Msg_RC_NpcShoot defaultInstance = new Msg_RC_NpcShoot().MakeReadOnly();
    private static readonly string[] _msgRCNpcShootFieldNames = new string[] { "npc_id", "send_time", "target_id" };
    private static readonly uint[] _msgRCNpcShootFieldTags = new uint[] { 16, 8, 24 };
    public static Msg_RC_NpcShoot DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_NpcShoot DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_NpcShoot ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_NpcShoot__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_NpcShoot, Msg_RC_NpcShoot.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_NpcShoot__FieldAccessorTable; }
    }
    
    public const int SendTimeFieldNumber = 1;
    private bool hasSendTime;
    private long sendTime_;
    public bool HasSendTime {
      get { return hasSendTime; }
    }
    public long SendTime {
      get { return sendTime_; }
    }
    
    public const int NpcIdFieldNumber = 2;
    private bool hasNpcId;
    private int npcId_;
    public bool HasNpcId {
      get { return hasNpcId; }
    }
    public int NpcId {
      get { return npcId_; }
    }
    
    public const int TargetIdFieldNumber = 3;
    private bool hasTargetId;
    private int targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public int TargetId {
      get { return targetId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSendTime) return false;
        if (!hasNpcId) return false;
        if (!hasTargetId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCNpcShootFieldNames;
      if (hasSendTime) {
        output.WriteInt64(1, field_names[1], SendTime);
      }
      if (hasNpcId) {
        output.WriteInt32(2, field_names[0], NpcId);
      }
      if (hasTargetId) {
        output.WriteInt32(3, field_names[2], TargetId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSendTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, SendTime);
        }
        if (hasNpcId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, NpcId);
        }
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, TargetId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_NpcShoot ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_NpcShoot ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NpcShoot ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_NpcShoot ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NpcShoot ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_NpcShoot ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NpcShoot ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_NpcShoot ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_NpcShoot ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_NpcShoot ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_NpcShoot MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_NpcShoot prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_NpcShoot, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_NpcShoot cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_NpcShoot result;
      
      private Msg_RC_NpcShoot PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_NpcShoot original = result;
          result = new Msg_RC_NpcShoot();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_NpcShoot MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_NpcShoot.Descriptor; }
      }
      
      public override Msg_RC_NpcShoot DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_NpcShoot.DefaultInstance; }
      }
      
      public override Msg_RC_NpcShoot BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_NpcShoot) {
          return MergeFrom((Msg_RC_NpcShoot) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_NpcShoot other) {
        if (other == global::DashFireMessage.Msg_RC_NpcShoot.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSendTime) {
          SendTime = other.SendTime;
        }
        if (other.HasNpcId) {
          NpcId = other.NpcId;
        }
        if (other.HasTargetId) {
          TargetId = other.TargetId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCNpcShootFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCNpcShootFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSendTime = input.ReadInt64(ref result.sendTime_);
              break;
            }
            case 16: {
              result.hasNpcId = input.ReadInt32(ref result.npcId_);
              break;
            }
            case 24: {
              result.hasTargetId = input.ReadInt32(ref result.targetId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSendTime {
        get { return result.hasSendTime; }
      }
      public long SendTime {
        get { return result.SendTime; }
        set { SetSendTime(value); }
      }
      public Builder SetSendTime(long value) {
        PrepareBuilder();
        result.hasSendTime = true;
        result.sendTime_ = value;
        return this;
      }
      public Builder ClearSendTime() {
        PrepareBuilder();
        result.hasSendTime = false;
        result.sendTime_ = 0L;
        return this;
      }
      
      public bool HasNpcId {
        get { return result.hasNpcId; }
      }
      public int NpcId {
        get { return result.NpcId; }
        set { SetNpcId(value); }
      }
      public Builder SetNpcId(int value) {
        PrepareBuilder();
        result.hasNpcId = true;
        result.npcId_ = value;
        return this;
      }
      public Builder ClearNpcId() {
        PrepareBuilder();
        result.hasNpcId = false;
        result.npcId_ = 0;
        return this;
      }
      
      public bool HasTargetId {
        get { return result.hasTargetId; }
      }
      public int TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(int value) {
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = 0;
        return this;
      }
    }
    static Msg_RC_NpcShoot() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_NpcSkill : pb::GeneratedMessage<Msg_RC_NpcSkill, Msg_RC_NpcSkill.Builder> {
    private Msg_RC_NpcSkill() { }
    private static readonly Msg_RC_NpcSkill defaultInstance = new Msg_RC_NpcSkill().MakeReadOnly();
    private static readonly string[] _msgRCNpcSkillFieldNames = new string[] { "face_direction", "npc_id", "send_time", "skill_id", "stand_pos", "target_angle", "target_id", "target_pos" };
    private static readonly uint[] _msgRCNpcSkillFieldTags = new uint[] { 69, 16, 8, 24, 58, 53, 32, 42 };
    public static Msg_RC_NpcSkill DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_NpcSkill DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_NpcSkill ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_NpcSkill__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_NpcSkill, Msg_RC_NpcSkill.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_NpcSkill__FieldAccessorTable; }
    }
    
    public const int SendTimeFieldNumber = 1;
    private bool hasSendTime;
    private long sendTime_;
    public bool HasSendTime {
      get { return hasSendTime; }
    }
    public long SendTime {
      get { return sendTime_; }
    }
    
    public const int NpcIdFieldNumber = 2;
    private bool hasNpcId;
    private int npcId_;
    public bool HasNpcId {
      get { return hasNpcId; }
    }
    public int NpcId {
      get { return npcId_; }
    }
    
    public const int SkillIdFieldNumber = 3;
    private bool hasSkillId;
    private int skillId_;
    public bool HasSkillId {
      get { return hasSkillId; }
    }
    public int SkillId {
      get { return skillId_; }
    }
    
    public const int TargetIdFieldNumber = 4;
    private bool hasTargetId;
    private int targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public int TargetId {
      get { return targetId_; }
    }
    
    public const int TargetPosFieldNumber = 5;
    private bool hasTargetPos;
    private global::DashFireMessage.Position targetPos_;
    public bool HasTargetPos {
      get { return hasTargetPos; }
    }
    public global::DashFireMessage.Position TargetPos {
      get { return targetPos_ ?? global::DashFireMessage.Position.DefaultInstance; }
    }
    
    public const int TargetAngleFieldNumber = 6;
    private bool hasTargetAngle;
    private float targetAngle_;
    public bool HasTargetAngle {
      get { return hasTargetAngle; }
    }
    public float TargetAngle {
      get { return targetAngle_; }
    }
    
    public const int StandPosFieldNumber = 7;
    private bool hasStandPos;
    private global::DashFireMessage.Position standPos_;
    public bool HasStandPos {
      get { return hasStandPos; }
    }
    public global::DashFireMessage.Position StandPos {
      get { return standPos_ ?? global::DashFireMessage.Position.DefaultInstance; }
    }
    
    public const int FaceDirectionFieldNumber = 8;
    private bool hasFaceDirection;
    private float faceDirection_;
    public bool HasFaceDirection {
      get { return hasFaceDirection; }
    }
    public float FaceDirection {
      get { return faceDirection_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSendTime) return false;
        if (!hasNpcId) return false;
        if (!hasSkillId) return false;
        if (!hasTargetId) return false;
        if (!hasTargetPos) return false;
        if (!hasTargetAngle) return false;
        if (!hasStandPos) return false;
        if (!hasFaceDirection) return false;
        if (!TargetPos.IsInitialized) return false;
        if (!StandPos.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCNpcSkillFieldNames;
      if (hasSendTime) {
        output.WriteInt64(1, field_names[2], SendTime);
      }
      if (hasNpcId) {
        output.WriteInt32(2, field_names[1], NpcId);
      }
      if (hasSkillId) {
        output.WriteInt32(3, field_names[3], SkillId);
      }
      if (hasTargetId) {
        output.WriteInt32(4, field_names[6], TargetId);
      }
      if (hasTargetPos) {
        output.WriteMessage(5, field_names[7], TargetPos);
      }
      if (hasTargetAngle) {
        output.WriteFloat(6, field_names[5], TargetAngle);
      }
      if (hasStandPos) {
        output.WriteMessage(7, field_names[4], StandPos);
      }
      if (hasFaceDirection) {
        output.WriteFloat(8, field_names[0], FaceDirection);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSendTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, SendTime);
        }
        if (hasNpcId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, NpcId);
        }
        if (hasSkillId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, SkillId);
        }
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, TargetId);
        }
        if (hasTargetPos) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, TargetPos);
        }
        if (hasTargetAngle) {
          size += pb::CodedOutputStream.ComputeFloatSize(6, TargetAngle);
        }
        if (hasStandPos) {
          size += pb::CodedOutputStream.ComputeMessageSize(7, StandPos);
        }
        if (hasFaceDirection) {
          size += pb::CodedOutputStream.ComputeFloatSize(8, FaceDirection);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_NpcSkill ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_NpcSkill ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NpcSkill ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_NpcSkill ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NpcSkill ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_NpcSkill ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NpcSkill ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_NpcSkill ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_NpcSkill ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_NpcSkill ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_NpcSkill MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_NpcSkill prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_NpcSkill, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_NpcSkill cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_NpcSkill result;
      
      private Msg_RC_NpcSkill PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_NpcSkill original = result;
          result = new Msg_RC_NpcSkill();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_NpcSkill MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_NpcSkill.Descriptor; }
      }
      
      public override Msg_RC_NpcSkill DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_NpcSkill.DefaultInstance; }
      }
      
      public override Msg_RC_NpcSkill BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_NpcSkill) {
          return MergeFrom((Msg_RC_NpcSkill) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_NpcSkill other) {
        if (other == global::DashFireMessage.Msg_RC_NpcSkill.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSendTime) {
          SendTime = other.SendTime;
        }
        if (other.HasNpcId) {
          NpcId = other.NpcId;
        }
        if (other.HasSkillId) {
          SkillId = other.SkillId;
        }
        if (other.HasTargetId) {
          TargetId = other.TargetId;
        }
        if (other.HasTargetPos) {
          MergeTargetPos(other.TargetPos);
        }
        if (other.HasTargetAngle) {
          TargetAngle = other.TargetAngle;
        }
        if (other.HasStandPos) {
          MergeStandPos(other.StandPos);
        }
        if (other.HasFaceDirection) {
          FaceDirection = other.FaceDirection;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCNpcSkillFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCNpcSkillFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSendTime = input.ReadInt64(ref result.sendTime_);
              break;
            }
            case 16: {
              result.hasNpcId = input.ReadInt32(ref result.npcId_);
              break;
            }
            case 24: {
              result.hasSkillId = input.ReadInt32(ref result.skillId_);
              break;
            }
            case 32: {
              result.hasTargetId = input.ReadInt32(ref result.targetId_);
              break;
            }
            case 42: {
              global::DashFireMessage.Position.Builder subBuilder = global::DashFireMessage.Position.CreateBuilder();
              if (result.hasTargetPos) {
                subBuilder.MergeFrom(TargetPos);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetPos = subBuilder.BuildPartial();
              break;
            }
            case 53: {
              result.hasTargetAngle = input.ReadFloat(ref result.targetAngle_);
              break;
            }
            case 58: {
              global::DashFireMessage.Position.Builder subBuilder = global::DashFireMessage.Position.CreateBuilder();
              if (result.hasStandPos) {
                subBuilder.MergeFrom(StandPos);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StandPos = subBuilder.BuildPartial();
              break;
            }
            case 69: {
              result.hasFaceDirection = input.ReadFloat(ref result.faceDirection_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSendTime {
        get { return result.hasSendTime; }
      }
      public long SendTime {
        get { return result.SendTime; }
        set { SetSendTime(value); }
      }
      public Builder SetSendTime(long value) {
        PrepareBuilder();
        result.hasSendTime = true;
        result.sendTime_ = value;
        return this;
      }
      public Builder ClearSendTime() {
        PrepareBuilder();
        result.hasSendTime = false;
        result.sendTime_ = 0L;
        return this;
      }
      
      public bool HasNpcId {
        get { return result.hasNpcId; }
      }
      public int NpcId {
        get { return result.NpcId; }
        set { SetNpcId(value); }
      }
      public Builder SetNpcId(int value) {
        PrepareBuilder();
        result.hasNpcId = true;
        result.npcId_ = value;
        return this;
      }
      public Builder ClearNpcId() {
        PrepareBuilder();
        result.hasNpcId = false;
        result.npcId_ = 0;
        return this;
      }
      
      public bool HasSkillId {
        get { return result.hasSkillId; }
      }
      public int SkillId {
        get { return result.SkillId; }
        set { SetSkillId(value); }
      }
      public Builder SetSkillId(int value) {
        PrepareBuilder();
        result.hasSkillId = true;
        result.skillId_ = value;
        return this;
      }
      public Builder ClearSkillId() {
        PrepareBuilder();
        result.hasSkillId = false;
        result.skillId_ = 0;
        return this;
      }
      
      public bool HasTargetId {
        get { return result.hasTargetId; }
      }
      public int TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(int value) {
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = 0;
        return this;
      }
      
      public bool HasTargetPos {
       get { return result.hasTargetPos; }
      }
      public global::DashFireMessage.Position TargetPos {
        get { return result.TargetPos; }
        set { SetTargetPos(value); }
      }
      public Builder SetTargetPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetPos = true;
        result.targetPos_ = value;
        return this;
      }
      public Builder SetTargetPos(global::DashFireMessage.Position.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetPos = true;
        result.targetPos_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetPos &&
            result.targetPos_ != global::DashFireMessage.Position.DefaultInstance) {
            result.targetPos_ = global::DashFireMessage.Position.CreateBuilder(result.targetPos_).MergeFrom(value).BuildPartial();
        } else {
          result.targetPos_ = value;
        }
        result.hasTargetPos = true;
        return this;
      }
      public Builder ClearTargetPos() {
        PrepareBuilder();
        result.hasTargetPos = false;
        result.targetPos_ = null;
        return this;
      }
      
      public bool HasTargetAngle {
        get { return result.hasTargetAngle; }
      }
      public float TargetAngle {
        get { return result.TargetAngle; }
        set { SetTargetAngle(value); }
      }
      public Builder SetTargetAngle(float value) {
        PrepareBuilder();
        result.hasTargetAngle = true;
        result.targetAngle_ = value;
        return this;
      }
      public Builder ClearTargetAngle() {
        PrepareBuilder();
        result.hasTargetAngle = false;
        result.targetAngle_ = 0F;
        return this;
      }
      
      public bool HasStandPos {
       get { return result.hasStandPos; }
      }
      public global::DashFireMessage.Position StandPos {
        get { return result.StandPos; }
        set { SetStandPos(value); }
      }
      public Builder SetStandPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStandPos = true;
        result.standPos_ = value;
        return this;
      }
      public Builder SetStandPos(global::DashFireMessage.Position.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStandPos = true;
        result.standPos_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStandPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStandPos &&
            result.standPos_ != global::DashFireMessage.Position.DefaultInstance) {
            result.standPos_ = global::DashFireMessage.Position.CreateBuilder(result.standPos_).MergeFrom(value).BuildPartial();
        } else {
          result.standPos_ = value;
        }
        result.hasStandPos = true;
        return this;
      }
      public Builder ClearStandPos() {
        PrepareBuilder();
        result.hasStandPos = false;
        result.standPos_ = null;
        return this;
      }
      
      public bool HasFaceDirection {
        get { return result.hasFaceDirection; }
      }
      public float FaceDirection {
        get { return result.FaceDirection; }
        set { SetFaceDirection(value); }
      }
      public Builder SetFaceDirection(float value) {
        PrepareBuilder();
        result.hasFaceDirection = true;
        result.faceDirection_ = value;
        return this;
      }
      public Builder ClearFaceDirection() {
        PrepareBuilder();
        result.hasFaceDirection = false;
        result.faceDirection_ = 0F;
        return this;
      }
    }
    static Msg_RC_NpcSkill() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_NpcDead : pb::GeneratedMessage<Msg_RC_NpcDead, Msg_RC_NpcDead.Builder> {
    private Msg_RC_NpcDead() { }
    private static readonly Msg_RC_NpcDead defaultInstance = new Msg_RC_NpcDead().MakeReadOnly();
    private static readonly string[] _msgRCNpcDeadFieldNames = new string[] { "npc_id", "send_time" };
    private static readonly uint[] _msgRCNpcDeadFieldTags = new uint[] { 16, 8 };
    public static Msg_RC_NpcDead DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_NpcDead DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_NpcDead ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_NpcDead__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_NpcDead, Msg_RC_NpcDead.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_NpcDead__FieldAccessorTable; }
    }
    
    public const int SendTimeFieldNumber = 1;
    private bool hasSendTime;
    private long sendTime_;
    public bool HasSendTime {
      get { return hasSendTime; }
    }
    public long SendTime {
      get { return sendTime_; }
    }
    
    public const int NpcIdFieldNumber = 2;
    private bool hasNpcId;
    private int npcId_;
    public bool HasNpcId {
      get { return hasNpcId; }
    }
    public int NpcId {
      get { return npcId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSendTime) return false;
        if (!hasNpcId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCNpcDeadFieldNames;
      if (hasSendTime) {
        output.WriteInt64(1, field_names[1], SendTime);
      }
      if (hasNpcId) {
        output.WriteInt32(2, field_names[0], NpcId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSendTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, SendTime);
        }
        if (hasNpcId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, NpcId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_NpcDead ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_NpcDead ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NpcDead ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_NpcDead ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NpcDead ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_NpcDead ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NpcDead ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_NpcDead ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_NpcDead ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_NpcDead ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_NpcDead MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_NpcDead prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_NpcDead, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_NpcDead cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_NpcDead result;
      
      private Msg_RC_NpcDead PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_NpcDead original = result;
          result = new Msg_RC_NpcDead();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_NpcDead MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_NpcDead.Descriptor; }
      }
      
      public override Msg_RC_NpcDead DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_NpcDead.DefaultInstance; }
      }
      
      public override Msg_RC_NpcDead BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_NpcDead) {
          return MergeFrom((Msg_RC_NpcDead) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_NpcDead other) {
        if (other == global::DashFireMessage.Msg_RC_NpcDead.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSendTime) {
          SendTime = other.SendTime;
        }
        if (other.HasNpcId) {
          NpcId = other.NpcId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCNpcDeadFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCNpcDeadFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSendTime = input.ReadInt64(ref result.sendTime_);
              break;
            }
            case 16: {
              result.hasNpcId = input.ReadInt32(ref result.npcId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSendTime {
        get { return result.hasSendTime; }
      }
      public long SendTime {
        get { return result.SendTime; }
        set { SetSendTime(value); }
      }
      public Builder SetSendTime(long value) {
        PrepareBuilder();
        result.hasSendTime = true;
        result.sendTime_ = value;
        return this;
      }
      public Builder ClearSendTime() {
        PrepareBuilder();
        result.hasSendTime = false;
        result.sendTime_ = 0L;
        return this;
      }
      
      public bool HasNpcId {
        get { return result.hasNpcId; }
      }
      public int NpcId {
        get { return result.NpcId; }
        set { SetNpcId(value); }
      }
      public Builder SetNpcId(int value) {
        PrepareBuilder();
        result.hasNpcId = true;
        result.npcId_ = value;
        return this;
      }
      public Builder ClearNpcId() {
        PrepareBuilder();
        result.hasNpcId = false;
        result.npcId_ = 0;
        return this;
      }
    }
    static Msg_RC_NpcDead() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_NpcDisappear : pb::GeneratedMessage<Msg_RC_NpcDisappear, Msg_RC_NpcDisappear.Builder> {
    private Msg_RC_NpcDisappear() { }
    private static readonly Msg_RC_NpcDisappear defaultInstance = new Msg_RC_NpcDisappear().MakeReadOnly();
    private static readonly string[] _msgRCNpcDisappearFieldNames = new string[] { "npc_id" };
    private static readonly uint[] _msgRCNpcDisappearFieldTags = new uint[] { 8 };
    public static Msg_RC_NpcDisappear DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_NpcDisappear DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_NpcDisappear ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_NpcDisappear__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_NpcDisappear, Msg_RC_NpcDisappear.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_NpcDisappear__FieldAccessorTable; }
    }
    
    public const int NpcIdFieldNumber = 1;
    private bool hasNpcId;
    private int npcId_;
    public bool HasNpcId {
      get { return hasNpcId; }
    }
    public int NpcId {
      get { return npcId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasNpcId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCNpcDisappearFieldNames;
      if (hasNpcId) {
        output.WriteInt32(1, field_names[0], NpcId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasNpcId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, NpcId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_NpcDisappear ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_NpcDisappear ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NpcDisappear ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_NpcDisappear ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NpcDisappear ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_NpcDisappear ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NpcDisappear ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_NpcDisappear ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_NpcDisappear ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_NpcDisappear ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_NpcDisappear MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_NpcDisappear prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_NpcDisappear, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_NpcDisappear cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_NpcDisappear result;
      
      private Msg_RC_NpcDisappear PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_NpcDisappear original = result;
          result = new Msg_RC_NpcDisappear();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_NpcDisappear MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_NpcDisappear.Descriptor; }
      }
      
      public override Msg_RC_NpcDisappear DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_NpcDisappear.DefaultInstance; }
      }
      
      public override Msg_RC_NpcDisappear BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_NpcDisappear) {
          return MergeFrom((Msg_RC_NpcDisappear) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_NpcDisappear other) {
        if (other == global::DashFireMessage.Msg_RC_NpcDisappear.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasNpcId) {
          NpcId = other.NpcId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCNpcDisappearFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCNpcDisappearFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasNpcId = input.ReadInt32(ref result.npcId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasNpcId {
        get { return result.hasNpcId; }
      }
      public int NpcId {
        get { return result.NpcId; }
        set { SetNpcId(value); }
      }
      public Builder SetNpcId(int value) {
        PrepareBuilder();
        result.hasNpcId = true;
        result.npcId_ = value;
        return this;
      }
      public Builder ClearNpcId() {
        PrepareBuilder();
        result.hasNpcId = false;
        result.npcId_ = 0;
        return this;
      }
    }
    static Msg_RC_NpcDisappear() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_Levelup : pb::GeneratedMessage<Msg_RC_Levelup, Msg_RC_Levelup.Builder> {
    private Msg_RC_Levelup() { }
    private static readonly Msg_RC_Levelup defaultInstance = new Msg_RC_Levelup().MakeReadOnly();
    private static readonly string[] _msgRCLevelupFieldNames = new string[] { "level", "role_id" };
    private static readonly uint[] _msgRCLevelupFieldTags = new uint[] { 16, 8 };
    public static Msg_RC_Levelup DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_Levelup DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_Levelup ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_Levelup__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_Levelup, Msg_RC_Levelup.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_Levelup__FieldAccessorTable; }
    }
    
    public const int RoleIdFieldNumber = 1;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int LevelFieldNumber = 2;
    private bool hasLevel;
    private int level_;
    public bool HasLevel {
      get { return hasLevel; }
    }
    public int Level {
      get { return level_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoleId) return false;
        if (!hasLevel) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCLevelupFieldNames;
      if (hasRoleId) {
        output.WriteInt32(1, field_names[1], RoleId);
      }
      if (hasLevel) {
        output.WriteInt32(2, field_names[0], Level);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoleId);
        }
        if (hasLevel) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Level);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_Levelup ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_Levelup ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_Levelup ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_Levelup ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_Levelup ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_Levelup ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_Levelup ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_Levelup ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_Levelup ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_Levelup ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_Levelup MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_Levelup prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_Levelup, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_Levelup cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_Levelup result;
      
      private Msg_RC_Levelup PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_Levelup original = result;
          result = new Msg_RC_Levelup();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_Levelup MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_Levelup.Descriptor; }
      }
      
      public override Msg_RC_Levelup DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_Levelup.DefaultInstance; }
      }
      
      public override Msg_RC_Levelup BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_Levelup) {
          return MergeFrom((Msg_RC_Levelup) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_Levelup other) {
        if (other == global::DashFireMessage.Msg_RC_Levelup.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasLevel) {
          Level = other.Level;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCLevelupFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCLevelupFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 16: {
              result.hasLevel = input.ReadInt32(ref result.level_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasLevel {
        get { return result.hasLevel; }
      }
      public int Level {
        get { return result.Level; }
        set { SetLevel(value); }
      }
      public Builder SetLevel(int value) {
        PrepareBuilder();
        result.hasLevel = true;
        result.level_ = value;
        return this;
      }
      public Builder ClearLevel() {
        PrepareBuilder();
        result.hasLevel = false;
        result.level_ = 0;
        return this;
      }
    }
    static Msg_RC_Levelup() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_SyncLevel : pb::GeneratedMessage<Msg_RC_SyncLevel, Msg_RC_SyncLevel.Builder> {
    private Msg_RC_SyncLevel() { }
    private static readonly Msg_RC_SyncLevel defaultInstance = new Msg_RC_SyncLevel().MakeReadOnly();
    private static readonly string[] _msgRCSyncLevelFieldNames = new string[] { "level", "role_id" };
    private static readonly uint[] _msgRCSyncLevelFieldTags = new uint[] { 16, 8 };
    public static Msg_RC_SyncLevel DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_SyncLevel DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_SyncLevel ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SyncLevel__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_SyncLevel, Msg_RC_SyncLevel.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SyncLevel__FieldAccessorTable; }
    }
    
    public const int RoleIdFieldNumber = 1;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int LevelFieldNumber = 2;
    private bool hasLevel;
    private int level_;
    public bool HasLevel {
      get { return hasLevel; }
    }
    public int Level {
      get { return level_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoleId) return false;
        if (!hasLevel) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCSyncLevelFieldNames;
      if (hasRoleId) {
        output.WriteInt32(1, field_names[1], RoleId);
      }
      if (hasLevel) {
        output.WriteInt32(2, field_names[0], Level);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoleId);
        }
        if (hasLevel) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Level);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_SyncLevel ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_SyncLevel ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SyncLevel ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_SyncLevel ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SyncLevel ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_SyncLevel ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SyncLevel ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_SyncLevel ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_SyncLevel ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_SyncLevel ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_SyncLevel MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_SyncLevel prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_SyncLevel, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_SyncLevel cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_SyncLevel result;
      
      private Msg_RC_SyncLevel PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_SyncLevel original = result;
          result = new Msg_RC_SyncLevel();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_SyncLevel MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_SyncLevel.Descriptor; }
      }
      
      public override Msg_RC_SyncLevel DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_SyncLevel.DefaultInstance; }
      }
      
      public override Msg_RC_SyncLevel BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_SyncLevel) {
          return MergeFrom((Msg_RC_SyncLevel) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_SyncLevel other) {
        if (other == global::DashFireMessage.Msg_RC_SyncLevel.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasLevel) {
          Level = other.Level;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCSyncLevelFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCSyncLevelFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 16: {
              result.hasLevel = input.ReadInt32(ref result.level_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasLevel {
        get { return result.hasLevel; }
      }
      public int Level {
        get { return result.Level; }
        set { SetLevel(value); }
      }
      public Builder SetLevel(int value) {
        PrepareBuilder();
        result.hasLevel = true;
        result.level_ = value;
        return this;
      }
      public Builder ClearLevel() {
        PrepareBuilder();
        result.hasLevel = false;
        result.level_ = 0;
        return this;
      }
    }
    static Msg_RC_SyncLevel() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_SyncExpMoney : pb::GeneratedMessage<Msg_RC_SyncExpMoney, Msg_RC_SyncExpMoney.Builder> {
    private Msg_RC_SyncExpMoney() { }
    private static readonly Msg_RC_SyncExpMoney defaultInstance = new Msg_RC_SyncExpMoney().MakeReadOnly();
    private static readonly string[] _msgRCSyncExpMoneyFieldNames = new string[] { "exp", "money", "role_id", "total_money" };
    private static readonly uint[] _msgRCSyncExpMoneyFieldTags = new uint[] { 16, 24, 8, 32 };
    public static Msg_RC_SyncExpMoney DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_SyncExpMoney DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_SyncExpMoney ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SyncExpMoney__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_SyncExpMoney, Msg_RC_SyncExpMoney.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SyncExpMoney__FieldAccessorTable; }
    }
    
    public const int RoleIdFieldNumber = 1;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int ExpFieldNumber = 2;
    private bool hasExp;
    private int exp_;
    public bool HasExp {
      get { return hasExp; }
    }
    public int Exp {
      get { return exp_; }
    }
    
    public const int MoneyFieldNumber = 3;
    private bool hasMoney;
    private int money_;
    public bool HasMoney {
      get { return hasMoney; }
    }
    public int Money {
      get { return money_; }
    }
    
    public const int TotalMoneyFieldNumber = 4;
    private bool hasTotalMoney;
    private int totalMoney_;
    public bool HasTotalMoney {
      get { return hasTotalMoney; }
    }
    public int TotalMoney {
      get { return totalMoney_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoleId) return false;
        if (!hasExp) return false;
        if (!hasMoney) return false;
        if (!hasTotalMoney) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCSyncExpMoneyFieldNames;
      if (hasRoleId) {
        output.WriteInt32(1, field_names[2], RoleId);
      }
      if (hasExp) {
        output.WriteInt32(2, field_names[0], Exp);
      }
      if (hasMoney) {
        output.WriteInt32(3, field_names[1], Money);
      }
      if (hasTotalMoney) {
        output.WriteInt32(4, field_names[3], TotalMoney);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoleId);
        }
        if (hasExp) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Exp);
        }
        if (hasMoney) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, Money);
        }
        if (hasTotalMoney) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, TotalMoney);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_SyncExpMoney ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_SyncExpMoney ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SyncExpMoney ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_SyncExpMoney ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SyncExpMoney ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_SyncExpMoney ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SyncExpMoney ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_SyncExpMoney ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_SyncExpMoney ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_SyncExpMoney ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_SyncExpMoney MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_SyncExpMoney prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_SyncExpMoney, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_SyncExpMoney cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_SyncExpMoney result;
      
      private Msg_RC_SyncExpMoney PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_SyncExpMoney original = result;
          result = new Msg_RC_SyncExpMoney();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_SyncExpMoney MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_SyncExpMoney.Descriptor; }
      }
      
      public override Msg_RC_SyncExpMoney DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_SyncExpMoney.DefaultInstance; }
      }
      
      public override Msg_RC_SyncExpMoney BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_SyncExpMoney) {
          return MergeFrom((Msg_RC_SyncExpMoney) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_SyncExpMoney other) {
        if (other == global::DashFireMessage.Msg_RC_SyncExpMoney.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasExp) {
          Exp = other.Exp;
        }
        if (other.HasMoney) {
          Money = other.Money;
        }
        if (other.HasTotalMoney) {
          TotalMoney = other.TotalMoney;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCSyncExpMoneyFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCSyncExpMoneyFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 16: {
              result.hasExp = input.ReadInt32(ref result.exp_);
              break;
            }
            case 24: {
              result.hasMoney = input.ReadInt32(ref result.money_);
              break;
            }
            case 32: {
              result.hasTotalMoney = input.ReadInt32(ref result.totalMoney_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasExp {
        get { return result.hasExp; }
      }
      public int Exp {
        get { return result.Exp; }
        set { SetExp(value); }
      }
      public Builder SetExp(int value) {
        PrepareBuilder();
        result.hasExp = true;
        result.exp_ = value;
        return this;
      }
      public Builder ClearExp() {
        PrepareBuilder();
        result.hasExp = false;
        result.exp_ = 0;
        return this;
      }
      
      public bool HasMoney {
        get { return result.hasMoney; }
      }
      public int Money {
        get { return result.Money; }
        set { SetMoney(value); }
      }
      public Builder SetMoney(int value) {
        PrepareBuilder();
        result.hasMoney = true;
        result.money_ = value;
        return this;
      }
      public Builder ClearMoney() {
        PrepareBuilder();
        result.hasMoney = false;
        result.money_ = 0;
        return this;
      }
      
      public bool HasTotalMoney {
        get { return result.hasTotalMoney; }
      }
      public int TotalMoney {
        get { return result.TotalMoney; }
        set { SetTotalMoney(value); }
      }
      public Builder SetTotalMoney(int value) {
        PrepareBuilder();
        result.hasTotalMoney = true;
        result.totalMoney_ = value;
        return this;
      }
      public Builder ClearTotalMoney() {
        PrepareBuilder();
        result.hasTotalMoney = false;
        result.totalMoney_ = 0;
        return this;
      }
    }
    static Msg_RC_SyncExpMoney() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_SyncProperty : pb::GeneratedMessage<Msg_RC_SyncProperty, Msg_RC_SyncProperty.Builder> {
    private Msg_RC_SyncProperty() { }
    private static readonly Msg_RC_SyncProperty defaultInstance = new Msg_RC_SyncProperty().MakeReadOnly();
    private static readonly string[] _msgRCSyncPropertyFieldNames = new string[] { "bullet_num", "bullet_num_max", "energy_num", "hp", "np", "role_id", "state" };
    private static readonly uint[] _msgRCSyncPropertyFieldTags = new uint[] { 48, 56, 40, 16, 24, 8, 32 };
    public static Msg_RC_SyncProperty DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_SyncProperty DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_SyncProperty ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SyncProperty__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_SyncProperty, Msg_RC_SyncProperty.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SyncProperty__FieldAccessorTable; }
    }
    
    public const int RoleIdFieldNumber = 1;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int HpFieldNumber = 2;
    private bool hasHp;
    private int hp_;
    public bool HasHp {
      get { return hasHp; }
    }
    public int Hp {
      get { return hp_; }
    }
    
    public const int NpFieldNumber = 3;
    private bool hasNp;
    private int np_;
    public bool HasNp {
      get { return hasNp; }
    }
    public int Np {
      get { return np_; }
    }
    
    public const int StateFieldNumber = 4;
    private bool hasState;
    private int state_;
    public bool HasState {
      get { return hasState; }
    }
    public int State {
      get { return state_; }
    }
    
    public const int EnergyNumFieldNumber = 5;
    private bool hasEnergyNum;
    private int energyNum_;
    public bool HasEnergyNum {
      get { return hasEnergyNum; }
    }
    public int EnergyNum {
      get { return energyNum_; }
    }
    
    public const int BulletNumFieldNumber = 6;
    private bool hasBulletNum;
    private int bulletNum_;
    public bool HasBulletNum {
      get { return hasBulletNum; }
    }
    public int BulletNum {
      get { return bulletNum_; }
    }
    
    public const int BulletNumMaxFieldNumber = 7;
    private bool hasBulletNumMax;
    private int bulletNumMax_;
    public bool HasBulletNumMax {
      get { return hasBulletNumMax; }
    }
    public int BulletNumMax {
      get { return bulletNumMax_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoleId) return false;
        if (!hasHp) return false;
        if (!hasNp) return false;
        if (!hasState) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCSyncPropertyFieldNames;
      if (hasRoleId) {
        output.WriteInt32(1, field_names[5], RoleId);
      }
      if (hasHp) {
        output.WriteInt32(2, field_names[3], Hp);
      }
      if (hasNp) {
        output.WriteInt32(3, field_names[4], Np);
      }
      if (hasState) {
        output.WriteInt32(4, field_names[6], State);
      }
      if (hasEnergyNum) {
        output.WriteInt32(5, field_names[2], EnergyNum);
      }
      if (hasBulletNum) {
        output.WriteInt32(6, field_names[0], BulletNum);
      }
      if (hasBulletNumMax) {
        output.WriteInt32(7, field_names[1], BulletNumMax);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoleId);
        }
        if (hasHp) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Hp);
        }
        if (hasNp) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, Np);
        }
        if (hasState) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, State);
        }
        if (hasEnergyNum) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, EnergyNum);
        }
        if (hasBulletNum) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, BulletNum);
        }
        if (hasBulletNumMax) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, BulletNumMax);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_SyncProperty ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_SyncProperty ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SyncProperty ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_SyncProperty ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SyncProperty ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_SyncProperty ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SyncProperty ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_SyncProperty ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_SyncProperty ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_SyncProperty ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_SyncProperty MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_SyncProperty prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_SyncProperty, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_SyncProperty cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_SyncProperty result;
      
      private Msg_RC_SyncProperty PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_SyncProperty original = result;
          result = new Msg_RC_SyncProperty();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_SyncProperty MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_SyncProperty.Descriptor; }
      }
      
      public override Msg_RC_SyncProperty DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_SyncProperty.DefaultInstance; }
      }
      
      public override Msg_RC_SyncProperty BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_SyncProperty) {
          return MergeFrom((Msg_RC_SyncProperty) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_SyncProperty other) {
        if (other == global::DashFireMessage.Msg_RC_SyncProperty.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasHp) {
          Hp = other.Hp;
        }
        if (other.HasNp) {
          Np = other.Np;
        }
        if (other.HasState) {
          State = other.State;
        }
        if (other.HasEnergyNum) {
          EnergyNum = other.EnergyNum;
        }
        if (other.HasBulletNum) {
          BulletNum = other.BulletNum;
        }
        if (other.HasBulletNumMax) {
          BulletNumMax = other.BulletNumMax;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCSyncPropertyFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCSyncPropertyFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 16: {
              result.hasHp = input.ReadInt32(ref result.hp_);
              break;
            }
            case 24: {
              result.hasNp = input.ReadInt32(ref result.np_);
              break;
            }
            case 32: {
              result.hasState = input.ReadInt32(ref result.state_);
              break;
            }
            case 40: {
              result.hasEnergyNum = input.ReadInt32(ref result.energyNum_);
              break;
            }
            case 48: {
              result.hasBulletNum = input.ReadInt32(ref result.bulletNum_);
              break;
            }
            case 56: {
              result.hasBulletNumMax = input.ReadInt32(ref result.bulletNumMax_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasHp {
        get { return result.hasHp; }
      }
      public int Hp {
        get { return result.Hp; }
        set { SetHp(value); }
      }
      public Builder SetHp(int value) {
        PrepareBuilder();
        result.hasHp = true;
        result.hp_ = value;
        return this;
      }
      public Builder ClearHp() {
        PrepareBuilder();
        result.hasHp = false;
        result.hp_ = 0;
        return this;
      }
      
      public bool HasNp {
        get { return result.hasNp; }
      }
      public int Np {
        get { return result.Np; }
        set { SetNp(value); }
      }
      public Builder SetNp(int value) {
        PrepareBuilder();
        result.hasNp = true;
        result.np_ = value;
        return this;
      }
      public Builder ClearNp() {
        PrepareBuilder();
        result.hasNp = false;
        result.np_ = 0;
        return this;
      }
      
      public bool HasState {
        get { return result.hasState; }
      }
      public int State {
        get { return result.State; }
        set { SetState(value); }
      }
      public Builder SetState(int value) {
        PrepareBuilder();
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder ClearState() {
        PrepareBuilder();
        result.hasState = false;
        result.state_ = 0;
        return this;
      }
      
      public bool HasEnergyNum {
        get { return result.hasEnergyNum; }
      }
      public int EnergyNum {
        get { return result.EnergyNum; }
        set { SetEnergyNum(value); }
      }
      public Builder SetEnergyNum(int value) {
        PrepareBuilder();
        result.hasEnergyNum = true;
        result.energyNum_ = value;
        return this;
      }
      public Builder ClearEnergyNum() {
        PrepareBuilder();
        result.hasEnergyNum = false;
        result.energyNum_ = 0;
        return this;
      }
      
      public bool HasBulletNum {
        get { return result.hasBulletNum; }
      }
      public int BulletNum {
        get { return result.BulletNum; }
        set { SetBulletNum(value); }
      }
      public Builder SetBulletNum(int value) {
        PrepareBuilder();
        result.hasBulletNum = true;
        result.bulletNum_ = value;
        return this;
      }
      public Builder ClearBulletNum() {
        PrepareBuilder();
        result.hasBulletNum = false;
        result.bulletNum_ = 0;
        return this;
      }
      
      public bool HasBulletNumMax {
        get { return result.hasBulletNumMax; }
      }
      public int BulletNumMax {
        get { return result.BulletNumMax; }
        set { SetBulletNumMax(value); }
      }
      public Builder SetBulletNumMax(int value) {
        PrepareBuilder();
        result.hasBulletNumMax = true;
        result.bulletNumMax_ = value;
        return this;
      }
      public Builder ClearBulletNumMax() {
        PrepareBuilder();
        result.hasBulletNumMax = false;
        result.bulletNumMax_ = 0;
        return this;
      }
    }
    static Msg_RC_SyncProperty() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_SyncImpactEffect : pb::GeneratedMessage<Msg_RC_SyncImpactEffect, Msg_RC_SyncImpactEffect.Builder> {
    private Msg_RC_SyncImpactEffect() { }
    private static readonly Msg_RC_SyncImpactEffect defaultInstance = new Msg_RC_SyncImpactEffect().MakeReadOnly();
    private static readonly string[] _msgRCSyncImpactEffectFieldNames = new string[] { "attacker_id", "attacker_type", "is_killer", "propertys", "role_id", "stand_pos" };
    private static readonly uint[] _msgRCSyncImpactEffectFieldTags = new uint[] { 16, 24, 32, 42, 8, 50 };
    public static Msg_RC_SyncImpactEffect DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_SyncImpactEffect DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_SyncImpactEffect ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SyncImpactEffect__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_SyncImpactEffect, Msg_RC_SyncImpactEffect.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SyncImpactEffect__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Property : pb::GeneratedMessage<Property, Property.Builder> {
        private Property() { }
        private static readonly Property defaultInstance = new Property().MakeReadOnly();
        private static readonly string[] _propertyFieldNames = new string[] { "property_index", "property_value" };
        private static readonly uint[] _propertyFieldTags = new uint[] { 8, 16 };
        public static Property DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override Property DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override Property ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SyncImpactEffect_Property__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<Property, Property.Builder> InternalFieldAccessors {
          get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SyncImpactEffect_Property__FieldAccessorTable; }
        }
        
        public const int PropertyIndexFieldNumber = 1;
        private bool hasPropertyIndex;
        private int propertyIndex_;
        public bool HasPropertyIndex {
          get { return hasPropertyIndex; }
        }
        public int PropertyIndex {
          get { return propertyIndex_; }
        }
        
        public const int PropertyValueFieldNumber = 2;
        private bool hasPropertyValue;
        private int propertyValue_;
        public bool HasPropertyValue {
          get { return hasPropertyValue; }
        }
        public int PropertyValue {
          get { return propertyValue_; }
        }
        
        public override bool IsInitialized {
          get {
            if (!hasPropertyIndex) return false;
            if (!hasPropertyValue) return false;
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          int size = SerializedSize;
          string[] field_names = _propertyFieldNames;
          if (hasPropertyIndex) {
            output.WriteInt32(1, field_names[0], PropertyIndex);
          }
          if (hasPropertyValue) {
            output.WriteInt32(2, field_names[1], PropertyValue);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            
            size = 0;
            if (hasPropertyIndex) {
              size += pb::CodedOutputStream.ComputeInt32Size(1, PropertyIndex);
            }
            if (hasPropertyValue) {
              size += pb::CodedOutputStream.ComputeInt32Size(2, PropertyValue);
            }
            size += UnknownFields.SerializedSize;
            memoizedSerializedSize = size;
            return size;
          }
        }
        
        public static Property ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Property ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Property ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Property ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Property ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Property ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static Property ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static Property ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static Property ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Property ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private Property MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(Property prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<Property, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(Property cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private Property result;
          
          private Property PrepareBuilder() {
            if (resultIsReadOnly) {
              Property original = result;
              result = new Property();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override Property MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::DashFireMessage.Msg_RC_SyncImpactEffect.Types.Property.Descriptor; }
          }
          
          public override Property DefaultInstanceForType {
            get { return global::DashFireMessage.Msg_RC_SyncImpactEffect.Types.Property.DefaultInstance; }
          }
          
          public override Property BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is Property) {
              return MergeFrom((Property) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(Property other) {
            if (other == global::DashFireMessage.Msg_RC_SyncImpactEffect.Types.Property.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasPropertyIndex) {
              PropertyIndex = other.PropertyIndex;
            }
            if (other.HasPropertyValue) {
              PropertyValue = other.PropertyValue;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_propertyFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _propertyFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 8: {
                  result.hasPropertyIndex = input.ReadInt32(ref result.propertyIndex_);
                  break;
                }
                case 16: {
                  result.hasPropertyValue = input.ReadInt32(ref result.propertyValue_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasPropertyIndex {
            get { return result.hasPropertyIndex; }
          }
          public int PropertyIndex {
            get { return result.PropertyIndex; }
            set { SetPropertyIndex(value); }
          }
          public Builder SetPropertyIndex(int value) {
            PrepareBuilder();
            result.hasPropertyIndex = true;
            result.propertyIndex_ = value;
            return this;
          }
          public Builder ClearPropertyIndex() {
            PrepareBuilder();
            result.hasPropertyIndex = false;
            result.propertyIndex_ = 0;
            return this;
          }
          
          public bool HasPropertyValue {
            get { return result.hasPropertyValue; }
          }
          public int PropertyValue {
            get { return result.PropertyValue; }
            set { SetPropertyValue(value); }
          }
          public Builder SetPropertyValue(int value) {
            PrepareBuilder();
            result.hasPropertyValue = true;
            result.propertyValue_ = value;
            return this;
          }
          public Builder ClearPropertyValue() {
            PrepareBuilder();
            result.hasPropertyValue = false;
            result.propertyValue_ = 0;
            return this;
          }
        }
        static Property() {
          object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public const int RoleIdFieldNumber = 1;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int AttackerIdFieldNumber = 2;
    private bool hasAttackerId;
    private int attackerId_;
    public bool HasAttackerId {
      get { return hasAttackerId; }
    }
    public int AttackerId {
      get { return attackerId_; }
    }
    
    public const int AttackerTypeFieldNumber = 3;
    private bool hasAttackerType;
    private int attackerType_;
    public bool HasAttackerType {
      get { return hasAttackerType; }
    }
    public int AttackerType {
      get { return attackerType_; }
    }
    
    public const int IsKillerFieldNumber = 4;
    private bool hasIsKiller;
    private bool isKiller_;
    public bool HasIsKiller {
      get { return hasIsKiller; }
    }
    public bool IsKiller {
      get { return isKiller_; }
    }
    
    public const int PropertysFieldNumber = 5;
    private pbc::PopsicleList<global::DashFireMessage.Msg_RC_SyncImpactEffect.Types.Property> propertys_ = new pbc::PopsicleList<global::DashFireMessage.Msg_RC_SyncImpactEffect.Types.Property>();
    public scg::IList<global::DashFireMessage.Msg_RC_SyncImpactEffect.Types.Property> PropertysList {
      get { return propertys_; }
    }
    public int PropertysCount {
      get { return propertys_.Count; }
    }
    public global::DashFireMessage.Msg_RC_SyncImpactEffect.Types.Property GetPropertys(int index) {
      return propertys_[index];
    }
    
    public const int StandPosFieldNumber = 6;
    private bool hasStandPos;
    private global::DashFireMessage.Position standPos_;
    public bool HasStandPos {
      get { return hasStandPos; }
    }
    public global::DashFireMessage.Position StandPos {
      get { return standPos_ ?? global::DashFireMessage.Position.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoleId) return false;
        if (!hasAttackerId) return false;
        if (!hasAttackerType) return false;
        if (!hasIsKiller) return false;
        if (!hasStandPos) return false;
        foreach (global::DashFireMessage.Msg_RC_SyncImpactEffect.Types.Property element in PropertysList) {
          if (!element.IsInitialized) return false;
        }
        if (!StandPos.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCSyncImpactEffectFieldNames;
      if (hasRoleId) {
        output.WriteInt32(1, field_names[4], RoleId);
      }
      if (hasAttackerId) {
        output.WriteInt32(2, field_names[0], AttackerId);
      }
      if (hasAttackerType) {
        output.WriteInt32(3, field_names[1], AttackerType);
      }
      if (hasIsKiller) {
        output.WriteBool(4, field_names[2], IsKiller);
      }
      if (propertys_.Count > 0) {
        output.WriteMessageArray(5, field_names[3], propertys_);
      }
      if (hasStandPos) {
        output.WriteMessage(6, field_names[5], StandPos);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoleId);
        }
        if (hasAttackerId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, AttackerId);
        }
        if (hasAttackerType) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, AttackerType);
        }
        if (hasIsKiller) {
          size += pb::CodedOutputStream.ComputeBoolSize(4, IsKiller);
        }
        foreach (global::DashFireMessage.Msg_RC_SyncImpactEffect.Types.Property element in PropertysList) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, element);
        }
        if (hasStandPos) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, StandPos);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_SyncImpactEffect ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_SyncImpactEffect ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SyncImpactEffect ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_SyncImpactEffect ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SyncImpactEffect ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_SyncImpactEffect ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SyncImpactEffect ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_SyncImpactEffect ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_SyncImpactEffect ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_SyncImpactEffect ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_SyncImpactEffect MakeReadOnly() {
      propertys_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_SyncImpactEffect prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_SyncImpactEffect, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_SyncImpactEffect cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_SyncImpactEffect result;
      
      private Msg_RC_SyncImpactEffect PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_SyncImpactEffect original = result;
          result = new Msg_RC_SyncImpactEffect();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_SyncImpactEffect MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_SyncImpactEffect.Descriptor; }
      }
      
      public override Msg_RC_SyncImpactEffect DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_SyncImpactEffect.DefaultInstance; }
      }
      
      public override Msg_RC_SyncImpactEffect BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_SyncImpactEffect) {
          return MergeFrom((Msg_RC_SyncImpactEffect) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_SyncImpactEffect other) {
        if (other == global::DashFireMessage.Msg_RC_SyncImpactEffect.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasAttackerId) {
          AttackerId = other.AttackerId;
        }
        if (other.HasAttackerType) {
          AttackerType = other.AttackerType;
        }
        if (other.HasIsKiller) {
          IsKiller = other.IsKiller;
        }
        if (other.propertys_.Count != 0) {
          result.propertys_.Add(other.propertys_);
        }
        if (other.HasStandPos) {
          MergeStandPos(other.StandPos);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCSyncImpactEffectFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCSyncImpactEffectFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 16: {
              result.hasAttackerId = input.ReadInt32(ref result.attackerId_);
              break;
            }
            case 24: {
              result.hasAttackerType = input.ReadInt32(ref result.attackerType_);
              break;
            }
            case 32: {
              result.hasIsKiller = input.ReadBool(ref result.isKiller_);
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.propertys_, global::DashFireMessage.Msg_RC_SyncImpactEffect.Types.Property.DefaultInstance, extensionRegistry);
              break;
            }
            case 50: {
              global::DashFireMessage.Position.Builder subBuilder = global::DashFireMessage.Position.CreateBuilder();
              if (result.hasStandPos) {
                subBuilder.MergeFrom(StandPos);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StandPos = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasAttackerId {
        get { return result.hasAttackerId; }
      }
      public int AttackerId {
        get { return result.AttackerId; }
        set { SetAttackerId(value); }
      }
      public Builder SetAttackerId(int value) {
        PrepareBuilder();
        result.hasAttackerId = true;
        result.attackerId_ = value;
        return this;
      }
      public Builder ClearAttackerId() {
        PrepareBuilder();
        result.hasAttackerId = false;
        result.attackerId_ = 0;
        return this;
      }
      
      public bool HasAttackerType {
        get { return result.hasAttackerType; }
      }
      public int AttackerType {
        get { return result.AttackerType; }
        set { SetAttackerType(value); }
      }
      public Builder SetAttackerType(int value) {
        PrepareBuilder();
        result.hasAttackerType = true;
        result.attackerType_ = value;
        return this;
      }
      public Builder ClearAttackerType() {
        PrepareBuilder();
        result.hasAttackerType = false;
        result.attackerType_ = 0;
        return this;
      }
      
      public bool HasIsKiller {
        get { return result.hasIsKiller; }
      }
      public bool IsKiller {
        get { return result.IsKiller; }
        set { SetIsKiller(value); }
      }
      public Builder SetIsKiller(bool value) {
        PrepareBuilder();
        result.hasIsKiller = true;
        result.isKiller_ = value;
        return this;
      }
      public Builder ClearIsKiller() {
        PrepareBuilder();
        result.hasIsKiller = false;
        result.isKiller_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<global::DashFireMessage.Msg_RC_SyncImpactEffect.Types.Property> PropertysList {
        get { return PrepareBuilder().propertys_; }
      }
      public int PropertysCount {
        get { return result.PropertysCount; }
      }
      public global::DashFireMessage.Msg_RC_SyncImpactEffect.Types.Property GetPropertys(int index) {
        return result.GetPropertys(index);
      }
      public Builder SetPropertys(int index, global::DashFireMessage.Msg_RC_SyncImpactEffect.Types.Property value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.propertys_[index] = value;
        return this;
      }
      public Builder SetPropertys(int index, global::DashFireMessage.Msg_RC_SyncImpactEffect.Types.Property.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.propertys_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPropertys(global::DashFireMessage.Msg_RC_SyncImpactEffect.Types.Property value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.propertys_.Add(value);
        return this;
      }
      public Builder AddPropertys(global::DashFireMessage.Msg_RC_SyncImpactEffect.Types.Property.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.propertys_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePropertys(scg::IEnumerable<global::DashFireMessage.Msg_RC_SyncImpactEffect.Types.Property> values) {
        PrepareBuilder();
        result.propertys_.Add(values);
        return this;
      }
      public Builder ClearPropertys() {
        PrepareBuilder();
        result.propertys_.Clear();
        return this;
      }
      
      public bool HasStandPos {
       get { return result.hasStandPos; }
      }
      public global::DashFireMessage.Position StandPos {
        get { return result.StandPos; }
        set { SetStandPos(value); }
      }
      public Builder SetStandPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStandPos = true;
        result.standPos_ = value;
        return this;
      }
      public Builder SetStandPos(global::DashFireMessage.Position.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStandPos = true;
        result.standPos_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStandPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStandPos &&
            result.standPos_ != global::DashFireMessage.Position.DefaultInstance) {
            result.standPos_ = global::DashFireMessage.Position.CreateBuilder(result.standPos_).MergeFrom(value).BuildPartial();
        } else {
          result.standPos_ = value;
        }
        result.hasStandPos = true;
        return this;
      }
      public Builder ClearStandPos() {
        PrepareBuilder();
        result.hasStandPos = false;
        result.standPos_ = null;
        return this;
      }
    }
    static Msg_RC_SyncImpactEffect() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_SyncItem : pb::GeneratedMessage<Msg_RC_SyncItem, Msg_RC_SyncItem.Builder> {
    private Msg_RC_SyncItem() { }
    private static readonly Msg_RC_SyncItem defaultInstance = new Msg_RC_SyncItem().MakeReadOnly();
    private static readonly string[] _msgRCSyncItemFieldNames = new string[] { "items", "role_id" };
    private static readonly uint[] _msgRCSyncItemFieldTags = new uint[] { 18, 8 };
    public static Msg_RC_SyncItem DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_SyncItem DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_SyncItem ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SyncItem__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_SyncItem, Msg_RC_SyncItem.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SyncItem__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class ItemInfo : pb::GeneratedMessage<ItemInfo, ItemInfo.Builder> {
        private ItemInfo() { }
        private static readonly ItemInfo defaultInstance = new ItemInfo().MakeReadOnly();
        private static readonly string[] _itemInfoFieldNames = new string[] { "item_id", "item_num", "item_pos" };
        private static readonly uint[] _itemInfoFieldTags = new uint[] { 16, 24, 8 };
        public static ItemInfo DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override ItemInfo DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override ItemInfo ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SyncItem_ItemInfo__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<ItemInfo, ItemInfo.Builder> InternalFieldAccessors {
          get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SyncItem_ItemInfo__FieldAccessorTable; }
        }
        
        public const int ItemPosFieldNumber = 1;
        private bool hasItemPos;
        private int itemPos_;
        public bool HasItemPos {
          get { return hasItemPos; }
        }
        public int ItemPos {
          get { return itemPos_; }
        }
        
        public const int ItemIdFieldNumber = 2;
        private bool hasItemId;
        private int itemId_;
        public bool HasItemId {
          get { return hasItemId; }
        }
        public int ItemId {
          get { return itemId_; }
        }
        
        public const int ItemNumFieldNumber = 3;
        private bool hasItemNum;
        private int itemNum_;
        public bool HasItemNum {
          get { return hasItemNum; }
        }
        public int ItemNum {
          get { return itemNum_; }
        }
        
        public override bool IsInitialized {
          get {
            if (!hasItemPos) return false;
            if (!hasItemId) return false;
            if (!hasItemNum) return false;
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          int size = SerializedSize;
          string[] field_names = _itemInfoFieldNames;
          if (hasItemPos) {
            output.WriteInt32(1, field_names[2], ItemPos);
          }
          if (hasItemId) {
            output.WriteInt32(2, field_names[0], ItemId);
          }
          if (hasItemNum) {
            output.WriteInt32(3, field_names[1], ItemNum);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            
            size = 0;
            if (hasItemPos) {
              size += pb::CodedOutputStream.ComputeInt32Size(1, ItemPos);
            }
            if (hasItemId) {
              size += pb::CodedOutputStream.ComputeInt32Size(2, ItemId);
            }
            if (hasItemNum) {
              size += pb::CodedOutputStream.ComputeInt32Size(3, ItemNum);
            }
            size += UnknownFields.SerializedSize;
            memoizedSerializedSize = size;
            return size;
          }
        }
        
        public static ItemInfo ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static ItemInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static ItemInfo ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static ItemInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static ItemInfo ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static ItemInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static ItemInfo ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static ItemInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static ItemInfo ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static ItemInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private ItemInfo MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(ItemInfo prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<ItemInfo, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(ItemInfo cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private ItemInfo result;
          
          private ItemInfo PrepareBuilder() {
            if (resultIsReadOnly) {
              ItemInfo original = result;
              result = new ItemInfo();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override ItemInfo MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::DashFireMessage.Msg_RC_SyncItem.Types.ItemInfo.Descriptor; }
          }
          
          public override ItemInfo DefaultInstanceForType {
            get { return global::DashFireMessage.Msg_RC_SyncItem.Types.ItemInfo.DefaultInstance; }
          }
          
          public override ItemInfo BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is ItemInfo) {
              return MergeFrom((ItemInfo) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(ItemInfo other) {
            if (other == global::DashFireMessage.Msg_RC_SyncItem.Types.ItemInfo.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasItemPos) {
              ItemPos = other.ItemPos;
            }
            if (other.HasItemId) {
              ItemId = other.ItemId;
            }
            if (other.HasItemNum) {
              ItemNum = other.ItemNum;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_itemInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _itemInfoFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 8: {
                  result.hasItemPos = input.ReadInt32(ref result.itemPos_);
                  break;
                }
                case 16: {
                  result.hasItemId = input.ReadInt32(ref result.itemId_);
                  break;
                }
                case 24: {
                  result.hasItemNum = input.ReadInt32(ref result.itemNum_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasItemPos {
            get { return result.hasItemPos; }
          }
          public int ItemPos {
            get { return result.ItemPos; }
            set { SetItemPos(value); }
          }
          public Builder SetItemPos(int value) {
            PrepareBuilder();
            result.hasItemPos = true;
            result.itemPos_ = value;
            return this;
          }
          public Builder ClearItemPos() {
            PrepareBuilder();
            result.hasItemPos = false;
            result.itemPos_ = 0;
            return this;
          }
          
          public bool HasItemId {
            get { return result.hasItemId; }
          }
          public int ItemId {
            get { return result.ItemId; }
            set { SetItemId(value); }
          }
          public Builder SetItemId(int value) {
            PrepareBuilder();
            result.hasItemId = true;
            result.itemId_ = value;
            return this;
          }
          public Builder ClearItemId() {
            PrepareBuilder();
            result.hasItemId = false;
            result.itemId_ = 0;
            return this;
          }
          
          public bool HasItemNum {
            get { return result.hasItemNum; }
          }
          public int ItemNum {
            get { return result.ItemNum; }
            set { SetItemNum(value); }
          }
          public Builder SetItemNum(int value) {
            PrepareBuilder();
            result.hasItemNum = true;
            result.itemNum_ = value;
            return this;
          }
          public Builder ClearItemNum() {
            PrepareBuilder();
            result.hasItemNum = false;
            result.itemNum_ = 0;
            return this;
          }
        }
        static ItemInfo() {
          object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public const int RoleIdFieldNumber = 1;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int ItemsFieldNumber = 2;
    private pbc::PopsicleList<global::DashFireMessage.Msg_RC_SyncItem.Types.ItemInfo> items_ = new pbc::PopsicleList<global::DashFireMessage.Msg_RC_SyncItem.Types.ItemInfo>();
    public scg::IList<global::DashFireMessage.Msg_RC_SyncItem.Types.ItemInfo> ItemsList {
      get { return items_; }
    }
    public int ItemsCount {
      get { return items_.Count; }
    }
    public global::DashFireMessage.Msg_RC_SyncItem.Types.ItemInfo GetItems(int index) {
      return items_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoleId) return false;
        foreach (global::DashFireMessage.Msg_RC_SyncItem.Types.ItemInfo element in ItemsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCSyncItemFieldNames;
      if (hasRoleId) {
        output.WriteInt32(1, field_names[1], RoleId);
      }
      if (items_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], items_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoleId);
        }
        foreach (global::DashFireMessage.Msg_RC_SyncItem.Types.ItemInfo element in ItemsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_SyncItem ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_SyncItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SyncItem ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_SyncItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SyncItem ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_SyncItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SyncItem ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_SyncItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_SyncItem ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_SyncItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_SyncItem MakeReadOnly() {
      items_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_SyncItem prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_SyncItem, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_SyncItem cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_SyncItem result;
      
      private Msg_RC_SyncItem PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_SyncItem original = result;
          result = new Msg_RC_SyncItem();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_SyncItem MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_SyncItem.Descriptor; }
      }
      
      public override Msg_RC_SyncItem DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_SyncItem.DefaultInstance; }
      }
      
      public override Msg_RC_SyncItem BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_SyncItem) {
          return MergeFrom((Msg_RC_SyncItem) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_SyncItem other) {
        if (other == global::DashFireMessage.Msg_RC_SyncItem.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.items_.Count != 0) {
          result.items_.Add(other.items_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCSyncItemFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCSyncItemFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.items_, global::DashFireMessage.Msg_RC_SyncItem.Types.ItemInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::DashFireMessage.Msg_RC_SyncItem.Types.ItemInfo> ItemsList {
        get { return PrepareBuilder().items_; }
      }
      public int ItemsCount {
        get { return result.ItemsCount; }
      }
      public global::DashFireMessage.Msg_RC_SyncItem.Types.ItemInfo GetItems(int index) {
        return result.GetItems(index);
      }
      public Builder SetItems(int index, global::DashFireMessage.Msg_RC_SyncItem.Types.ItemInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.items_[index] = value;
        return this;
      }
      public Builder SetItems(int index, global::DashFireMessage.Msg_RC_SyncItem.Types.ItemInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.items_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddItems(global::DashFireMessage.Msg_RC_SyncItem.Types.ItemInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.items_.Add(value);
        return this;
      }
      public Builder AddItems(global::DashFireMessage.Msg_RC_SyncItem.Types.ItemInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.items_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeItems(scg::IEnumerable<global::DashFireMessage.Msg_RC_SyncItem.Types.ItemInfo> values) {
        PrepareBuilder();
        result.items_.Add(values);
        return this;
      }
      public Builder ClearItems() {
        PrepareBuilder();
        result.items_.Clear();
        return this;
      }
    }
    static Msg_RC_SyncItem() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_ItemChanged : pb::GeneratedMessage<Msg_RC_ItemChanged, Msg_RC_ItemChanged.Builder> {
    private Msg_RC_ItemChanged() { }
    private static readonly Msg_RC_ItemChanged defaultInstance = new Msg_RC_ItemChanged().MakeReadOnly();
    private static readonly string[] _msgRCItemChangedFieldNames = new string[] { "item_id", "item_num", "item_pos", "role_id" };
    private static readonly uint[] _msgRCItemChangedFieldTags = new uint[] { 24, 32, 16, 8 };
    public static Msg_RC_ItemChanged DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_ItemChanged DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_ItemChanged ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_ItemChanged__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_ItemChanged, Msg_RC_ItemChanged.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_ItemChanged__FieldAccessorTable; }
    }
    
    public const int RoleIdFieldNumber = 1;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int ItemPosFieldNumber = 2;
    private bool hasItemPos;
    private int itemPos_;
    public bool HasItemPos {
      get { return hasItemPos; }
    }
    public int ItemPos {
      get { return itemPos_; }
    }
    
    public const int ItemIdFieldNumber = 3;
    private bool hasItemId;
    private int itemId_;
    public bool HasItemId {
      get { return hasItemId; }
    }
    public int ItemId {
      get { return itemId_; }
    }
    
    public const int ItemNumFieldNumber = 4;
    private bool hasItemNum;
    private int itemNum_;
    public bool HasItemNum {
      get { return hasItemNum; }
    }
    public int ItemNum {
      get { return itemNum_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoleId) return false;
        if (!hasItemPos) return false;
        if (!hasItemId) return false;
        if (!hasItemNum) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCItemChangedFieldNames;
      if (hasRoleId) {
        output.WriteInt32(1, field_names[3], RoleId);
      }
      if (hasItemPos) {
        output.WriteInt32(2, field_names[2], ItemPos);
      }
      if (hasItemId) {
        output.WriteInt32(3, field_names[0], ItemId);
      }
      if (hasItemNum) {
        output.WriteInt32(4, field_names[1], ItemNum);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoleId);
        }
        if (hasItemPos) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, ItemPos);
        }
        if (hasItemId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ItemId);
        }
        if (hasItemNum) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, ItemNum);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_ItemChanged ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_ItemChanged ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_ItemChanged ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_ItemChanged ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_ItemChanged ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_ItemChanged ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_ItemChanged ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_ItemChanged ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_ItemChanged ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_ItemChanged ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_ItemChanged MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_ItemChanged prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_ItemChanged, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_ItemChanged cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_ItemChanged result;
      
      private Msg_RC_ItemChanged PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_ItemChanged original = result;
          result = new Msg_RC_ItemChanged();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_ItemChanged MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_ItemChanged.Descriptor; }
      }
      
      public override Msg_RC_ItemChanged DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_ItemChanged.DefaultInstance; }
      }
      
      public override Msg_RC_ItemChanged BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_ItemChanged) {
          return MergeFrom((Msg_RC_ItemChanged) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_ItemChanged other) {
        if (other == global::DashFireMessage.Msg_RC_ItemChanged.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasItemPos) {
          ItemPos = other.ItemPos;
        }
        if (other.HasItemId) {
          ItemId = other.ItemId;
        }
        if (other.HasItemNum) {
          ItemNum = other.ItemNum;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCItemChangedFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCItemChangedFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 16: {
              result.hasItemPos = input.ReadInt32(ref result.itemPos_);
              break;
            }
            case 24: {
              result.hasItemId = input.ReadInt32(ref result.itemId_);
              break;
            }
            case 32: {
              result.hasItemNum = input.ReadInt32(ref result.itemNum_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasItemPos {
        get { return result.hasItemPos; }
      }
      public int ItemPos {
        get { return result.ItemPos; }
        set { SetItemPos(value); }
      }
      public Builder SetItemPos(int value) {
        PrepareBuilder();
        result.hasItemPos = true;
        result.itemPos_ = value;
        return this;
      }
      public Builder ClearItemPos() {
        PrepareBuilder();
        result.hasItemPos = false;
        result.itemPos_ = 0;
        return this;
      }
      
      public bool HasItemId {
        get { return result.hasItemId; }
      }
      public int ItemId {
        get { return result.ItemId; }
        set { SetItemId(value); }
      }
      public Builder SetItemId(int value) {
        PrepareBuilder();
        result.hasItemId = true;
        result.itemId_ = value;
        return this;
      }
      public Builder ClearItemId() {
        PrepareBuilder();
        result.hasItemId = false;
        result.itemId_ = 0;
        return this;
      }
      
      public bool HasItemNum {
        get { return result.hasItemNum; }
      }
      public int ItemNum {
        get { return result.ItemNum; }
        set { SetItemNum(value); }
      }
      public Builder SetItemNum(int value) {
        PrepareBuilder();
        result.hasItemNum = true;
        result.itemNum_ = value;
        return this;
      }
      public Builder ClearItemNum() {
        PrepareBuilder();
        result.hasItemNum = false;
        result.itemNum_ = 0;
        return this;
      }
    }
    static Msg_RC_ItemChanged() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_CreateSceneLogic : pb::GeneratedMessage<Msg_RC_CreateSceneLogic, Msg_RC_CreateSceneLogic.Builder> {
    private Msg_RC_CreateSceneLogic() { }
    private static readonly Msg_RC_CreateSceneLogic defaultInstance = new Msg_RC_CreateSceneLogic().MakeReadOnly();
    private static readonly string[] _msgRCCreateSceneLogicFieldNames = new string[] { "config_id", "create_time", "id" };
    private static readonly uint[] _msgRCCreateSceneLogicFieldTags = new uint[] { 24, 16, 8 };
    public static Msg_RC_CreateSceneLogic DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_CreateSceneLogic DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_CreateSceneLogic ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_CreateSceneLogic__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_CreateSceneLogic, Msg_RC_CreateSceneLogic.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_CreateSceneLogic__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int CreateTimeFieldNumber = 2;
    private bool hasCreateTime;
    private long createTime_;
    public bool HasCreateTime {
      get { return hasCreateTime; }
    }
    public long CreateTime {
      get { return createTime_; }
    }
    
    public const int ConfigIdFieldNumber = 3;
    private bool hasConfigId;
    private int configId_;
    public bool HasConfigId {
      get { return hasConfigId; }
    }
    public int ConfigId {
      get { return configId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasCreateTime) return false;
        if (!hasConfigId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCCreateSceneLogicFieldNames;
      if (hasId) {
        output.WriteInt32(1, field_names[2], Id);
      }
      if (hasCreateTime) {
        output.WriteInt64(2, field_names[1], CreateTime);
      }
      if (hasConfigId) {
        output.WriteInt32(3, field_names[0], ConfigId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
        }
        if (hasCreateTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, CreateTime);
        }
        if (hasConfigId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ConfigId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_CreateSceneLogic ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_CreateSceneLogic ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_CreateSceneLogic ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_CreateSceneLogic ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_CreateSceneLogic ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_CreateSceneLogic ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_CreateSceneLogic ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_CreateSceneLogic ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_CreateSceneLogic ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_CreateSceneLogic ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_CreateSceneLogic MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_CreateSceneLogic prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_CreateSceneLogic, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_CreateSceneLogic cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_CreateSceneLogic result;
      
      private Msg_RC_CreateSceneLogic PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_CreateSceneLogic original = result;
          result = new Msg_RC_CreateSceneLogic();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_CreateSceneLogic MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_CreateSceneLogic.Descriptor; }
      }
      
      public override Msg_RC_CreateSceneLogic DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_CreateSceneLogic.DefaultInstance; }
      }
      
      public override Msg_RC_CreateSceneLogic BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_CreateSceneLogic) {
          return MergeFrom((Msg_RC_CreateSceneLogic) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_CreateSceneLogic other) {
        if (other == global::DashFireMessage.Msg_RC_CreateSceneLogic.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasCreateTime) {
          CreateTime = other.CreateTime;
        }
        if (other.HasConfigId) {
          ConfigId = other.ConfigId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCCreateSceneLogicFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCCreateSceneLogicFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadInt32(ref result.id_);
              break;
            }
            case 16: {
              result.hasCreateTime = input.ReadInt64(ref result.createTime_);
              break;
            }
            case 24: {
              result.hasConfigId = input.ReadInt32(ref result.configId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasCreateTime {
        get { return result.hasCreateTime; }
      }
      public long CreateTime {
        get { return result.CreateTime; }
        set { SetCreateTime(value); }
      }
      public Builder SetCreateTime(long value) {
        PrepareBuilder();
        result.hasCreateTime = true;
        result.createTime_ = value;
        return this;
      }
      public Builder ClearCreateTime() {
        PrepareBuilder();
        result.hasCreateTime = false;
        result.createTime_ = 0L;
        return this;
      }
      
      public bool HasConfigId {
        get { return result.hasConfigId; }
      }
      public int ConfigId {
        get { return result.ConfigId; }
        set { SetConfigId(value); }
      }
      public Builder SetConfigId(int value) {
        PrepareBuilder();
        result.hasConfigId = true;
        result.configId_ = value;
        return this;
      }
      public Builder ClearConfigId() {
        PrepareBuilder();
        result.hasConfigId = false;
        result.configId_ = 0;
        return this;
      }
    }
    static Msg_RC_CreateSceneLogic() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_DestroySceneLogic : pb::GeneratedMessage<Msg_RC_DestroySceneLogic, Msg_RC_DestroySceneLogic.Builder> {
    private Msg_RC_DestroySceneLogic() { }
    private static readonly Msg_RC_DestroySceneLogic defaultInstance = new Msg_RC_DestroySceneLogic().MakeReadOnly();
    private static readonly string[] _msgRCDestroySceneLogicFieldNames = new string[] { "id" };
    private static readonly uint[] _msgRCDestroySceneLogicFieldTags = new uint[] { 8 };
    public static Msg_RC_DestroySceneLogic DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_DestroySceneLogic DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_DestroySceneLogic ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_DestroySceneLogic__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_DestroySceneLogic, Msg_RC_DestroySceneLogic.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_DestroySceneLogic__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCDestroySceneLogicFieldNames;
      if (hasId) {
        output.WriteInt32(1, field_names[0], Id);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_DestroySceneLogic ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_DestroySceneLogic ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_DestroySceneLogic ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_DestroySceneLogic ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_DestroySceneLogic ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_DestroySceneLogic ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_DestroySceneLogic ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_DestroySceneLogic ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_DestroySceneLogic ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_DestroySceneLogic ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_DestroySceneLogic MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_DestroySceneLogic prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_DestroySceneLogic, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_DestroySceneLogic cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_DestroySceneLogic result;
      
      private Msg_RC_DestroySceneLogic PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_DestroySceneLogic original = result;
          result = new Msg_RC_DestroySceneLogic();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_DestroySceneLogic MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_DestroySceneLogic.Descriptor; }
      }
      
      public override Msg_RC_DestroySceneLogic DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_DestroySceneLogic.DefaultInstance; }
      }
      
      public override Msg_RC_DestroySceneLogic BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_DestroySceneLogic) {
          return MergeFrom((Msg_RC_DestroySceneLogic) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_DestroySceneLogic other) {
        if (other == global::DashFireMessage.Msg_RC_DestroySceneLogic.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCDestroySceneLogicFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCDestroySceneLogicFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadInt32(ref result.id_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
    }
    static Msg_RC_DestroySceneLogic() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_SceneLogicImpact : pb::GeneratedMessage<Msg_RC_SceneLogicImpact, Msg_RC_SceneLogicImpact.Builder> {
    private Msg_RC_SceneLogicImpact() { }
    private static readonly Msg_RC_SceneLogicImpact defaultInstance = new Msg_RC_SceneLogicImpact().MakeReadOnly();
    private static readonly string[] _msgRCSceneLogicImpactFieldNames = new string[] { "id", "role_id" };
    private static readonly uint[] _msgRCSceneLogicImpactFieldTags = new uint[] { 8, 16 };
    public static Msg_RC_SceneLogicImpact DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_SceneLogicImpact DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_SceneLogicImpact ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SceneLogicImpact__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_SceneLogicImpact, Msg_RC_SceneLogicImpact.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SceneLogicImpact__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int RoleIdFieldNumber = 2;
    private pbc::PopsicleList<int> roleId_ = new pbc::PopsicleList<int>();
    public scg::IList<int> RoleIdList {
      get { return pbc::Lists.AsReadOnly(roleId_); }
    }
    public int RoleIdCount {
      get { return roleId_.Count; }
    }
    public int GetRoleId(int index) {
      return roleId_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCSceneLogicImpactFieldNames;
      if (hasId) {
        output.WriteInt32(1, field_names[0], Id);
      }
      if (roleId_.Count > 0) {
        output.WriteInt32Array(2, field_names[1], roleId_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
        }
        {
          int dataSize = 0;
          foreach (int element in RoleIdList) {
            dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * roleId_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_SceneLogicImpact ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_SceneLogicImpact ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SceneLogicImpact ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_SceneLogicImpact ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SceneLogicImpact ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_SceneLogicImpact ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SceneLogicImpact ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_SceneLogicImpact ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_SceneLogicImpact ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_SceneLogicImpact ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_SceneLogicImpact MakeReadOnly() {
      roleId_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_SceneLogicImpact prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_SceneLogicImpact, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_SceneLogicImpact cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_SceneLogicImpact result;
      
      private Msg_RC_SceneLogicImpact PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_SceneLogicImpact original = result;
          result = new Msg_RC_SceneLogicImpact();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_SceneLogicImpact MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_SceneLogicImpact.Descriptor; }
      }
      
      public override Msg_RC_SceneLogicImpact DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_SceneLogicImpact.DefaultInstance; }
      }
      
      public override Msg_RC_SceneLogicImpact BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_SceneLogicImpact) {
          return MergeFrom((Msg_RC_SceneLogicImpact) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_SceneLogicImpact other) {
        if (other == global::DashFireMessage.Msg_RC_SceneLogicImpact.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.roleId_.Count != 0) {
          result.roleId_.Add(other.roleId_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCSceneLogicImpactFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCSceneLogicImpactFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadInt32(ref result.id_);
              break;
            }
            case 18:
            case 16: {
              input.ReadInt32Array(tag, field_name, result.roleId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<int> RoleIdList {
        get { return PrepareBuilder().roleId_; }
      }
      public int RoleIdCount {
        get { return result.RoleIdCount; }
      }
      public int GetRoleId(int index) {
        return result.GetRoleId(index);
      }
      public Builder SetRoleId(int index, int value) {
        PrepareBuilder();
        result.roleId_[index] = value;
        return this;
      }
      public Builder AddRoleId(int value) {
        PrepareBuilder();
        result.roleId_.Add(value);
        return this;
      }
      public Builder AddRangeRoleId(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.roleId_.Add(values);
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.roleId_.Clear();
        return this;
      }
    }
    static Msg_RC_SceneLogicImpact() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CRC_PrevWeapon : pb::GeneratedMessage<Msg_CRC_PrevWeapon, Msg_CRC_PrevWeapon.Builder> {
    private Msg_CRC_PrevWeapon() { }
    private static readonly Msg_CRC_PrevWeapon defaultInstance = new Msg_CRC_PrevWeapon().MakeReadOnly();
    private static readonly string[] _msgCRCPrevWeaponFieldNames = new string[] { "role_id" };
    private static readonly uint[] _msgCRCPrevWeaponFieldTags = new uint[] { 8 };
    public static Msg_CRC_PrevWeapon DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CRC_PrevWeapon DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CRC_PrevWeapon ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_PrevWeapon__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CRC_PrevWeapon, Msg_CRC_PrevWeapon.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_PrevWeapon__FieldAccessorTable; }
    }
    
    public const int RoleIdFieldNumber = 1;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRCPrevWeaponFieldNames;
      if (hasRoleId) {
        output.WriteInt32(1, field_names[0], RoleId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoleId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CRC_PrevWeapon ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_PrevWeapon ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_PrevWeapon ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_PrevWeapon ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_PrevWeapon ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_PrevWeapon ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_PrevWeapon ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CRC_PrevWeapon ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CRC_PrevWeapon ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_PrevWeapon ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CRC_PrevWeapon MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CRC_PrevWeapon prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CRC_PrevWeapon, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CRC_PrevWeapon cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CRC_PrevWeapon result;
      
      private Msg_CRC_PrevWeapon PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CRC_PrevWeapon original = result;
          result = new Msg_CRC_PrevWeapon();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CRC_PrevWeapon MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CRC_PrevWeapon.Descriptor; }
      }
      
      public override Msg_CRC_PrevWeapon DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CRC_PrevWeapon.DefaultInstance; }
      }
      
      public override Msg_CRC_PrevWeapon BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CRC_PrevWeapon) {
          return MergeFrom((Msg_CRC_PrevWeapon) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CRC_PrevWeapon other) {
        if (other == global::DashFireMessage.Msg_CRC_PrevWeapon.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRCPrevWeaponFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRCPrevWeaponFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
    }
    static Msg_CRC_PrevWeapon() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CRC_NextWeapon : pb::GeneratedMessage<Msg_CRC_NextWeapon, Msg_CRC_NextWeapon.Builder> {
    private Msg_CRC_NextWeapon() { }
    private static readonly Msg_CRC_NextWeapon defaultInstance = new Msg_CRC_NextWeapon().MakeReadOnly();
    private static readonly string[] _msgCRCNextWeaponFieldNames = new string[] { "role_id" };
    private static readonly uint[] _msgCRCNextWeaponFieldTags = new uint[] { 8 };
    public static Msg_CRC_NextWeapon DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CRC_NextWeapon DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CRC_NextWeapon ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_NextWeapon__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CRC_NextWeapon, Msg_CRC_NextWeapon.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_NextWeapon__FieldAccessorTable; }
    }
    
    public const int RoleIdFieldNumber = 1;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRCNextWeaponFieldNames;
      if (hasRoleId) {
        output.WriteInt32(1, field_names[0], RoleId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoleId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CRC_NextWeapon ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_NextWeapon ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_NextWeapon ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_NextWeapon ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_NextWeapon ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_NextWeapon ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_NextWeapon ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CRC_NextWeapon ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CRC_NextWeapon ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_NextWeapon ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CRC_NextWeapon MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CRC_NextWeapon prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CRC_NextWeapon, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CRC_NextWeapon cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CRC_NextWeapon result;
      
      private Msg_CRC_NextWeapon PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CRC_NextWeapon original = result;
          result = new Msg_CRC_NextWeapon();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CRC_NextWeapon MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CRC_NextWeapon.Descriptor; }
      }
      
      public override Msg_CRC_NextWeapon DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CRC_NextWeapon.DefaultInstance; }
      }
      
      public override Msg_CRC_NextWeapon BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CRC_NextWeapon) {
          return MergeFrom((Msg_CRC_NextWeapon) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CRC_NextWeapon other) {
        if (other == global::DashFireMessage.Msg_CRC_NextWeapon.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRCNextWeaponFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRCNextWeaponFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
    }
    static Msg_CRC_NextWeapon() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_ShootHurt : pb::GeneratedMessage<Msg_RC_ShootHurt, Msg_RC_ShootHurt.Builder> {
    private Msg_RC_ShootHurt() { }
    private static readonly Msg_RC_ShootHurt defaultInstance = new Msg_RC_ShootHurt().MakeReadOnly();
    private static readonly string[] _msgRCShootHurtFieldNames = new string[] { "attacker_id", "attacker_type", "hp", "is_critical", "is_killer", "np", "targat_id" };
    private static readonly uint[] _msgRCShootHurtFieldTags = new uint[] { 8, 16, 40, 32, 24, 48, 56 };
    public static Msg_RC_ShootHurt DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_ShootHurt DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_ShootHurt ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_ShootHurt__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_ShootHurt, Msg_RC_ShootHurt.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_ShootHurt__FieldAccessorTable; }
    }
    
    public const int AttackerIdFieldNumber = 1;
    private bool hasAttackerId;
    private int attackerId_;
    public bool HasAttackerId {
      get { return hasAttackerId; }
    }
    public int AttackerId {
      get { return attackerId_; }
    }
    
    public const int AttackerTypeFieldNumber = 2;
    private bool hasAttackerType;
    private int attackerType_;
    public bool HasAttackerType {
      get { return hasAttackerType; }
    }
    public int AttackerType {
      get { return attackerType_; }
    }
    
    public const int IsKillerFieldNumber = 3;
    private bool hasIsKiller;
    private bool isKiller_;
    public bool HasIsKiller {
      get { return hasIsKiller; }
    }
    public bool IsKiller {
      get { return isKiller_; }
    }
    
    public const int IsCriticalFieldNumber = 4;
    private bool hasIsCritical;
    private bool isCritical_;
    public bool HasIsCritical {
      get { return hasIsCritical; }
    }
    public bool IsCritical {
      get { return isCritical_; }
    }
    
    public const int HpFieldNumber = 5;
    private bool hasHp;
    private int hp_;
    public bool HasHp {
      get { return hasHp; }
    }
    public int Hp {
      get { return hp_; }
    }
    
    public const int NpFieldNumber = 6;
    private bool hasNp;
    private int np_;
    public bool HasNp {
      get { return hasNp; }
    }
    public int Np {
      get { return np_; }
    }
    
    public const int TargatIdFieldNumber = 7;
    private bool hasTargatId;
    private int targatId_;
    public bool HasTargatId {
      get { return hasTargatId; }
    }
    public int TargatId {
      get { return targatId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAttackerId) return false;
        if (!hasAttackerType) return false;
        if (!hasIsKiller) return false;
        if (!hasIsCritical) return false;
        if (!hasHp) return false;
        if (!hasNp) return false;
        if (!hasTargatId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCShootHurtFieldNames;
      if (hasAttackerId) {
        output.WriteInt32(1, field_names[0], AttackerId);
      }
      if (hasAttackerType) {
        output.WriteInt32(2, field_names[1], AttackerType);
      }
      if (hasIsKiller) {
        output.WriteBool(3, field_names[4], IsKiller);
      }
      if (hasIsCritical) {
        output.WriteBool(4, field_names[3], IsCritical);
      }
      if (hasHp) {
        output.WriteInt32(5, field_names[2], Hp);
      }
      if (hasNp) {
        output.WriteInt32(6, field_names[5], Np);
      }
      if (hasTargatId) {
        output.WriteInt32(7, field_names[6], TargatId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAttackerId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, AttackerId);
        }
        if (hasAttackerType) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, AttackerType);
        }
        if (hasIsKiller) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, IsKiller);
        }
        if (hasIsCritical) {
          size += pb::CodedOutputStream.ComputeBoolSize(4, IsCritical);
        }
        if (hasHp) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, Hp);
        }
        if (hasNp) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, Np);
        }
        if (hasTargatId) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, TargatId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_ShootHurt ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_ShootHurt ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_ShootHurt ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_ShootHurt ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_ShootHurt ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_ShootHurt ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_ShootHurt ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_ShootHurt ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_ShootHurt ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_ShootHurt ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_ShootHurt MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_ShootHurt prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_ShootHurt, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_ShootHurt cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_ShootHurt result;
      
      private Msg_RC_ShootHurt PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_ShootHurt original = result;
          result = new Msg_RC_ShootHurt();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_ShootHurt MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_ShootHurt.Descriptor; }
      }
      
      public override Msg_RC_ShootHurt DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_ShootHurt.DefaultInstance; }
      }
      
      public override Msg_RC_ShootHurt BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_ShootHurt) {
          return MergeFrom((Msg_RC_ShootHurt) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_ShootHurt other) {
        if (other == global::DashFireMessage.Msg_RC_ShootHurt.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAttackerId) {
          AttackerId = other.AttackerId;
        }
        if (other.HasAttackerType) {
          AttackerType = other.AttackerType;
        }
        if (other.HasIsKiller) {
          IsKiller = other.IsKiller;
        }
        if (other.HasIsCritical) {
          IsCritical = other.IsCritical;
        }
        if (other.HasHp) {
          Hp = other.Hp;
        }
        if (other.HasNp) {
          Np = other.Np;
        }
        if (other.HasTargatId) {
          TargatId = other.TargatId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCShootHurtFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCShootHurtFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAttackerId = input.ReadInt32(ref result.attackerId_);
              break;
            }
            case 16: {
              result.hasAttackerType = input.ReadInt32(ref result.attackerType_);
              break;
            }
            case 24: {
              result.hasIsKiller = input.ReadBool(ref result.isKiller_);
              break;
            }
            case 32: {
              result.hasIsCritical = input.ReadBool(ref result.isCritical_);
              break;
            }
            case 40: {
              result.hasHp = input.ReadInt32(ref result.hp_);
              break;
            }
            case 48: {
              result.hasNp = input.ReadInt32(ref result.np_);
              break;
            }
            case 56: {
              result.hasTargatId = input.ReadInt32(ref result.targatId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAttackerId {
        get { return result.hasAttackerId; }
      }
      public int AttackerId {
        get { return result.AttackerId; }
        set { SetAttackerId(value); }
      }
      public Builder SetAttackerId(int value) {
        PrepareBuilder();
        result.hasAttackerId = true;
        result.attackerId_ = value;
        return this;
      }
      public Builder ClearAttackerId() {
        PrepareBuilder();
        result.hasAttackerId = false;
        result.attackerId_ = 0;
        return this;
      }
      
      public bool HasAttackerType {
        get { return result.hasAttackerType; }
      }
      public int AttackerType {
        get { return result.AttackerType; }
        set { SetAttackerType(value); }
      }
      public Builder SetAttackerType(int value) {
        PrepareBuilder();
        result.hasAttackerType = true;
        result.attackerType_ = value;
        return this;
      }
      public Builder ClearAttackerType() {
        PrepareBuilder();
        result.hasAttackerType = false;
        result.attackerType_ = 0;
        return this;
      }
      
      public bool HasIsKiller {
        get { return result.hasIsKiller; }
      }
      public bool IsKiller {
        get { return result.IsKiller; }
        set { SetIsKiller(value); }
      }
      public Builder SetIsKiller(bool value) {
        PrepareBuilder();
        result.hasIsKiller = true;
        result.isKiller_ = value;
        return this;
      }
      public Builder ClearIsKiller() {
        PrepareBuilder();
        result.hasIsKiller = false;
        result.isKiller_ = false;
        return this;
      }
      
      public bool HasIsCritical {
        get { return result.hasIsCritical; }
      }
      public bool IsCritical {
        get { return result.IsCritical; }
        set { SetIsCritical(value); }
      }
      public Builder SetIsCritical(bool value) {
        PrepareBuilder();
        result.hasIsCritical = true;
        result.isCritical_ = value;
        return this;
      }
      public Builder ClearIsCritical() {
        PrepareBuilder();
        result.hasIsCritical = false;
        result.isCritical_ = false;
        return this;
      }
      
      public bool HasHp {
        get { return result.hasHp; }
      }
      public int Hp {
        get { return result.Hp; }
        set { SetHp(value); }
      }
      public Builder SetHp(int value) {
        PrepareBuilder();
        result.hasHp = true;
        result.hp_ = value;
        return this;
      }
      public Builder ClearHp() {
        PrepareBuilder();
        result.hasHp = false;
        result.hp_ = 0;
        return this;
      }
      
      public bool HasNp {
        get { return result.hasNp; }
      }
      public int Np {
        get { return result.Np; }
        set { SetNp(value); }
      }
      public Builder SetNp(int value) {
        PrepareBuilder();
        result.hasNp = true;
        result.np_ = value;
        return this;
      }
      public Builder ClearNp() {
        PrepareBuilder();
        result.hasNp = false;
        result.np_ = 0;
        return this;
      }
      
      public bool HasTargatId {
        get { return result.hasTargatId; }
      }
      public int TargatId {
        get { return result.TargatId; }
        set { SetTargatId(value); }
      }
      public Builder SetTargatId(int value) {
        PrepareBuilder();
        result.hasTargatId = true;
        result.targatId_ = value;
        return this;
      }
      public Builder ClearTargatId() {
        PrepareBuilder();
        result.hasTargatId = false;
        result.targatId_ = 0;
        return this;
      }
    }
    static Msg_RC_ShootHurt() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_DebugSpaceInfo : pb::GeneratedMessage<Msg_RC_DebugSpaceInfo, Msg_RC_DebugSpaceInfo.Builder> {
    private Msg_RC_DebugSpaceInfo() { }
    private static readonly Msg_RC_DebugSpaceInfo defaultInstance = new Msg_RC_DebugSpaceInfo().MakeReadOnly();
    private static readonly string[] _msgRCDebugSpaceInfoFieldNames = new string[] { "space_infos" };
    private static readonly uint[] _msgRCDebugSpaceInfoFieldTags = new uint[] { 10 };
    public static Msg_RC_DebugSpaceInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_DebugSpaceInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_DebugSpaceInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_DebugSpaceInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_DebugSpaceInfo, Msg_RC_DebugSpaceInfo.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_DebugSpaceInfo__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class DebugSpaceInfo : pb::GeneratedMessage<DebugSpaceInfo, DebugSpaceInfo.Builder> {
        private DebugSpaceInfo() { }
        private static readonly DebugSpaceInfo defaultInstance = new DebugSpaceInfo().MakeReadOnly();
        private static readonly string[] _debugSpaceInfoFieldNames = new string[] { "face_dir", "is_player", "obj_id", "pos_x", "pos_y", "pos_z" };
        private static readonly uint[] _debugSpaceInfoFieldTags = new uint[] { 53, 16, 8, 29, 37, 45 };
        public static DebugSpaceInfo DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override DebugSpaceInfo DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override DebugSpaceInfo ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_DebugSpaceInfo_DebugSpaceInfo__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<DebugSpaceInfo, DebugSpaceInfo.Builder> InternalFieldAccessors {
          get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_DebugSpaceInfo_DebugSpaceInfo__FieldAccessorTable; }
        }
        
        public const int ObjIdFieldNumber = 1;
        private bool hasObjId;
        private int objId_;
        public bool HasObjId {
          get { return hasObjId; }
        }
        public int ObjId {
          get { return objId_; }
        }
        
        public const int IsPlayerFieldNumber = 2;
        private bool hasIsPlayer;
        private bool isPlayer_;
        public bool HasIsPlayer {
          get { return hasIsPlayer; }
        }
        public bool IsPlayer {
          get { return isPlayer_; }
        }
        
        public const int PosXFieldNumber = 3;
        private bool hasPosX;
        private float posX_;
        public bool HasPosX {
          get { return hasPosX; }
        }
        public float PosX {
          get { return posX_; }
        }
        
        public const int PosYFieldNumber = 4;
        private bool hasPosY;
        private float posY_;
        public bool HasPosY {
          get { return hasPosY; }
        }
        public float PosY {
          get { return posY_; }
        }
        
        public const int PosZFieldNumber = 5;
        private bool hasPosZ;
        private float posZ_;
        public bool HasPosZ {
          get { return hasPosZ; }
        }
        public float PosZ {
          get { return posZ_; }
        }
        
        public const int FaceDirFieldNumber = 6;
        private bool hasFaceDir;
        private float faceDir_;
        public bool HasFaceDir {
          get { return hasFaceDir; }
        }
        public float FaceDir {
          get { return faceDir_; }
        }
        
        public override bool IsInitialized {
          get {
            if (!hasObjId) return false;
            if (!hasIsPlayer) return false;
            if (!hasPosX) return false;
            if (!hasPosY) return false;
            if (!hasPosZ) return false;
            if (!hasFaceDir) return false;
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          int size = SerializedSize;
          string[] field_names = _debugSpaceInfoFieldNames;
          if (hasObjId) {
            output.WriteInt32(1, field_names[2], ObjId);
          }
          if (hasIsPlayer) {
            output.WriteBool(2, field_names[1], IsPlayer);
          }
          if (hasPosX) {
            output.WriteFloat(3, field_names[3], PosX);
          }
          if (hasPosY) {
            output.WriteFloat(4, field_names[4], PosY);
          }
          if (hasPosZ) {
            output.WriteFloat(5, field_names[5], PosZ);
          }
          if (hasFaceDir) {
            output.WriteFloat(6, field_names[0], FaceDir);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            
            size = 0;
            if (hasObjId) {
              size += pb::CodedOutputStream.ComputeInt32Size(1, ObjId);
            }
            if (hasIsPlayer) {
              size += pb::CodedOutputStream.ComputeBoolSize(2, IsPlayer);
            }
            if (hasPosX) {
              size += pb::CodedOutputStream.ComputeFloatSize(3, PosX);
            }
            if (hasPosY) {
              size += pb::CodedOutputStream.ComputeFloatSize(4, PosY);
            }
            if (hasPosZ) {
              size += pb::CodedOutputStream.ComputeFloatSize(5, PosZ);
            }
            if (hasFaceDir) {
              size += pb::CodedOutputStream.ComputeFloatSize(6, FaceDir);
            }
            size += UnknownFields.SerializedSize;
            memoizedSerializedSize = size;
            return size;
          }
        }
        
        public static DebugSpaceInfo ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static DebugSpaceInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static DebugSpaceInfo ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static DebugSpaceInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static DebugSpaceInfo ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static DebugSpaceInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static DebugSpaceInfo ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static DebugSpaceInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static DebugSpaceInfo ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static DebugSpaceInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private DebugSpaceInfo MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(DebugSpaceInfo prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<DebugSpaceInfo, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(DebugSpaceInfo cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private DebugSpaceInfo result;
          
          private DebugSpaceInfo PrepareBuilder() {
            if (resultIsReadOnly) {
              DebugSpaceInfo original = result;
              result = new DebugSpaceInfo();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override DebugSpaceInfo MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::DashFireMessage.Msg_RC_DebugSpaceInfo.Types.DebugSpaceInfo.Descriptor; }
          }
          
          public override DebugSpaceInfo DefaultInstanceForType {
            get { return global::DashFireMessage.Msg_RC_DebugSpaceInfo.Types.DebugSpaceInfo.DefaultInstance; }
          }
          
          public override DebugSpaceInfo BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is DebugSpaceInfo) {
              return MergeFrom((DebugSpaceInfo) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(DebugSpaceInfo other) {
            if (other == global::DashFireMessage.Msg_RC_DebugSpaceInfo.Types.DebugSpaceInfo.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasObjId) {
              ObjId = other.ObjId;
            }
            if (other.HasIsPlayer) {
              IsPlayer = other.IsPlayer;
            }
            if (other.HasPosX) {
              PosX = other.PosX;
            }
            if (other.HasPosY) {
              PosY = other.PosY;
            }
            if (other.HasPosZ) {
              PosZ = other.PosZ;
            }
            if (other.HasFaceDir) {
              FaceDir = other.FaceDir;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_debugSpaceInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _debugSpaceInfoFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 8: {
                  result.hasObjId = input.ReadInt32(ref result.objId_);
                  break;
                }
                case 16: {
                  result.hasIsPlayer = input.ReadBool(ref result.isPlayer_);
                  break;
                }
                case 29: {
                  result.hasPosX = input.ReadFloat(ref result.posX_);
                  break;
                }
                case 37: {
                  result.hasPosY = input.ReadFloat(ref result.posY_);
                  break;
                }
                case 45: {
                  result.hasPosZ = input.ReadFloat(ref result.posZ_);
                  break;
                }
                case 53: {
                  result.hasFaceDir = input.ReadFloat(ref result.faceDir_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasObjId {
            get { return result.hasObjId; }
          }
          public int ObjId {
            get { return result.ObjId; }
            set { SetObjId(value); }
          }
          public Builder SetObjId(int value) {
            PrepareBuilder();
            result.hasObjId = true;
            result.objId_ = value;
            return this;
          }
          public Builder ClearObjId() {
            PrepareBuilder();
            result.hasObjId = false;
            result.objId_ = 0;
            return this;
          }
          
          public bool HasIsPlayer {
            get { return result.hasIsPlayer; }
          }
          public bool IsPlayer {
            get { return result.IsPlayer; }
            set { SetIsPlayer(value); }
          }
          public Builder SetIsPlayer(bool value) {
            PrepareBuilder();
            result.hasIsPlayer = true;
            result.isPlayer_ = value;
            return this;
          }
          public Builder ClearIsPlayer() {
            PrepareBuilder();
            result.hasIsPlayer = false;
            result.isPlayer_ = false;
            return this;
          }
          
          public bool HasPosX {
            get { return result.hasPosX; }
          }
          public float PosX {
            get { return result.PosX; }
            set { SetPosX(value); }
          }
          public Builder SetPosX(float value) {
            PrepareBuilder();
            result.hasPosX = true;
            result.posX_ = value;
            return this;
          }
          public Builder ClearPosX() {
            PrepareBuilder();
            result.hasPosX = false;
            result.posX_ = 0F;
            return this;
          }
          
          public bool HasPosY {
            get { return result.hasPosY; }
          }
          public float PosY {
            get { return result.PosY; }
            set { SetPosY(value); }
          }
          public Builder SetPosY(float value) {
            PrepareBuilder();
            result.hasPosY = true;
            result.posY_ = value;
            return this;
          }
          public Builder ClearPosY() {
            PrepareBuilder();
            result.hasPosY = false;
            result.posY_ = 0F;
            return this;
          }
          
          public bool HasPosZ {
            get { return result.hasPosZ; }
          }
          public float PosZ {
            get { return result.PosZ; }
            set { SetPosZ(value); }
          }
          public Builder SetPosZ(float value) {
            PrepareBuilder();
            result.hasPosZ = true;
            result.posZ_ = value;
            return this;
          }
          public Builder ClearPosZ() {
            PrepareBuilder();
            result.hasPosZ = false;
            result.posZ_ = 0F;
            return this;
          }
          
          public bool HasFaceDir {
            get { return result.hasFaceDir; }
          }
          public float FaceDir {
            get { return result.FaceDir; }
            set { SetFaceDir(value); }
          }
          public Builder SetFaceDir(float value) {
            PrepareBuilder();
            result.hasFaceDir = true;
            result.faceDir_ = value;
            return this;
          }
          public Builder ClearFaceDir() {
            PrepareBuilder();
            result.hasFaceDir = false;
            result.faceDir_ = 0F;
            return this;
          }
        }
        static DebugSpaceInfo() {
          object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public const int SpaceInfosFieldNumber = 1;
    private pbc::PopsicleList<global::DashFireMessage.Msg_RC_DebugSpaceInfo.Types.DebugSpaceInfo> spaceInfos_ = new pbc::PopsicleList<global::DashFireMessage.Msg_RC_DebugSpaceInfo.Types.DebugSpaceInfo>();
    public scg::IList<global::DashFireMessage.Msg_RC_DebugSpaceInfo.Types.DebugSpaceInfo> SpaceInfosList {
      get { return spaceInfos_; }
    }
    public int SpaceInfosCount {
      get { return spaceInfos_.Count; }
    }
    public global::DashFireMessage.Msg_RC_DebugSpaceInfo.Types.DebugSpaceInfo GetSpaceInfos(int index) {
      return spaceInfos_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::DashFireMessage.Msg_RC_DebugSpaceInfo.Types.DebugSpaceInfo element in SpaceInfosList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCDebugSpaceInfoFieldNames;
      if (spaceInfos_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], spaceInfos_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::DashFireMessage.Msg_RC_DebugSpaceInfo.Types.DebugSpaceInfo element in SpaceInfosList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_DebugSpaceInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_DebugSpaceInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_DebugSpaceInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_DebugSpaceInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_DebugSpaceInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_DebugSpaceInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_DebugSpaceInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_DebugSpaceInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_DebugSpaceInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_DebugSpaceInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_DebugSpaceInfo MakeReadOnly() {
      spaceInfos_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_DebugSpaceInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_DebugSpaceInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_DebugSpaceInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_DebugSpaceInfo result;
      
      private Msg_RC_DebugSpaceInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_DebugSpaceInfo original = result;
          result = new Msg_RC_DebugSpaceInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_DebugSpaceInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_DebugSpaceInfo.Descriptor; }
      }
      
      public override Msg_RC_DebugSpaceInfo DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_DebugSpaceInfo.DefaultInstance; }
      }
      
      public override Msg_RC_DebugSpaceInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_DebugSpaceInfo) {
          return MergeFrom((Msg_RC_DebugSpaceInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_DebugSpaceInfo other) {
        if (other == global::DashFireMessage.Msg_RC_DebugSpaceInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.spaceInfos_.Count != 0) {
          result.spaceInfos_.Add(other.spaceInfos_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCDebugSpaceInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCDebugSpaceInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.spaceInfos_, global::DashFireMessage.Msg_RC_DebugSpaceInfo.Types.DebugSpaceInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::DashFireMessage.Msg_RC_DebugSpaceInfo.Types.DebugSpaceInfo> SpaceInfosList {
        get { return PrepareBuilder().spaceInfos_; }
      }
      public int SpaceInfosCount {
        get { return result.SpaceInfosCount; }
      }
      public global::DashFireMessage.Msg_RC_DebugSpaceInfo.Types.DebugSpaceInfo GetSpaceInfos(int index) {
        return result.GetSpaceInfos(index);
      }
      public Builder SetSpaceInfos(int index, global::DashFireMessage.Msg_RC_DebugSpaceInfo.Types.DebugSpaceInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.spaceInfos_[index] = value;
        return this;
      }
      public Builder SetSpaceInfos(int index, global::DashFireMessage.Msg_RC_DebugSpaceInfo.Types.DebugSpaceInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.spaceInfos_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSpaceInfos(global::DashFireMessage.Msg_RC_DebugSpaceInfo.Types.DebugSpaceInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.spaceInfos_.Add(value);
        return this;
      }
      public Builder AddSpaceInfos(global::DashFireMessage.Msg_RC_DebugSpaceInfo.Types.DebugSpaceInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.spaceInfos_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSpaceInfos(scg::IEnumerable<global::DashFireMessage.Msg_RC_DebugSpaceInfo.Types.DebugSpaceInfo> values) {
        PrepareBuilder();
        result.spaceInfos_.Add(values);
        return this;
      }
      public Builder ClearSpaceInfos() {
        PrepareBuilder();
        result.spaceInfos_.Clear();
        return this;
      }
    }
    static Msg_RC_DebugSpaceInfo() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CR_SwitchDebug : pb::GeneratedMessage<Msg_CR_SwitchDebug, Msg_CR_SwitchDebug.Builder> {
    private Msg_CR_SwitchDebug() { }
    private static readonly Msg_CR_SwitchDebug defaultInstance = new Msg_CR_SwitchDebug().MakeReadOnly();
    private static readonly string[] _msgCRSwitchDebugFieldNames = new string[] { "is_debug" };
    private static readonly uint[] _msgCRSwitchDebugFieldTags = new uint[] { 8 };
    public static Msg_CR_SwitchDebug DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CR_SwitchDebug DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CR_SwitchDebug ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CR_SwitchDebug__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CR_SwitchDebug, Msg_CR_SwitchDebug.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CR_SwitchDebug__FieldAccessorTable; }
    }
    
    public const int IsDebugFieldNumber = 1;
    private bool hasIsDebug;
    private bool isDebug_;
    public bool HasIsDebug {
      get { return hasIsDebug; }
    }
    public bool IsDebug {
      get { return isDebug_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasIsDebug) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRSwitchDebugFieldNames;
      if (hasIsDebug) {
        output.WriteBool(1, field_names[0], IsDebug);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasIsDebug) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, IsDebug);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CR_SwitchDebug ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CR_SwitchDebug ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_SwitchDebug ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CR_SwitchDebug ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_SwitchDebug ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CR_SwitchDebug ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_SwitchDebug ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CR_SwitchDebug ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CR_SwitchDebug ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CR_SwitchDebug ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CR_SwitchDebug MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CR_SwitchDebug prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CR_SwitchDebug, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CR_SwitchDebug cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CR_SwitchDebug result;
      
      private Msg_CR_SwitchDebug PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CR_SwitchDebug original = result;
          result = new Msg_CR_SwitchDebug();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CR_SwitchDebug MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CR_SwitchDebug.Descriptor; }
      }
      
      public override Msg_CR_SwitchDebug DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CR_SwitchDebug.DefaultInstance; }
      }
      
      public override Msg_CR_SwitchDebug BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CR_SwitchDebug) {
          return MergeFrom((Msg_CR_SwitchDebug) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CR_SwitchDebug other) {
        if (other == global::DashFireMessage.Msg_CR_SwitchDebug.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIsDebug) {
          IsDebug = other.IsDebug;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRSwitchDebugFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRSwitchDebugFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasIsDebug = input.ReadBool(ref result.isDebug_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIsDebug {
        get { return result.hasIsDebug; }
      }
      public bool IsDebug {
        get { return result.IsDebug; }
        set { SetIsDebug(value); }
      }
      public Builder SetIsDebug(bool value) {
        PrepareBuilder();
        result.hasIsDebug = true;
        result.isDebug_ = value;
        return this;
      }
      public Builder ClearIsDebug() {
        PrepareBuilder();
        result.hasIsDebug = false;
        result.isDebug_ = false;
        return this;
      }
    }
    static Msg_CR_SwitchDebug() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CR_BuyItem : pb::GeneratedMessage<Msg_CR_BuyItem, Msg_CR_BuyItem.Builder> {
    private Msg_CR_BuyItem() { }
    private static readonly Msg_CR_BuyItem defaultInstance = new Msg_CR_BuyItem().MakeReadOnly();
    private static readonly string[] _msgCRBuyItemFieldNames = new string[] { "item_id" };
    private static readonly uint[] _msgCRBuyItemFieldTags = new uint[] { 8 };
    public static Msg_CR_BuyItem DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CR_BuyItem DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CR_BuyItem ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CR_BuyItem__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CR_BuyItem, Msg_CR_BuyItem.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CR_BuyItem__FieldAccessorTable; }
    }
    
    public const int ItemIdFieldNumber = 1;
    private bool hasItemId;
    private int itemId_;
    public bool HasItemId {
      get { return hasItemId; }
    }
    public int ItemId {
      get { return itemId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasItemId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRBuyItemFieldNames;
      if (hasItemId) {
        output.WriteInt32(1, field_names[0], ItemId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasItemId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, ItemId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CR_BuyItem ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CR_BuyItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_BuyItem ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CR_BuyItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_BuyItem ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CR_BuyItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_BuyItem ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CR_BuyItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CR_BuyItem ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CR_BuyItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CR_BuyItem MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CR_BuyItem prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CR_BuyItem, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CR_BuyItem cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CR_BuyItem result;
      
      private Msg_CR_BuyItem PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CR_BuyItem original = result;
          result = new Msg_CR_BuyItem();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CR_BuyItem MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CR_BuyItem.Descriptor; }
      }
      
      public override Msg_CR_BuyItem DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CR_BuyItem.DefaultInstance; }
      }
      
      public override Msg_CR_BuyItem BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CR_BuyItem) {
          return MergeFrom((Msg_CR_BuyItem) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CR_BuyItem other) {
        if (other == global::DashFireMessage.Msg_CR_BuyItem.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasItemId) {
          ItemId = other.ItemId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRBuyItemFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRBuyItemFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasItemId = input.ReadInt32(ref result.itemId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasItemId {
        get { return result.hasItemId; }
      }
      public int ItemId {
        get { return result.ItemId; }
        set { SetItemId(value); }
      }
      public Builder SetItemId(int value) {
        PrepareBuilder();
        result.hasItemId = true;
        result.itemId_ = value;
        return this;
      }
      public Builder ClearItemId() {
        PrepareBuilder();
        result.hasItemId = false;
        result.itemId_ = 0;
        return this;
      }
    }
    static Msg_CR_BuyItem() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CR_SellItem : pb::GeneratedMessage<Msg_CR_SellItem, Msg_CR_SellItem.Builder> {
    private Msg_CR_SellItem() { }
    private static readonly Msg_CR_SellItem defaultInstance = new Msg_CR_SellItem().MakeReadOnly();
    private static readonly string[] _msgCRSellItemFieldNames = new string[] { "item_pos" };
    private static readonly uint[] _msgCRSellItemFieldTags = new uint[] { 8 };
    public static Msg_CR_SellItem DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CR_SellItem DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CR_SellItem ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CR_SellItem__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CR_SellItem, Msg_CR_SellItem.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CR_SellItem__FieldAccessorTable; }
    }
    
    public const int ItemPosFieldNumber = 1;
    private bool hasItemPos;
    private int itemPos_;
    public bool HasItemPos {
      get { return hasItemPos; }
    }
    public int ItemPos {
      get { return itemPos_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasItemPos) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRSellItemFieldNames;
      if (hasItemPos) {
        output.WriteInt32(1, field_names[0], ItemPos);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasItemPos) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, ItemPos);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CR_SellItem ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CR_SellItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_SellItem ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CR_SellItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_SellItem ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CR_SellItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_SellItem ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CR_SellItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CR_SellItem ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CR_SellItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CR_SellItem MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CR_SellItem prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CR_SellItem, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CR_SellItem cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CR_SellItem result;
      
      private Msg_CR_SellItem PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CR_SellItem original = result;
          result = new Msg_CR_SellItem();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CR_SellItem MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CR_SellItem.Descriptor; }
      }
      
      public override Msg_CR_SellItem DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CR_SellItem.DefaultInstance; }
      }
      
      public override Msg_CR_SellItem BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CR_SellItem) {
          return MergeFrom((Msg_CR_SellItem) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CR_SellItem other) {
        if (other == global::DashFireMessage.Msg_CR_SellItem.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasItemPos) {
          ItemPos = other.ItemPos;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRSellItemFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRSellItemFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasItemPos = input.ReadInt32(ref result.itemPos_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasItemPos {
        get { return result.hasItemPos; }
      }
      public int ItemPos {
        get { return result.ItemPos; }
        set { SetItemPos(value); }
      }
      public Builder SetItemPos(int value) {
        PrepareBuilder();
        result.hasItemPos = true;
        result.itemPos_ = value;
        return this;
      }
      public Builder ClearItemPos() {
        PrepareBuilder();
        result.hasItemPos = false;
        result.itemPos_ = 0;
        return this;
      }
    }
    static Msg_CR_SellItem() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CR_SwapItem : pb::GeneratedMessage<Msg_CR_SwapItem, Msg_CR_SwapItem.Builder> {
    private Msg_CR_SwapItem() { }
    private static readonly Msg_CR_SwapItem defaultInstance = new Msg_CR_SwapItem().MakeReadOnly();
    private static readonly string[] _msgCRSwapItemFieldNames = new string[] { "item_pos_1", "item_pos_2" };
    private static readonly uint[] _msgCRSwapItemFieldTags = new uint[] { 8, 16 };
    public static Msg_CR_SwapItem DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CR_SwapItem DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CR_SwapItem ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CR_SwapItem__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CR_SwapItem, Msg_CR_SwapItem.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CR_SwapItem__FieldAccessorTable; }
    }
    
    public const int ItemPos1FieldNumber = 1;
    private bool hasItemPos1;
    private int itemPos1_;
    public bool HasItemPos1 {
      get { return hasItemPos1; }
    }
    public int ItemPos1 {
      get { return itemPos1_; }
    }
    
    public const int ItemPos2FieldNumber = 2;
    private bool hasItemPos2;
    private int itemPos2_;
    public bool HasItemPos2 {
      get { return hasItemPos2; }
    }
    public int ItemPos2 {
      get { return itemPos2_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasItemPos1) return false;
        if (!hasItemPos2) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRSwapItemFieldNames;
      if (hasItemPos1) {
        output.WriteInt32(1, field_names[0], ItemPos1);
      }
      if (hasItemPos2) {
        output.WriteInt32(2, field_names[1], ItemPos2);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasItemPos1) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, ItemPos1);
        }
        if (hasItemPos2) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, ItemPos2);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CR_SwapItem ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CR_SwapItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_SwapItem ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CR_SwapItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_SwapItem ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CR_SwapItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_SwapItem ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CR_SwapItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CR_SwapItem ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CR_SwapItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CR_SwapItem MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CR_SwapItem prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CR_SwapItem, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CR_SwapItem cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CR_SwapItem result;
      
      private Msg_CR_SwapItem PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CR_SwapItem original = result;
          result = new Msg_CR_SwapItem();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CR_SwapItem MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CR_SwapItem.Descriptor; }
      }
      
      public override Msg_CR_SwapItem DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CR_SwapItem.DefaultInstance; }
      }
      
      public override Msg_CR_SwapItem BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CR_SwapItem) {
          return MergeFrom((Msg_CR_SwapItem) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CR_SwapItem other) {
        if (other == global::DashFireMessage.Msg_CR_SwapItem.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasItemPos1) {
          ItemPos1 = other.ItemPos1;
        }
        if (other.HasItemPos2) {
          ItemPos2 = other.ItemPos2;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRSwapItemFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRSwapItemFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasItemPos1 = input.ReadInt32(ref result.itemPos1_);
              break;
            }
            case 16: {
              result.hasItemPos2 = input.ReadInt32(ref result.itemPos2_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasItemPos1 {
        get { return result.hasItemPos1; }
      }
      public int ItemPos1 {
        get { return result.ItemPos1; }
        set { SetItemPos1(value); }
      }
      public Builder SetItemPos1(int value) {
        PrepareBuilder();
        result.hasItemPos1 = true;
        result.itemPos1_ = value;
        return this;
      }
      public Builder ClearItemPos1() {
        PrepareBuilder();
        result.hasItemPos1 = false;
        result.itemPos1_ = 0;
        return this;
      }
      
      public bool HasItemPos2 {
        get { return result.hasItemPos2; }
      }
      public int ItemPos2 {
        get { return result.ItemPos2; }
        set { SetItemPos2(value); }
      }
      public Builder SetItemPos2(int value) {
        PrepareBuilder();
        result.hasItemPos2 = true;
        result.itemPos2_ = value;
        return this;
      }
      public Builder ClearItemPos2() {
        PrepareBuilder();
        result.hasItemPos2 = false;
        result.itemPos2_ = 0;
        return this;
      }
    }
    static Msg_CR_SwapItem() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CR_DiscardItem : pb::GeneratedMessage<Msg_CR_DiscardItem, Msg_CR_DiscardItem.Builder> {
    private Msg_CR_DiscardItem() { }
    private static readonly Msg_CR_DiscardItem defaultInstance = new Msg_CR_DiscardItem().MakeReadOnly();
    private static readonly string[] _msgCRDiscardItemFieldNames = new string[] { "item_pos" };
    private static readonly uint[] _msgCRDiscardItemFieldTags = new uint[] { 8 };
    public static Msg_CR_DiscardItem DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CR_DiscardItem DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CR_DiscardItem ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CR_DiscardItem__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CR_DiscardItem, Msg_CR_DiscardItem.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CR_DiscardItem__FieldAccessorTable; }
    }
    
    public const int ItemPosFieldNumber = 1;
    private bool hasItemPos;
    private int itemPos_;
    public bool HasItemPos {
      get { return hasItemPos; }
    }
    public int ItemPos {
      get { return itemPos_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasItemPos) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRDiscardItemFieldNames;
      if (hasItemPos) {
        output.WriteInt32(1, field_names[0], ItemPos);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasItemPos) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, ItemPos);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CR_DiscardItem ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CR_DiscardItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_DiscardItem ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CR_DiscardItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_DiscardItem ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CR_DiscardItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_DiscardItem ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CR_DiscardItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CR_DiscardItem ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CR_DiscardItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CR_DiscardItem MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CR_DiscardItem prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CR_DiscardItem, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CR_DiscardItem cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CR_DiscardItem result;
      
      private Msg_CR_DiscardItem PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CR_DiscardItem original = result;
          result = new Msg_CR_DiscardItem();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CR_DiscardItem MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CR_DiscardItem.Descriptor; }
      }
      
      public override Msg_CR_DiscardItem DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CR_DiscardItem.DefaultInstance; }
      }
      
      public override Msg_CR_DiscardItem BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CR_DiscardItem) {
          return MergeFrom((Msg_CR_DiscardItem) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CR_DiscardItem other) {
        if (other == global::DashFireMessage.Msg_CR_DiscardItem.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasItemPos) {
          ItemPos = other.ItemPos;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRDiscardItemFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRDiscardItemFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasItemPos = input.ReadInt32(ref result.itemPos_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasItemPos {
        get { return result.hasItemPos; }
      }
      public int ItemPos {
        get { return result.ItemPos; }
        set { SetItemPos(value); }
      }
      public Builder SetItemPos(int value) {
        PrepareBuilder();
        result.hasItemPos = true;
        result.itemPos_ = value;
        return this;
      }
      public Builder ClearItemPos() {
        PrepareBuilder();
        result.hasItemPos = false;
        result.itemPos_ = 0;
        return this;
      }
    }
    static Msg_CR_DiscardItem() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_PvpFinish : pb::GeneratedMessage<Msg_RC_PvpFinish, Msg_RC_PvpFinish.Builder> {
    private Msg_RC_PvpFinish() { }
    private static readonly Msg_RC_PvpFinish defaultInstance = new Msg_RC_PvpFinish().MakeReadOnly();
    private static readonly string[] _msgRCPvpFinishFieldNames = new string[] { "win_camp_id" };
    private static readonly uint[] _msgRCPvpFinishFieldTags = new uint[] { 8 };
    public static Msg_RC_PvpFinish DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_PvpFinish DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_PvpFinish ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_PvpFinish__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_PvpFinish, Msg_RC_PvpFinish.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_PvpFinish__FieldAccessorTable; }
    }
    
    public const int WinCampIdFieldNumber = 1;
    private bool hasWinCampId;
    private int winCampId_;
    public bool HasWinCampId {
      get { return hasWinCampId; }
    }
    public int WinCampId {
      get { return winCampId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasWinCampId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCPvpFinishFieldNames;
      if (hasWinCampId) {
        output.WriteInt32(1, field_names[0], WinCampId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasWinCampId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, WinCampId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_PvpFinish ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_PvpFinish ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_PvpFinish ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_PvpFinish ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_PvpFinish ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_PvpFinish ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_PvpFinish ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_PvpFinish ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_PvpFinish ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_PvpFinish ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_PvpFinish MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_PvpFinish prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_PvpFinish, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_PvpFinish cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_PvpFinish result;
      
      private Msg_RC_PvpFinish PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_PvpFinish original = result;
          result = new Msg_RC_PvpFinish();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_PvpFinish MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_PvpFinish.Descriptor; }
      }
      
      public override Msg_RC_PvpFinish DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_PvpFinish.DefaultInstance; }
      }
      
      public override Msg_RC_PvpFinish BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_PvpFinish) {
          return MergeFrom((Msg_RC_PvpFinish) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_PvpFinish other) {
        if (other == global::DashFireMessage.Msg_RC_PvpFinish.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasWinCampId) {
          WinCampId = other.WinCampId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCPvpFinishFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCPvpFinishFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasWinCampId = input.ReadInt32(ref result.winCampId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasWinCampId {
        get { return result.hasWinCampId; }
      }
      public int WinCampId {
        get { return result.WinCampId; }
        set { SetWinCampId(value); }
      }
      public Builder SetWinCampId(int value) {
        PrepareBuilder();
        result.hasWinCampId = true;
        result.winCampId_ = value;
        return this;
      }
      public Builder ClearWinCampId() {
        PrepareBuilder();
        result.hasWinCampId = false;
        result.winCampId_ = 0;
        return this;
      }
    }
    static Msg_RC_PvpFinish() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_PveFinish : pb::GeneratedMessage<Msg_RC_PveFinish, Msg_RC_PveFinish.Builder> {
    private Msg_RC_PveFinish() { }
    private static readonly Msg_RC_PveFinish defaultInstance = new Msg_RC_PveFinish().MakeReadOnly();
    private static readonly string[] _msgRCPveFinishFieldNames = new string[] { "is_win" };
    private static readonly uint[] _msgRCPveFinishFieldTags = new uint[] { 8 };
    public static Msg_RC_PveFinish DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_PveFinish DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_PveFinish ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_PveFinish__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_PveFinish, Msg_RC_PveFinish.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_PveFinish__FieldAccessorTable; }
    }
    
    public const int IsWinFieldNumber = 1;
    private bool hasIsWin;
    private bool isWin_;
    public bool HasIsWin {
      get { return hasIsWin; }
    }
    public bool IsWin {
      get { return isWin_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasIsWin) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCPveFinishFieldNames;
      if (hasIsWin) {
        output.WriteBool(1, field_names[0], IsWin);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasIsWin) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, IsWin);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_PveFinish ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_PveFinish ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_PveFinish ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_PveFinish ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_PveFinish ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_PveFinish ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_PveFinish ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_PveFinish ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_PveFinish ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_PveFinish ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_PveFinish MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_PveFinish prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_PveFinish, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_PveFinish cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_PveFinish result;
      
      private Msg_RC_PveFinish PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_PveFinish original = result;
          result = new Msg_RC_PveFinish();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_PveFinish MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_PveFinish.Descriptor; }
      }
      
      public override Msg_RC_PveFinish DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_PveFinish.DefaultInstance; }
      }
      
      public override Msg_RC_PveFinish BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_PveFinish) {
          return MergeFrom((Msg_RC_PveFinish) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_PveFinish other) {
        if (other == global::DashFireMessage.Msg_RC_PveFinish.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIsWin) {
          IsWin = other.IsWin;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCPveFinishFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCPveFinishFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasIsWin = input.ReadBool(ref result.isWin_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIsWin {
        get { return result.hasIsWin; }
      }
      public bool IsWin {
        get { return result.IsWin; }
        set { SetIsWin(value); }
      }
      public Builder SetIsWin(bool value) {
        PrepareBuilder();
        result.hasIsWin = true;
        result.isWin_ = value;
        return this;
      }
      public Builder ClearIsWin() {
        PrepareBuilder();
        result.hasIsWin = false;
        result.isWin_ = false;
        return this;
      }
    }
    static Msg_RC_PveFinish() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_SyncCombatStatisticInfo : pb::GeneratedMessage<Msg_RC_SyncCombatStatisticInfo, Msg_RC_SyncCombatStatisticInfo.Builder> {
    private Msg_RC_SyncCombatStatisticInfo() { }
    private static readonly Msg_RC_SyncCombatStatisticInfo defaultInstance = new Msg_RC_SyncCombatStatisticInfo().MakeReadOnly();
    private static readonly string[] _msgRCSyncCombatStatisticInfoFieldNames = new string[] { "assit_kill_count", "dead_count", "kill_hero_count", "kill_npc_count", "role_id" };
    private static readonly uint[] _msgRCSyncCombatStatisticInfoFieldTags = new uint[] { 24, 40, 16, 32, 8 };
    public static Msg_RC_SyncCombatStatisticInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_SyncCombatStatisticInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_SyncCombatStatisticInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SyncCombatStatisticInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_SyncCombatStatisticInfo, Msg_RC_SyncCombatStatisticInfo.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SyncCombatStatisticInfo__FieldAccessorTable; }
    }
    
    public const int RoleIdFieldNumber = 1;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int KillHeroCountFieldNumber = 2;
    private bool hasKillHeroCount;
    private int killHeroCount_;
    public bool HasKillHeroCount {
      get { return hasKillHeroCount; }
    }
    public int KillHeroCount {
      get { return killHeroCount_; }
    }
    
    public const int AssitKillCountFieldNumber = 3;
    private bool hasAssitKillCount;
    private int assitKillCount_;
    public bool HasAssitKillCount {
      get { return hasAssitKillCount; }
    }
    public int AssitKillCount {
      get { return assitKillCount_; }
    }
    
    public const int KillNpcCountFieldNumber = 4;
    private bool hasKillNpcCount;
    private int killNpcCount_;
    public bool HasKillNpcCount {
      get { return hasKillNpcCount; }
    }
    public int KillNpcCount {
      get { return killNpcCount_; }
    }
    
    public const int DeadCountFieldNumber = 5;
    private bool hasDeadCount;
    private int deadCount_;
    public bool HasDeadCount {
      get { return hasDeadCount; }
    }
    public int DeadCount {
      get { return deadCount_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoleId) return false;
        if (!hasKillHeroCount) return false;
        if (!hasAssitKillCount) return false;
        if (!hasKillNpcCount) return false;
        if (!hasDeadCount) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCSyncCombatStatisticInfoFieldNames;
      if (hasRoleId) {
        output.WriteInt32(1, field_names[4], RoleId);
      }
      if (hasKillHeroCount) {
        output.WriteInt32(2, field_names[2], KillHeroCount);
      }
      if (hasAssitKillCount) {
        output.WriteInt32(3, field_names[0], AssitKillCount);
      }
      if (hasKillNpcCount) {
        output.WriteInt32(4, field_names[3], KillNpcCount);
      }
      if (hasDeadCount) {
        output.WriteInt32(5, field_names[1], DeadCount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoleId);
        }
        if (hasKillHeroCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, KillHeroCount);
        }
        if (hasAssitKillCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, AssitKillCount);
        }
        if (hasKillNpcCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, KillNpcCount);
        }
        if (hasDeadCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, DeadCount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_SyncCombatStatisticInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_SyncCombatStatisticInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SyncCombatStatisticInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_SyncCombatStatisticInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SyncCombatStatisticInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_SyncCombatStatisticInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SyncCombatStatisticInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_SyncCombatStatisticInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_SyncCombatStatisticInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_SyncCombatStatisticInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_SyncCombatStatisticInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_SyncCombatStatisticInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_SyncCombatStatisticInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_SyncCombatStatisticInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_SyncCombatStatisticInfo result;
      
      private Msg_RC_SyncCombatStatisticInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_SyncCombatStatisticInfo original = result;
          result = new Msg_RC_SyncCombatStatisticInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_SyncCombatStatisticInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_SyncCombatStatisticInfo.Descriptor; }
      }
      
      public override Msg_RC_SyncCombatStatisticInfo DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_SyncCombatStatisticInfo.DefaultInstance; }
      }
      
      public override Msg_RC_SyncCombatStatisticInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_SyncCombatStatisticInfo) {
          return MergeFrom((Msg_RC_SyncCombatStatisticInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_SyncCombatStatisticInfo other) {
        if (other == global::DashFireMessage.Msg_RC_SyncCombatStatisticInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasKillHeroCount) {
          KillHeroCount = other.KillHeroCount;
        }
        if (other.HasAssitKillCount) {
          AssitKillCount = other.AssitKillCount;
        }
        if (other.HasKillNpcCount) {
          KillNpcCount = other.KillNpcCount;
        }
        if (other.HasDeadCount) {
          DeadCount = other.DeadCount;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCSyncCombatStatisticInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCSyncCombatStatisticInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 16: {
              result.hasKillHeroCount = input.ReadInt32(ref result.killHeroCount_);
              break;
            }
            case 24: {
              result.hasAssitKillCount = input.ReadInt32(ref result.assitKillCount_);
              break;
            }
            case 32: {
              result.hasKillNpcCount = input.ReadInt32(ref result.killNpcCount_);
              break;
            }
            case 40: {
              result.hasDeadCount = input.ReadInt32(ref result.deadCount_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasKillHeroCount {
        get { return result.hasKillHeroCount; }
      }
      public int KillHeroCount {
        get { return result.KillHeroCount; }
        set { SetKillHeroCount(value); }
      }
      public Builder SetKillHeroCount(int value) {
        PrepareBuilder();
        result.hasKillHeroCount = true;
        result.killHeroCount_ = value;
        return this;
      }
      public Builder ClearKillHeroCount() {
        PrepareBuilder();
        result.hasKillHeroCount = false;
        result.killHeroCount_ = 0;
        return this;
      }
      
      public bool HasAssitKillCount {
        get { return result.hasAssitKillCount; }
      }
      public int AssitKillCount {
        get { return result.AssitKillCount; }
        set { SetAssitKillCount(value); }
      }
      public Builder SetAssitKillCount(int value) {
        PrepareBuilder();
        result.hasAssitKillCount = true;
        result.assitKillCount_ = value;
        return this;
      }
      public Builder ClearAssitKillCount() {
        PrepareBuilder();
        result.hasAssitKillCount = false;
        result.assitKillCount_ = 0;
        return this;
      }
      
      public bool HasKillNpcCount {
        get { return result.hasKillNpcCount; }
      }
      public int KillNpcCount {
        get { return result.KillNpcCount; }
        set { SetKillNpcCount(value); }
      }
      public Builder SetKillNpcCount(int value) {
        PrepareBuilder();
        result.hasKillNpcCount = true;
        result.killNpcCount_ = value;
        return this;
      }
      public Builder ClearKillNpcCount() {
        PrepareBuilder();
        result.hasKillNpcCount = false;
        result.killNpcCount_ = 0;
        return this;
      }
      
      public bool HasDeadCount {
        get { return result.hasDeadCount; }
      }
      public int DeadCount {
        get { return result.DeadCount; }
        set { SetDeadCount(value); }
      }
      public Builder SetDeadCount(int value) {
        PrepareBuilder();
        result.hasDeadCount = true;
        result.deadCount_ = value;
        return this;
      }
      public Builder ClearDeadCount() {
        PrepareBuilder();
        result.hasDeadCount = false;
        result.deadCount_ = 0;
        return this;
      }
    }
    static Msg_RC_SyncCombatStatisticInfo() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_PvpCombatInfo : pb::GeneratedMessage<Msg_RC_PvpCombatInfo, Msg_RC_PvpCombatInfo.Builder> {
    private Msg_RC_PvpCombatInfo() { }
    private static readonly Msg_RC_PvpCombatInfo defaultInstance = new Msg_RC_PvpCombatInfo().MakeReadOnly();
    private static readonly string[] _msgRCPvpCombatInfoFieldNames = new string[] { "kill_hero_count_for_blue", "kill_hero_count_for_red", "killed_nickname", "killer_nickname", "link_id_for_killed", "link_id_for_killer" };
    private static readonly uint[] _msgRCPvpCombatInfoFieldTags = new uint[] { 8, 16, 50, 42, 32, 24 };
    public static Msg_RC_PvpCombatInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_PvpCombatInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_PvpCombatInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_PvpCombatInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_PvpCombatInfo, Msg_RC_PvpCombatInfo.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_PvpCombatInfo__FieldAccessorTable; }
    }
    
    public const int KillHeroCountForBlueFieldNumber = 1;
    private bool hasKillHeroCountForBlue;
    private int killHeroCountForBlue_;
    public bool HasKillHeroCountForBlue {
      get { return hasKillHeroCountForBlue; }
    }
    public int KillHeroCountForBlue {
      get { return killHeroCountForBlue_; }
    }
    
    public const int KillHeroCountForRedFieldNumber = 2;
    private bool hasKillHeroCountForRed;
    private int killHeroCountForRed_;
    public bool HasKillHeroCountForRed {
      get { return hasKillHeroCountForRed; }
    }
    public int KillHeroCountForRed {
      get { return killHeroCountForRed_; }
    }
    
    public const int LinkIdForKillerFieldNumber = 3;
    private bool hasLinkIdForKiller;
    private int linkIdForKiller_;
    public bool HasLinkIdForKiller {
      get { return hasLinkIdForKiller; }
    }
    public int LinkIdForKiller {
      get { return linkIdForKiller_; }
    }
    
    public const int LinkIdForKilledFieldNumber = 4;
    private bool hasLinkIdForKilled;
    private int linkIdForKilled_;
    public bool HasLinkIdForKilled {
      get { return hasLinkIdForKilled; }
    }
    public int LinkIdForKilled {
      get { return linkIdForKilled_; }
    }
    
    public const int KillerNicknameFieldNumber = 5;
    private bool hasKillerNickname;
    private string killerNickname_ = "";
    public bool HasKillerNickname {
      get { return hasKillerNickname; }
    }
    public string KillerNickname {
      get { return killerNickname_; }
    }
    
    public const int KilledNicknameFieldNumber = 6;
    private bool hasKilledNickname;
    private string killedNickname_ = "";
    public bool HasKilledNickname {
      get { return hasKilledNickname; }
    }
    public string KilledNickname {
      get { return killedNickname_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasKillHeroCountForBlue) return false;
        if (!hasKillHeroCountForRed) return false;
        if (!hasLinkIdForKiller) return false;
        if (!hasLinkIdForKilled) return false;
        if (!hasKillerNickname) return false;
        if (!hasKilledNickname) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCPvpCombatInfoFieldNames;
      if (hasKillHeroCountForBlue) {
        output.WriteInt32(1, field_names[0], KillHeroCountForBlue);
      }
      if (hasKillHeroCountForRed) {
        output.WriteInt32(2, field_names[1], KillHeroCountForRed);
      }
      if (hasLinkIdForKiller) {
        output.WriteInt32(3, field_names[5], LinkIdForKiller);
      }
      if (hasLinkIdForKilled) {
        output.WriteInt32(4, field_names[4], LinkIdForKilled);
      }
      if (hasKillerNickname) {
        output.WriteString(5, field_names[3], KillerNickname);
      }
      if (hasKilledNickname) {
        output.WriteString(6, field_names[2], KilledNickname);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasKillHeroCountForBlue) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, KillHeroCountForBlue);
        }
        if (hasKillHeroCountForRed) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, KillHeroCountForRed);
        }
        if (hasLinkIdForKiller) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, LinkIdForKiller);
        }
        if (hasLinkIdForKilled) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, LinkIdForKilled);
        }
        if (hasKillerNickname) {
          size += pb::CodedOutputStream.ComputeStringSize(5, KillerNickname);
        }
        if (hasKilledNickname) {
          size += pb::CodedOutputStream.ComputeStringSize(6, KilledNickname);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_PvpCombatInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_PvpCombatInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_PvpCombatInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_PvpCombatInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_PvpCombatInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_PvpCombatInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_PvpCombatInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_PvpCombatInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_PvpCombatInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_PvpCombatInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_PvpCombatInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_PvpCombatInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_PvpCombatInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_PvpCombatInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_PvpCombatInfo result;
      
      private Msg_RC_PvpCombatInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_PvpCombatInfo original = result;
          result = new Msg_RC_PvpCombatInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_PvpCombatInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_PvpCombatInfo.Descriptor; }
      }
      
      public override Msg_RC_PvpCombatInfo DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_PvpCombatInfo.DefaultInstance; }
      }
      
      public override Msg_RC_PvpCombatInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_PvpCombatInfo) {
          return MergeFrom((Msg_RC_PvpCombatInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_PvpCombatInfo other) {
        if (other == global::DashFireMessage.Msg_RC_PvpCombatInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasKillHeroCountForBlue) {
          KillHeroCountForBlue = other.KillHeroCountForBlue;
        }
        if (other.HasKillHeroCountForRed) {
          KillHeroCountForRed = other.KillHeroCountForRed;
        }
        if (other.HasLinkIdForKiller) {
          LinkIdForKiller = other.LinkIdForKiller;
        }
        if (other.HasLinkIdForKilled) {
          LinkIdForKilled = other.LinkIdForKilled;
        }
        if (other.HasKillerNickname) {
          KillerNickname = other.KillerNickname;
        }
        if (other.HasKilledNickname) {
          KilledNickname = other.KilledNickname;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCPvpCombatInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCPvpCombatInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasKillHeroCountForBlue = input.ReadInt32(ref result.killHeroCountForBlue_);
              break;
            }
            case 16: {
              result.hasKillHeroCountForRed = input.ReadInt32(ref result.killHeroCountForRed_);
              break;
            }
            case 24: {
              result.hasLinkIdForKiller = input.ReadInt32(ref result.linkIdForKiller_);
              break;
            }
            case 32: {
              result.hasLinkIdForKilled = input.ReadInt32(ref result.linkIdForKilled_);
              break;
            }
            case 42: {
              result.hasKillerNickname = input.ReadString(ref result.killerNickname_);
              break;
            }
            case 50: {
              result.hasKilledNickname = input.ReadString(ref result.killedNickname_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasKillHeroCountForBlue {
        get { return result.hasKillHeroCountForBlue; }
      }
      public int KillHeroCountForBlue {
        get { return result.KillHeroCountForBlue; }
        set { SetKillHeroCountForBlue(value); }
      }
      public Builder SetKillHeroCountForBlue(int value) {
        PrepareBuilder();
        result.hasKillHeroCountForBlue = true;
        result.killHeroCountForBlue_ = value;
        return this;
      }
      public Builder ClearKillHeroCountForBlue() {
        PrepareBuilder();
        result.hasKillHeroCountForBlue = false;
        result.killHeroCountForBlue_ = 0;
        return this;
      }
      
      public bool HasKillHeroCountForRed {
        get { return result.hasKillHeroCountForRed; }
      }
      public int KillHeroCountForRed {
        get { return result.KillHeroCountForRed; }
        set { SetKillHeroCountForRed(value); }
      }
      public Builder SetKillHeroCountForRed(int value) {
        PrepareBuilder();
        result.hasKillHeroCountForRed = true;
        result.killHeroCountForRed_ = value;
        return this;
      }
      public Builder ClearKillHeroCountForRed() {
        PrepareBuilder();
        result.hasKillHeroCountForRed = false;
        result.killHeroCountForRed_ = 0;
        return this;
      }
      
      public bool HasLinkIdForKiller {
        get { return result.hasLinkIdForKiller; }
      }
      public int LinkIdForKiller {
        get { return result.LinkIdForKiller; }
        set { SetLinkIdForKiller(value); }
      }
      public Builder SetLinkIdForKiller(int value) {
        PrepareBuilder();
        result.hasLinkIdForKiller = true;
        result.linkIdForKiller_ = value;
        return this;
      }
      public Builder ClearLinkIdForKiller() {
        PrepareBuilder();
        result.hasLinkIdForKiller = false;
        result.linkIdForKiller_ = 0;
        return this;
      }
      
      public bool HasLinkIdForKilled {
        get { return result.hasLinkIdForKilled; }
      }
      public int LinkIdForKilled {
        get { return result.LinkIdForKilled; }
        set { SetLinkIdForKilled(value); }
      }
      public Builder SetLinkIdForKilled(int value) {
        PrepareBuilder();
        result.hasLinkIdForKilled = true;
        result.linkIdForKilled_ = value;
        return this;
      }
      public Builder ClearLinkIdForKilled() {
        PrepareBuilder();
        result.hasLinkIdForKilled = false;
        result.linkIdForKilled_ = 0;
        return this;
      }
      
      public bool HasKillerNickname {
        get { return result.hasKillerNickname; }
      }
      public string KillerNickname {
        get { return result.KillerNickname; }
        set { SetKillerNickname(value); }
      }
      public Builder SetKillerNickname(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasKillerNickname = true;
        result.killerNickname_ = value;
        return this;
      }
      public Builder ClearKillerNickname() {
        PrepareBuilder();
        result.hasKillerNickname = false;
        result.killerNickname_ = "";
        return this;
      }
      
      public bool HasKilledNickname {
        get { return result.hasKilledNickname; }
      }
      public string KilledNickname {
        get { return result.KilledNickname; }
        set { SetKilledNickname(value); }
      }
      public Builder SetKilledNickname(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasKilledNickname = true;
        result.killedNickname_ = value;
        return this;
      }
      public Builder ClearKilledNickname() {
        PrepareBuilder();
        result.hasKilledNickname = false;
        result.killedNickname_ = "";
        return this;
      }
    }
    static Msg_RC_PvpCombatInfo() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_SkillShootBarrage : pb::GeneratedMessage<Msg_RC_SkillShootBarrage, Msg_RC_SkillShootBarrage.Builder> {
    private Msg_RC_SkillShootBarrage() { }
    private static readonly Msg_RC_SkillShootBarrage defaultInstance = new Msg_RC_SkillShootBarrage().MakeReadOnly();
    private static readonly string[] _msgRCSkillShootBarrageFieldNames = new string[] { "barrage_id", "face_direction", "role_id", "shoot_direction", "shoot_pos", "shoot_time", "skill_id", "stand_pos", "target_pos", "target_role_id" };
    private static readonly uint[] _msgRCSkillShootBarrageFieldTags = new uint[] { 32, 77, 16, 45, 50, 8, 24, 66, 82, 56 };
    public static Msg_RC_SkillShootBarrage DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_SkillShootBarrage DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_SkillShootBarrage ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SkillShootBarrage__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_SkillShootBarrage, Msg_RC_SkillShootBarrage.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SkillShootBarrage__FieldAccessorTable; }
    }
    
    public const int ShootTimeFieldNumber = 1;
    private bool hasShootTime;
    private long shootTime_;
    public bool HasShootTime {
      get { return hasShootTime; }
    }
    public long ShootTime {
      get { return shootTime_; }
    }
    
    public const int RoleIdFieldNumber = 2;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int SkillIdFieldNumber = 3;
    private bool hasSkillId;
    private int skillId_;
    public bool HasSkillId {
      get { return hasSkillId; }
    }
    public int SkillId {
      get { return skillId_; }
    }
    
    public const int BarrageIdFieldNumber = 4;
    private bool hasBarrageId;
    private int barrageId_;
    public bool HasBarrageId {
      get { return hasBarrageId; }
    }
    public int BarrageId {
      get { return barrageId_; }
    }
    
    public const int ShootDirectionFieldNumber = 5;
    private bool hasShootDirection;
    private float shootDirection_;
    public bool HasShootDirection {
      get { return hasShootDirection; }
    }
    public float ShootDirection {
      get { return shootDirection_; }
    }
    
    public const int ShootPosFieldNumber = 6;
    private bool hasShootPos;
    private global::DashFireMessage.Position shootPos_;
    public bool HasShootPos {
      get { return hasShootPos; }
    }
    public global::DashFireMessage.Position ShootPos {
      get { return shootPos_ ?? global::DashFireMessage.Position.DefaultInstance; }
    }
    
    public const int TargetRoleIdFieldNumber = 7;
    private bool hasTargetRoleId;
    private int targetRoleId_;
    public bool HasTargetRoleId {
      get { return hasTargetRoleId; }
    }
    public int TargetRoleId {
      get { return targetRoleId_; }
    }
    
    public const int StandPosFieldNumber = 8;
    private bool hasStandPos;
    private global::DashFireMessage.Position standPos_;
    public bool HasStandPos {
      get { return hasStandPos; }
    }
    public global::DashFireMessage.Position StandPos {
      get { return standPos_ ?? global::DashFireMessage.Position.DefaultInstance; }
    }
    
    public const int FaceDirectionFieldNumber = 9;
    private bool hasFaceDirection;
    private float faceDirection_;
    public bool HasFaceDirection {
      get { return hasFaceDirection; }
    }
    public float FaceDirection {
      get { return faceDirection_; }
    }
    
    public const int TargetPosFieldNumber = 10;
    private bool hasTargetPos;
    private global::DashFireMessage.Position targetPos_;
    public bool HasTargetPos {
      get { return hasTargetPos; }
    }
    public global::DashFireMessage.Position TargetPos {
      get { return targetPos_ ?? global::DashFireMessage.Position.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasShootTime) return false;
        if (!hasRoleId) return false;
        if (!hasSkillId) return false;
        if (!hasBarrageId) return false;
        if (!hasShootDirection) return false;
        if (!hasShootPos) return false;
        if (!hasTargetRoleId) return false;
        if (!hasStandPos) return false;
        if (!hasFaceDirection) return false;
        if (!hasTargetPos) return false;
        if (!ShootPos.IsInitialized) return false;
        if (!StandPos.IsInitialized) return false;
        if (!TargetPos.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCSkillShootBarrageFieldNames;
      if (hasShootTime) {
        output.WriteInt64(1, field_names[5], ShootTime);
      }
      if (hasRoleId) {
        output.WriteInt32(2, field_names[2], RoleId);
      }
      if (hasSkillId) {
        output.WriteInt32(3, field_names[6], SkillId);
      }
      if (hasBarrageId) {
        output.WriteInt32(4, field_names[0], BarrageId);
      }
      if (hasShootDirection) {
        output.WriteFloat(5, field_names[3], ShootDirection);
      }
      if (hasShootPos) {
        output.WriteMessage(6, field_names[4], ShootPos);
      }
      if (hasTargetRoleId) {
        output.WriteInt32(7, field_names[9], TargetRoleId);
      }
      if (hasStandPos) {
        output.WriteMessage(8, field_names[7], StandPos);
      }
      if (hasFaceDirection) {
        output.WriteFloat(9, field_names[1], FaceDirection);
      }
      if (hasTargetPos) {
        output.WriteMessage(10, field_names[8], TargetPos);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasShootTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, ShootTime);
        }
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, RoleId);
        }
        if (hasSkillId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, SkillId);
        }
        if (hasBarrageId) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, BarrageId);
        }
        if (hasShootDirection) {
          size += pb::CodedOutputStream.ComputeFloatSize(5, ShootDirection);
        }
        if (hasShootPos) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, ShootPos);
        }
        if (hasTargetRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, TargetRoleId);
        }
        if (hasStandPos) {
          size += pb::CodedOutputStream.ComputeMessageSize(8, StandPos);
        }
        if (hasFaceDirection) {
          size += pb::CodedOutputStream.ComputeFloatSize(9, FaceDirection);
        }
        if (hasTargetPos) {
          size += pb::CodedOutputStream.ComputeMessageSize(10, TargetPos);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_SkillShootBarrage ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_SkillShootBarrage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SkillShootBarrage ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_SkillShootBarrage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SkillShootBarrage ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_SkillShootBarrage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SkillShootBarrage ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_SkillShootBarrage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_SkillShootBarrage ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_SkillShootBarrage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_SkillShootBarrage MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_SkillShootBarrage prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_SkillShootBarrage, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_SkillShootBarrage cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_SkillShootBarrage result;
      
      private Msg_RC_SkillShootBarrage PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_SkillShootBarrage original = result;
          result = new Msg_RC_SkillShootBarrage();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_SkillShootBarrage MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_SkillShootBarrage.Descriptor; }
      }
      
      public override Msg_RC_SkillShootBarrage DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_SkillShootBarrage.DefaultInstance; }
      }
      
      public override Msg_RC_SkillShootBarrage BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_SkillShootBarrage) {
          return MergeFrom((Msg_RC_SkillShootBarrage) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_SkillShootBarrage other) {
        if (other == global::DashFireMessage.Msg_RC_SkillShootBarrage.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasShootTime) {
          ShootTime = other.ShootTime;
        }
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasSkillId) {
          SkillId = other.SkillId;
        }
        if (other.HasBarrageId) {
          BarrageId = other.BarrageId;
        }
        if (other.HasShootDirection) {
          ShootDirection = other.ShootDirection;
        }
        if (other.HasShootPos) {
          MergeShootPos(other.ShootPos);
        }
        if (other.HasTargetRoleId) {
          TargetRoleId = other.TargetRoleId;
        }
        if (other.HasStandPos) {
          MergeStandPos(other.StandPos);
        }
        if (other.HasFaceDirection) {
          FaceDirection = other.FaceDirection;
        }
        if (other.HasTargetPos) {
          MergeTargetPos(other.TargetPos);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCSkillShootBarrageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCSkillShootBarrageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasShootTime = input.ReadInt64(ref result.shootTime_);
              break;
            }
            case 16: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 24: {
              result.hasSkillId = input.ReadInt32(ref result.skillId_);
              break;
            }
            case 32: {
              result.hasBarrageId = input.ReadInt32(ref result.barrageId_);
              break;
            }
            case 45: {
              result.hasShootDirection = input.ReadFloat(ref result.shootDirection_);
              break;
            }
            case 50: {
              global::DashFireMessage.Position.Builder subBuilder = global::DashFireMessage.Position.CreateBuilder();
              if (result.hasShootPos) {
                subBuilder.MergeFrom(ShootPos);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ShootPos = subBuilder.BuildPartial();
              break;
            }
            case 56: {
              result.hasTargetRoleId = input.ReadInt32(ref result.targetRoleId_);
              break;
            }
            case 66: {
              global::DashFireMessage.Position.Builder subBuilder = global::DashFireMessage.Position.CreateBuilder();
              if (result.hasStandPos) {
                subBuilder.MergeFrom(StandPos);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StandPos = subBuilder.BuildPartial();
              break;
            }
            case 77: {
              result.hasFaceDirection = input.ReadFloat(ref result.faceDirection_);
              break;
            }
            case 82: {
              global::DashFireMessage.Position.Builder subBuilder = global::DashFireMessage.Position.CreateBuilder();
              if (result.hasTargetPos) {
                subBuilder.MergeFrom(TargetPos);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetPos = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasShootTime {
        get { return result.hasShootTime; }
      }
      public long ShootTime {
        get { return result.ShootTime; }
        set { SetShootTime(value); }
      }
      public Builder SetShootTime(long value) {
        PrepareBuilder();
        result.hasShootTime = true;
        result.shootTime_ = value;
        return this;
      }
      public Builder ClearShootTime() {
        PrepareBuilder();
        result.hasShootTime = false;
        result.shootTime_ = 0L;
        return this;
      }
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasSkillId {
        get { return result.hasSkillId; }
      }
      public int SkillId {
        get { return result.SkillId; }
        set { SetSkillId(value); }
      }
      public Builder SetSkillId(int value) {
        PrepareBuilder();
        result.hasSkillId = true;
        result.skillId_ = value;
        return this;
      }
      public Builder ClearSkillId() {
        PrepareBuilder();
        result.hasSkillId = false;
        result.skillId_ = 0;
        return this;
      }
      
      public bool HasBarrageId {
        get { return result.hasBarrageId; }
      }
      public int BarrageId {
        get { return result.BarrageId; }
        set { SetBarrageId(value); }
      }
      public Builder SetBarrageId(int value) {
        PrepareBuilder();
        result.hasBarrageId = true;
        result.barrageId_ = value;
        return this;
      }
      public Builder ClearBarrageId() {
        PrepareBuilder();
        result.hasBarrageId = false;
        result.barrageId_ = 0;
        return this;
      }
      
      public bool HasShootDirection {
        get { return result.hasShootDirection; }
      }
      public float ShootDirection {
        get { return result.ShootDirection; }
        set { SetShootDirection(value); }
      }
      public Builder SetShootDirection(float value) {
        PrepareBuilder();
        result.hasShootDirection = true;
        result.shootDirection_ = value;
        return this;
      }
      public Builder ClearShootDirection() {
        PrepareBuilder();
        result.hasShootDirection = false;
        result.shootDirection_ = 0F;
        return this;
      }
      
      public bool HasShootPos {
       get { return result.hasShootPos; }
      }
      public global::DashFireMessage.Position ShootPos {
        get { return result.ShootPos; }
        set { SetShootPos(value); }
      }
      public Builder SetShootPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasShootPos = true;
        result.shootPos_ = value;
        return this;
      }
      public Builder SetShootPos(global::DashFireMessage.Position.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasShootPos = true;
        result.shootPos_ = builderForValue.Build();
        return this;
      }
      public Builder MergeShootPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasShootPos &&
            result.shootPos_ != global::DashFireMessage.Position.DefaultInstance) {
            result.shootPos_ = global::DashFireMessage.Position.CreateBuilder(result.shootPos_).MergeFrom(value).BuildPartial();
        } else {
          result.shootPos_ = value;
        }
        result.hasShootPos = true;
        return this;
      }
      public Builder ClearShootPos() {
        PrepareBuilder();
        result.hasShootPos = false;
        result.shootPos_ = null;
        return this;
      }
      
      public bool HasTargetRoleId {
        get { return result.hasTargetRoleId; }
      }
      public int TargetRoleId {
        get { return result.TargetRoleId; }
        set { SetTargetRoleId(value); }
      }
      public Builder SetTargetRoleId(int value) {
        PrepareBuilder();
        result.hasTargetRoleId = true;
        result.targetRoleId_ = value;
        return this;
      }
      public Builder ClearTargetRoleId() {
        PrepareBuilder();
        result.hasTargetRoleId = false;
        result.targetRoleId_ = 0;
        return this;
      }
      
      public bool HasStandPos {
       get { return result.hasStandPos; }
      }
      public global::DashFireMessage.Position StandPos {
        get { return result.StandPos; }
        set { SetStandPos(value); }
      }
      public Builder SetStandPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStandPos = true;
        result.standPos_ = value;
        return this;
      }
      public Builder SetStandPos(global::DashFireMessage.Position.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStandPos = true;
        result.standPos_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStandPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStandPos &&
            result.standPos_ != global::DashFireMessage.Position.DefaultInstance) {
            result.standPos_ = global::DashFireMessage.Position.CreateBuilder(result.standPos_).MergeFrom(value).BuildPartial();
        } else {
          result.standPos_ = value;
        }
        result.hasStandPos = true;
        return this;
      }
      public Builder ClearStandPos() {
        PrepareBuilder();
        result.hasStandPos = false;
        result.standPos_ = null;
        return this;
      }
      
      public bool HasFaceDirection {
        get { return result.hasFaceDirection; }
      }
      public float FaceDirection {
        get { return result.FaceDirection; }
        set { SetFaceDirection(value); }
      }
      public Builder SetFaceDirection(float value) {
        PrepareBuilder();
        result.hasFaceDirection = true;
        result.faceDirection_ = value;
        return this;
      }
      public Builder ClearFaceDirection() {
        PrepareBuilder();
        result.hasFaceDirection = false;
        result.faceDirection_ = 0F;
        return this;
      }
      
      public bool HasTargetPos {
       get { return result.hasTargetPos; }
      }
      public global::DashFireMessage.Position TargetPos {
        get { return result.TargetPos; }
        set { SetTargetPos(value); }
      }
      public Builder SetTargetPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetPos = true;
        result.targetPos_ = value;
        return this;
      }
      public Builder SetTargetPos(global::DashFireMessage.Position.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetPos = true;
        result.targetPos_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetPos &&
            result.targetPos_ != global::DashFireMessage.Position.DefaultInstance) {
            result.targetPos_ = global::DashFireMessage.Position.CreateBuilder(result.targetPos_).MergeFrom(value).BuildPartial();
        } else {
          result.targetPos_ = value;
        }
        result.hasTargetPos = true;
        return this;
      }
      public Builder ClearTargetPos() {
        PrepareBuilder();
        result.hasTargetPos = false;
        result.targetPos_ = null;
        return this;
      }
    }
    static Msg_RC_SkillShootBarrage() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_WpnShootBarrage : pb::GeneratedMessage<Msg_RC_WpnShootBarrage, Msg_RC_WpnShootBarrage.Builder> {
    private Msg_RC_WpnShootBarrage() { }
    private static readonly Msg_RC_WpnShootBarrage defaultInstance = new Msg_RC_WpnShootBarrage().MakeReadOnly();
    private static readonly string[] _msgRCWpnShootBarrageFieldNames = new string[] { "barrage_id", "role_id", "shoot_direction", "shoot_pos_x", "shoot_pos_y", "shoot_pos_z", "shoot_time", "target_id" };
    private static readonly uint[] _msgRCWpnShootBarrageFieldTags = new uint[] { 32, 16, 45, 53, 61, 69, 8, 24 };
    public static Msg_RC_WpnShootBarrage DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_WpnShootBarrage DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_WpnShootBarrage ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_WpnShootBarrage__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_WpnShootBarrage, Msg_RC_WpnShootBarrage.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_WpnShootBarrage__FieldAccessorTable; }
    }
    
    public const int ShootTimeFieldNumber = 1;
    private bool hasShootTime;
    private long shootTime_;
    public bool HasShootTime {
      get { return hasShootTime; }
    }
    public long ShootTime {
      get { return shootTime_; }
    }
    
    public const int RoleIdFieldNumber = 2;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int TargetIdFieldNumber = 3;
    private bool hasTargetId;
    private int targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public int TargetId {
      get { return targetId_; }
    }
    
    public const int BarrageIdFieldNumber = 4;
    private bool hasBarrageId;
    private int barrageId_;
    public bool HasBarrageId {
      get { return hasBarrageId; }
    }
    public int BarrageId {
      get { return barrageId_; }
    }
    
    public const int ShootDirectionFieldNumber = 5;
    private bool hasShootDirection;
    private float shootDirection_;
    public bool HasShootDirection {
      get { return hasShootDirection; }
    }
    public float ShootDirection {
      get { return shootDirection_; }
    }
    
    public const int ShootPosXFieldNumber = 6;
    private bool hasShootPosX;
    private float shootPosX_;
    public bool HasShootPosX {
      get { return hasShootPosX; }
    }
    public float ShootPosX {
      get { return shootPosX_; }
    }
    
    public const int ShootPosYFieldNumber = 7;
    private bool hasShootPosY;
    private float shootPosY_;
    public bool HasShootPosY {
      get { return hasShootPosY; }
    }
    public float ShootPosY {
      get { return shootPosY_; }
    }
    
    public const int ShootPosZFieldNumber = 8;
    private bool hasShootPosZ;
    private float shootPosZ_;
    public bool HasShootPosZ {
      get { return hasShootPosZ; }
    }
    public float ShootPosZ {
      get { return shootPosZ_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasShootTime) return false;
        if (!hasRoleId) return false;
        if (!hasTargetId) return false;
        if (!hasBarrageId) return false;
        if (!hasShootDirection) return false;
        if (!hasShootPosX) return false;
        if (!hasShootPosY) return false;
        if (!hasShootPosZ) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCWpnShootBarrageFieldNames;
      if (hasShootTime) {
        output.WriteInt64(1, field_names[6], ShootTime);
      }
      if (hasRoleId) {
        output.WriteInt32(2, field_names[1], RoleId);
      }
      if (hasTargetId) {
        output.WriteInt32(3, field_names[7], TargetId);
      }
      if (hasBarrageId) {
        output.WriteInt32(4, field_names[0], BarrageId);
      }
      if (hasShootDirection) {
        output.WriteFloat(5, field_names[2], ShootDirection);
      }
      if (hasShootPosX) {
        output.WriteFloat(6, field_names[3], ShootPosX);
      }
      if (hasShootPosY) {
        output.WriteFloat(7, field_names[4], ShootPosY);
      }
      if (hasShootPosZ) {
        output.WriteFloat(8, field_names[5], ShootPosZ);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasShootTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, ShootTime);
        }
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, RoleId);
        }
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, TargetId);
        }
        if (hasBarrageId) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, BarrageId);
        }
        if (hasShootDirection) {
          size += pb::CodedOutputStream.ComputeFloatSize(5, ShootDirection);
        }
        if (hasShootPosX) {
          size += pb::CodedOutputStream.ComputeFloatSize(6, ShootPosX);
        }
        if (hasShootPosY) {
          size += pb::CodedOutputStream.ComputeFloatSize(7, ShootPosY);
        }
        if (hasShootPosZ) {
          size += pb::CodedOutputStream.ComputeFloatSize(8, ShootPosZ);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_WpnShootBarrage ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_WpnShootBarrage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_WpnShootBarrage ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_WpnShootBarrage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_WpnShootBarrage ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_WpnShootBarrage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_WpnShootBarrage ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_WpnShootBarrage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_WpnShootBarrage ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_WpnShootBarrage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_WpnShootBarrage MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_WpnShootBarrage prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_WpnShootBarrage, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_WpnShootBarrage cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_WpnShootBarrage result;
      
      private Msg_RC_WpnShootBarrage PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_WpnShootBarrage original = result;
          result = new Msg_RC_WpnShootBarrage();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_WpnShootBarrage MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_WpnShootBarrage.Descriptor; }
      }
      
      public override Msg_RC_WpnShootBarrage DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_WpnShootBarrage.DefaultInstance; }
      }
      
      public override Msg_RC_WpnShootBarrage BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_WpnShootBarrage) {
          return MergeFrom((Msg_RC_WpnShootBarrage) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_WpnShootBarrage other) {
        if (other == global::DashFireMessage.Msg_RC_WpnShootBarrage.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasShootTime) {
          ShootTime = other.ShootTime;
        }
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasTargetId) {
          TargetId = other.TargetId;
        }
        if (other.HasBarrageId) {
          BarrageId = other.BarrageId;
        }
        if (other.HasShootDirection) {
          ShootDirection = other.ShootDirection;
        }
        if (other.HasShootPosX) {
          ShootPosX = other.ShootPosX;
        }
        if (other.HasShootPosY) {
          ShootPosY = other.ShootPosY;
        }
        if (other.HasShootPosZ) {
          ShootPosZ = other.ShootPosZ;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCWpnShootBarrageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCWpnShootBarrageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasShootTime = input.ReadInt64(ref result.shootTime_);
              break;
            }
            case 16: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 24: {
              result.hasTargetId = input.ReadInt32(ref result.targetId_);
              break;
            }
            case 32: {
              result.hasBarrageId = input.ReadInt32(ref result.barrageId_);
              break;
            }
            case 45: {
              result.hasShootDirection = input.ReadFloat(ref result.shootDirection_);
              break;
            }
            case 53: {
              result.hasShootPosX = input.ReadFloat(ref result.shootPosX_);
              break;
            }
            case 61: {
              result.hasShootPosY = input.ReadFloat(ref result.shootPosY_);
              break;
            }
            case 69: {
              result.hasShootPosZ = input.ReadFloat(ref result.shootPosZ_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasShootTime {
        get { return result.hasShootTime; }
      }
      public long ShootTime {
        get { return result.ShootTime; }
        set { SetShootTime(value); }
      }
      public Builder SetShootTime(long value) {
        PrepareBuilder();
        result.hasShootTime = true;
        result.shootTime_ = value;
        return this;
      }
      public Builder ClearShootTime() {
        PrepareBuilder();
        result.hasShootTime = false;
        result.shootTime_ = 0L;
        return this;
      }
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasTargetId {
        get { return result.hasTargetId; }
      }
      public int TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(int value) {
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = 0;
        return this;
      }
      
      public bool HasBarrageId {
        get { return result.hasBarrageId; }
      }
      public int BarrageId {
        get { return result.BarrageId; }
        set { SetBarrageId(value); }
      }
      public Builder SetBarrageId(int value) {
        PrepareBuilder();
        result.hasBarrageId = true;
        result.barrageId_ = value;
        return this;
      }
      public Builder ClearBarrageId() {
        PrepareBuilder();
        result.hasBarrageId = false;
        result.barrageId_ = 0;
        return this;
      }
      
      public bool HasShootDirection {
        get { return result.hasShootDirection; }
      }
      public float ShootDirection {
        get { return result.ShootDirection; }
        set { SetShootDirection(value); }
      }
      public Builder SetShootDirection(float value) {
        PrepareBuilder();
        result.hasShootDirection = true;
        result.shootDirection_ = value;
        return this;
      }
      public Builder ClearShootDirection() {
        PrepareBuilder();
        result.hasShootDirection = false;
        result.shootDirection_ = 0F;
        return this;
      }
      
      public bool HasShootPosX {
        get { return result.hasShootPosX; }
      }
      public float ShootPosX {
        get { return result.ShootPosX; }
        set { SetShootPosX(value); }
      }
      public Builder SetShootPosX(float value) {
        PrepareBuilder();
        result.hasShootPosX = true;
        result.shootPosX_ = value;
        return this;
      }
      public Builder ClearShootPosX() {
        PrepareBuilder();
        result.hasShootPosX = false;
        result.shootPosX_ = 0F;
        return this;
      }
      
      public bool HasShootPosY {
        get { return result.hasShootPosY; }
      }
      public float ShootPosY {
        get { return result.ShootPosY; }
        set { SetShootPosY(value); }
      }
      public Builder SetShootPosY(float value) {
        PrepareBuilder();
        result.hasShootPosY = true;
        result.shootPosY_ = value;
        return this;
      }
      public Builder ClearShootPosY() {
        PrepareBuilder();
        result.hasShootPosY = false;
        result.shootPosY_ = 0F;
        return this;
      }
      
      public bool HasShootPosZ {
        get { return result.hasShootPosZ; }
      }
      public float ShootPosZ {
        get { return result.ShootPosZ; }
        set { SetShootPosZ(value); }
      }
      public Builder SetShootPosZ(float value) {
        PrepareBuilder();
        result.hasShootPosZ = true;
        result.shootPosZ_ = value;
        return this;
      }
      public Builder ClearShootPosZ() {
        PrepareBuilder();
        result.hasShootPosZ = false;
        result.shootPosZ_ = 0F;
        return this;
      }
    }
    static Msg_RC_WpnShootBarrage() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CRC_UpdateSkill : pb::GeneratedMessage<Msg_CRC_UpdateSkill, Msg_CRC_UpdateSkill.Builder> {
    private Msg_CRC_UpdateSkill() { }
    private static readonly Msg_CRC_UpdateSkill defaultInstance = new Msg_CRC_UpdateSkill().MakeReadOnly();
    private static readonly string[] _msgCRCUpdateSkillFieldNames = new string[] { "role_id", "skill_index" };
    private static readonly uint[] _msgCRCUpdateSkillFieldTags = new uint[] { 8, 16 };
    public static Msg_CRC_UpdateSkill DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CRC_UpdateSkill DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CRC_UpdateSkill ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_UpdateSkill__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CRC_UpdateSkill, Msg_CRC_UpdateSkill.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_UpdateSkill__FieldAccessorTable; }
    }
    
    public const int RoleIdFieldNumber = 1;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int SkillIndexFieldNumber = 2;
    private bool hasSkillIndex;
    private int skillIndex_;
    public bool HasSkillIndex {
      get { return hasSkillIndex; }
    }
    public int SkillIndex {
      get { return skillIndex_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoleId) return false;
        if (!hasSkillIndex) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRCUpdateSkillFieldNames;
      if (hasRoleId) {
        output.WriteInt32(1, field_names[0], RoleId);
      }
      if (hasSkillIndex) {
        output.WriteInt32(2, field_names[1], SkillIndex);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoleId);
        }
        if (hasSkillIndex) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, SkillIndex);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CRC_UpdateSkill ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_UpdateSkill ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_UpdateSkill ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_UpdateSkill ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_UpdateSkill ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_UpdateSkill ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_UpdateSkill ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CRC_UpdateSkill ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CRC_UpdateSkill ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_UpdateSkill ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CRC_UpdateSkill MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CRC_UpdateSkill prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CRC_UpdateSkill, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CRC_UpdateSkill cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CRC_UpdateSkill result;
      
      private Msg_CRC_UpdateSkill PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CRC_UpdateSkill original = result;
          result = new Msg_CRC_UpdateSkill();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CRC_UpdateSkill MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CRC_UpdateSkill.Descriptor; }
      }
      
      public override Msg_CRC_UpdateSkill DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CRC_UpdateSkill.DefaultInstance; }
      }
      
      public override Msg_CRC_UpdateSkill BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CRC_UpdateSkill) {
          return MergeFrom((Msg_CRC_UpdateSkill) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CRC_UpdateSkill other) {
        if (other == global::DashFireMessage.Msg_CRC_UpdateSkill.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasSkillIndex) {
          SkillIndex = other.SkillIndex;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRCUpdateSkillFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRCUpdateSkillFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 16: {
              result.hasSkillIndex = input.ReadInt32(ref result.skillIndex_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasSkillIndex {
        get { return result.hasSkillIndex; }
      }
      public int SkillIndex {
        get { return result.SkillIndex; }
        set { SetSkillIndex(value); }
      }
      public Builder SetSkillIndex(int value) {
        PrepareBuilder();
        result.hasSkillIndex = true;
        result.skillIndex_ = value;
        return this;
      }
      public Builder ClearSkillIndex() {
        PrepareBuilder();
        result.hasSkillIndex = false;
        result.skillIndex_ = 0;
        return this;
      }
    }
    static Msg_CRC_UpdateSkill() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_SkillCreateSceneLogicInfo : pb::GeneratedMessage<Msg_RC_SkillCreateSceneLogicInfo, Msg_RC_SkillCreateSceneLogicInfo.Builder> {
    private Msg_RC_SkillCreateSceneLogicInfo() { }
    private static readonly Msg_RC_SkillCreateSceneLogicInfo defaultInstance = new Msg_RC_SkillCreateSceneLogicInfo().MakeReadOnly();
    private static readonly string[] _msgRCSkillCreateSceneLogicInfoFieldNames = new string[] { "barrage_id", "role_id", "scenelogicinfo_dataid", "scenelogicinfo_id", "scenelogicinfo_logicid", "skill_id" };
    private static readonly uint[] _msgRCSkillCreateSceneLogicInfoFieldTags = new uint[] { 48, 8, 40, 24, 32, 16 };
    public static Msg_RC_SkillCreateSceneLogicInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_SkillCreateSceneLogicInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_SkillCreateSceneLogicInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SkillCreateSceneLogicInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_SkillCreateSceneLogicInfo, Msg_RC_SkillCreateSceneLogicInfo.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SkillCreateSceneLogicInfo__FieldAccessorTable; }
    }
    
    public const int RoleIdFieldNumber = 1;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int SkillIdFieldNumber = 2;
    private bool hasSkillId;
    private int skillId_;
    public bool HasSkillId {
      get { return hasSkillId; }
    }
    public int SkillId {
      get { return skillId_; }
    }
    
    public const int ScenelogicinfoIdFieldNumber = 3;
    private bool hasScenelogicinfoId;
    private int scenelogicinfoId_;
    public bool HasScenelogicinfoId {
      get { return hasScenelogicinfoId; }
    }
    public int ScenelogicinfoId {
      get { return scenelogicinfoId_; }
    }
    
    public const int ScenelogicinfoLogicidFieldNumber = 4;
    private bool hasScenelogicinfoLogicid;
    private int scenelogicinfoLogicid_;
    public bool HasScenelogicinfoLogicid {
      get { return hasScenelogicinfoLogicid; }
    }
    public int ScenelogicinfoLogicid {
      get { return scenelogicinfoLogicid_; }
    }
    
    public const int ScenelogicinfoDataidFieldNumber = 5;
    private bool hasScenelogicinfoDataid;
    private int scenelogicinfoDataid_;
    public bool HasScenelogicinfoDataid {
      get { return hasScenelogicinfoDataid; }
    }
    public int ScenelogicinfoDataid {
      get { return scenelogicinfoDataid_; }
    }
    
    public const int BarrageIdFieldNumber = 6;
    private bool hasBarrageId;
    private int barrageId_;
    public bool HasBarrageId {
      get { return hasBarrageId; }
    }
    public int BarrageId {
      get { return barrageId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoleId) return false;
        if (!hasSkillId) return false;
        if (!hasScenelogicinfoId) return false;
        if (!hasScenelogicinfoLogicid) return false;
        if (!hasScenelogicinfoDataid) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCSkillCreateSceneLogicInfoFieldNames;
      if (hasRoleId) {
        output.WriteInt32(1, field_names[1], RoleId);
      }
      if (hasSkillId) {
        output.WriteInt32(2, field_names[5], SkillId);
      }
      if (hasScenelogicinfoId) {
        output.WriteInt32(3, field_names[3], ScenelogicinfoId);
      }
      if (hasScenelogicinfoLogicid) {
        output.WriteInt32(4, field_names[4], ScenelogicinfoLogicid);
      }
      if (hasScenelogicinfoDataid) {
        output.WriteInt32(5, field_names[2], ScenelogicinfoDataid);
      }
      if (hasBarrageId) {
        output.WriteInt32(6, field_names[0], BarrageId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoleId);
        }
        if (hasSkillId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, SkillId);
        }
        if (hasScenelogicinfoId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ScenelogicinfoId);
        }
        if (hasScenelogicinfoLogicid) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, ScenelogicinfoLogicid);
        }
        if (hasScenelogicinfoDataid) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, ScenelogicinfoDataid);
        }
        if (hasBarrageId) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, BarrageId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_SkillCreateSceneLogicInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_SkillCreateSceneLogicInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SkillCreateSceneLogicInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_SkillCreateSceneLogicInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SkillCreateSceneLogicInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_SkillCreateSceneLogicInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SkillCreateSceneLogicInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_SkillCreateSceneLogicInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_SkillCreateSceneLogicInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_SkillCreateSceneLogicInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_SkillCreateSceneLogicInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_SkillCreateSceneLogicInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_SkillCreateSceneLogicInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_SkillCreateSceneLogicInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_SkillCreateSceneLogicInfo result;
      
      private Msg_RC_SkillCreateSceneLogicInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_SkillCreateSceneLogicInfo original = result;
          result = new Msg_RC_SkillCreateSceneLogicInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_SkillCreateSceneLogicInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_SkillCreateSceneLogicInfo.Descriptor; }
      }
      
      public override Msg_RC_SkillCreateSceneLogicInfo DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_SkillCreateSceneLogicInfo.DefaultInstance; }
      }
      
      public override Msg_RC_SkillCreateSceneLogicInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_SkillCreateSceneLogicInfo) {
          return MergeFrom((Msg_RC_SkillCreateSceneLogicInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_SkillCreateSceneLogicInfo other) {
        if (other == global::DashFireMessage.Msg_RC_SkillCreateSceneLogicInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasSkillId) {
          SkillId = other.SkillId;
        }
        if (other.HasScenelogicinfoId) {
          ScenelogicinfoId = other.ScenelogicinfoId;
        }
        if (other.HasScenelogicinfoLogicid) {
          ScenelogicinfoLogicid = other.ScenelogicinfoLogicid;
        }
        if (other.HasScenelogicinfoDataid) {
          ScenelogicinfoDataid = other.ScenelogicinfoDataid;
        }
        if (other.HasBarrageId) {
          BarrageId = other.BarrageId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCSkillCreateSceneLogicInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCSkillCreateSceneLogicInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 16: {
              result.hasSkillId = input.ReadInt32(ref result.skillId_);
              break;
            }
            case 24: {
              result.hasScenelogicinfoId = input.ReadInt32(ref result.scenelogicinfoId_);
              break;
            }
            case 32: {
              result.hasScenelogicinfoLogicid = input.ReadInt32(ref result.scenelogicinfoLogicid_);
              break;
            }
            case 40: {
              result.hasScenelogicinfoDataid = input.ReadInt32(ref result.scenelogicinfoDataid_);
              break;
            }
            case 48: {
              result.hasBarrageId = input.ReadInt32(ref result.barrageId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasSkillId {
        get { return result.hasSkillId; }
      }
      public int SkillId {
        get { return result.SkillId; }
        set { SetSkillId(value); }
      }
      public Builder SetSkillId(int value) {
        PrepareBuilder();
        result.hasSkillId = true;
        result.skillId_ = value;
        return this;
      }
      public Builder ClearSkillId() {
        PrepareBuilder();
        result.hasSkillId = false;
        result.skillId_ = 0;
        return this;
      }
      
      public bool HasScenelogicinfoId {
        get { return result.hasScenelogicinfoId; }
      }
      public int ScenelogicinfoId {
        get { return result.ScenelogicinfoId; }
        set { SetScenelogicinfoId(value); }
      }
      public Builder SetScenelogicinfoId(int value) {
        PrepareBuilder();
        result.hasScenelogicinfoId = true;
        result.scenelogicinfoId_ = value;
        return this;
      }
      public Builder ClearScenelogicinfoId() {
        PrepareBuilder();
        result.hasScenelogicinfoId = false;
        result.scenelogicinfoId_ = 0;
        return this;
      }
      
      public bool HasScenelogicinfoLogicid {
        get { return result.hasScenelogicinfoLogicid; }
      }
      public int ScenelogicinfoLogicid {
        get { return result.ScenelogicinfoLogicid; }
        set { SetScenelogicinfoLogicid(value); }
      }
      public Builder SetScenelogicinfoLogicid(int value) {
        PrepareBuilder();
        result.hasScenelogicinfoLogicid = true;
        result.scenelogicinfoLogicid_ = value;
        return this;
      }
      public Builder ClearScenelogicinfoLogicid() {
        PrepareBuilder();
        result.hasScenelogicinfoLogicid = false;
        result.scenelogicinfoLogicid_ = 0;
        return this;
      }
      
      public bool HasScenelogicinfoDataid {
        get { return result.hasScenelogicinfoDataid; }
      }
      public int ScenelogicinfoDataid {
        get { return result.ScenelogicinfoDataid; }
        set { SetScenelogicinfoDataid(value); }
      }
      public Builder SetScenelogicinfoDataid(int value) {
        PrepareBuilder();
        result.hasScenelogicinfoDataid = true;
        result.scenelogicinfoDataid_ = value;
        return this;
      }
      public Builder ClearScenelogicinfoDataid() {
        PrepareBuilder();
        result.hasScenelogicinfoDataid = false;
        result.scenelogicinfoDataid_ = 0;
        return this;
      }
      
      public bool HasBarrageId {
        get { return result.hasBarrageId; }
      }
      public int BarrageId {
        get { return result.BarrageId; }
        set { SetBarrageId(value); }
      }
      public Builder SetBarrageId(int value) {
        PrepareBuilder();
        result.hasBarrageId = true;
        result.barrageId_ = value;
        return this;
      }
      public Builder ClearBarrageId() {
        PrepareBuilder();
        result.hasBarrageId = false;
        result.barrageId_ = 0;
        return this;
      }
    }
    static Msg_RC_SkillCreateSceneLogicInfo() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_SceneLogicShootBarrage : pb::GeneratedMessage<Msg_RC_SceneLogicShootBarrage, Msg_RC_SceneLogicShootBarrage.Builder> {
    private Msg_RC_SceneLogicShootBarrage() { }
    private static readonly Msg_RC_SceneLogicShootBarrage defaultInstance = new Msg_RC_SceneLogicShootBarrage().MakeReadOnly();
    private static readonly string[] _msgRCSceneLogicShootBarrageFieldNames = new string[] { "barrage_id", "face_direction", "role_id", "scenelogicinfo_id", "shoot_direction", "shoot_pos", "shoot_time", "stand_pos", "target_pos", "target_role_id" };
    private static readonly uint[] _msgRCSceneLogicShootBarrageFieldTags = new uint[] { 32, 77, 16, 24, 45, 50, 8, 66, 82, 56 };
    public static Msg_RC_SceneLogicShootBarrage DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_SceneLogicShootBarrage DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_SceneLogicShootBarrage ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SceneLogicShootBarrage__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_SceneLogicShootBarrage, Msg_RC_SceneLogicShootBarrage.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SceneLogicShootBarrage__FieldAccessorTable; }
    }
    
    public const int ShootTimeFieldNumber = 1;
    private bool hasShootTime;
    private long shootTime_;
    public bool HasShootTime {
      get { return hasShootTime; }
    }
    public long ShootTime {
      get { return shootTime_; }
    }
    
    public const int RoleIdFieldNumber = 2;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int ScenelogicinfoIdFieldNumber = 3;
    private bool hasScenelogicinfoId;
    private int scenelogicinfoId_;
    public bool HasScenelogicinfoId {
      get { return hasScenelogicinfoId; }
    }
    public int ScenelogicinfoId {
      get { return scenelogicinfoId_; }
    }
    
    public const int BarrageIdFieldNumber = 4;
    private bool hasBarrageId;
    private int barrageId_;
    public bool HasBarrageId {
      get { return hasBarrageId; }
    }
    public int BarrageId {
      get { return barrageId_; }
    }
    
    public const int ShootDirectionFieldNumber = 5;
    private bool hasShootDirection;
    private float shootDirection_;
    public bool HasShootDirection {
      get { return hasShootDirection; }
    }
    public float ShootDirection {
      get { return shootDirection_; }
    }
    
    public const int ShootPosFieldNumber = 6;
    private bool hasShootPos;
    private global::DashFireMessage.Position shootPos_;
    public bool HasShootPos {
      get { return hasShootPos; }
    }
    public global::DashFireMessage.Position ShootPos {
      get { return shootPos_ ?? global::DashFireMessage.Position.DefaultInstance; }
    }
    
    public const int TargetRoleIdFieldNumber = 7;
    private bool hasTargetRoleId;
    private int targetRoleId_;
    public bool HasTargetRoleId {
      get { return hasTargetRoleId; }
    }
    public int TargetRoleId {
      get { return targetRoleId_; }
    }
    
    public const int StandPosFieldNumber = 8;
    private bool hasStandPos;
    private global::DashFireMessage.Position standPos_;
    public bool HasStandPos {
      get { return hasStandPos; }
    }
    public global::DashFireMessage.Position StandPos {
      get { return standPos_ ?? global::DashFireMessage.Position.DefaultInstance; }
    }
    
    public const int FaceDirectionFieldNumber = 9;
    private bool hasFaceDirection;
    private float faceDirection_;
    public bool HasFaceDirection {
      get { return hasFaceDirection; }
    }
    public float FaceDirection {
      get { return faceDirection_; }
    }
    
    public const int TargetPosFieldNumber = 10;
    private bool hasTargetPos;
    private global::DashFireMessage.Position targetPos_;
    public bool HasTargetPos {
      get { return hasTargetPos; }
    }
    public global::DashFireMessage.Position TargetPos {
      get { return targetPos_ ?? global::DashFireMessage.Position.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasShootTime) return false;
        if (!hasRoleId) return false;
        if (!hasScenelogicinfoId) return false;
        if (!hasBarrageId) return false;
        if (!hasShootDirection) return false;
        if (!hasShootPos) return false;
        if (!hasTargetRoleId) return false;
        if (!hasStandPos) return false;
        if (!hasFaceDirection) return false;
        if (!hasTargetPos) return false;
        if (!ShootPos.IsInitialized) return false;
        if (!StandPos.IsInitialized) return false;
        if (!TargetPos.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCSceneLogicShootBarrageFieldNames;
      if (hasShootTime) {
        output.WriteInt64(1, field_names[6], ShootTime);
      }
      if (hasRoleId) {
        output.WriteInt32(2, field_names[2], RoleId);
      }
      if (hasScenelogicinfoId) {
        output.WriteInt32(3, field_names[3], ScenelogicinfoId);
      }
      if (hasBarrageId) {
        output.WriteInt32(4, field_names[0], BarrageId);
      }
      if (hasShootDirection) {
        output.WriteFloat(5, field_names[4], ShootDirection);
      }
      if (hasShootPos) {
        output.WriteMessage(6, field_names[5], ShootPos);
      }
      if (hasTargetRoleId) {
        output.WriteInt32(7, field_names[9], TargetRoleId);
      }
      if (hasStandPos) {
        output.WriteMessage(8, field_names[7], StandPos);
      }
      if (hasFaceDirection) {
        output.WriteFloat(9, field_names[1], FaceDirection);
      }
      if (hasTargetPos) {
        output.WriteMessage(10, field_names[8], TargetPos);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasShootTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, ShootTime);
        }
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, RoleId);
        }
        if (hasScenelogicinfoId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ScenelogicinfoId);
        }
        if (hasBarrageId) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, BarrageId);
        }
        if (hasShootDirection) {
          size += pb::CodedOutputStream.ComputeFloatSize(5, ShootDirection);
        }
        if (hasShootPos) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, ShootPos);
        }
        if (hasTargetRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, TargetRoleId);
        }
        if (hasStandPos) {
          size += pb::CodedOutputStream.ComputeMessageSize(8, StandPos);
        }
        if (hasFaceDirection) {
          size += pb::CodedOutputStream.ComputeFloatSize(9, FaceDirection);
        }
        if (hasTargetPos) {
          size += pb::CodedOutputStream.ComputeMessageSize(10, TargetPos);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_SceneLogicShootBarrage ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_SceneLogicShootBarrage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SceneLogicShootBarrage ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_SceneLogicShootBarrage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SceneLogicShootBarrage ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_SceneLogicShootBarrage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SceneLogicShootBarrage ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_SceneLogicShootBarrage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_SceneLogicShootBarrage ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_SceneLogicShootBarrage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_SceneLogicShootBarrage MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_SceneLogicShootBarrage prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_SceneLogicShootBarrage, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_SceneLogicShootBarrage cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_SceneLogicShootBarrage result;
      
      private Msg_RC_SceneLogicShootBarrage PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_SceneLogicShootBarrage original = result;
          result = new Msg_RC_SceneLogicShootBarrage();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_SceneLogicShootBarrage MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_SceneLogicShootBarrage.Descriptor; }
      }
      
      public override Msg_RC_SceneLogicShootBarrage DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_SceneLogicShootBarrage.DefaultInstance; }
      }
      
      public override Msg_RC_SceneLogicShootBarrage BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_SceneLogicShootBarrage) {
          return MergeFrom((Msg_RC_SceneLogicShootBarrage) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_SceneLogicShootBarrage other) {
        if (other == global::DashFireMessage.Msg_RC_SceneLogicShootBarrage.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasShootTime) {
          ShootTime = other.ShootTime;
        }
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasScenelogicinfoId) {
          ScenelogicinfoId = other.ScenelogicinfoId;
        }
        if (other.HasBarrageId) {
          BarrageId = other.BarrageId;
        }
        if (other.HasShootDirection) {
          ShootDirection = other.ShootDirection;
        }
        if (other.HasShootPos) {
          MergeShootPos(other.ShootPos);
        }
        if (other.HasTargetRoleId) {
          TargetRoleId = other.TargetRoleId;
        }
        if (other.HasStandPos) {
          MergeStandPos(other.StandPos);
        }
        if (other.HasFaceDirection) {
          FaceDirection = other.FaceDirection;
        }
        if (other.HasTargetPos) {
          MergeTargetPos(other.TargetPos);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCSceneLogicShootBarrageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCSceneLogicShootBarrageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasShootTime = input.ReadInt64(ref result.shootTime_);
              break;
            }
            case 16: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 24: {
              result.hasScenelogicinfoId = input.ReadInt32(ref result.scenelogicinfoId_);
              break;
            }
            case 32: {
              result.hasBarrageId = input.ReadInt32(ref result.barrageId_);
              break;
            }
            case 45: {
              result.hasShootDirection = input.ReadFloat(ref result.shootDirection_);
              break;
            }
            case 50: {
              global::DashFireMessage.Position.Builder subBuilder = global::DashFireMessage.Position.CreateBuilder();
              if (result.hasShootPos) {
                subBuilder.MergeFrom(ShootPos);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ShootPos = subBuilder.BuildPartial();
              break;
            }
            case 56: {
              result.hasTargetRoleId = input.ReadInt32(ref result.targetRoleId_);
              break;
            }
            case 66: {
              global::DashFireMessage.Position.Builder subBuilder = global::DashFireMessage.Position.CreateBuilder();
              if (result.hasStandPos) {
                subBuilder.MergeFrom(StandPos);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StandPos = subBuilder.BuildPartial();
              break;
            }
            case 77: {
              result.hasFaceDirection = input.ReadFloat(ref result.faceDirection_);
              break;
            }
            case 82: {
              global::DashFireMessage.Position.Builder subBuilder = global::DashFireMessage.Position.CreateBuilder();
              if (result.hasTargetPos) {
                subBuilder.MergeFrom(TargetPos);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetPos = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasShootTime {
        get { return result.hasShootTime; }
      }
      public long ShootTime {
        get { return result.ShootTime; }
        set { SetShootTime(value); }
      }
      public Builder SetShootTime(long value) {
        PrepareBuilder();
        result.hasShootTime = true;
        result.shootTime_ = value;
        return this;
      }
      public Builder ClearShootTime() {
        PrepareBuilder();
        result.hasShootTime = false;
        result.shootTime_ = 0L;
        return this;
      }
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasScenelogicinfoId {
        get { return result.hasScenelogicinfoId; }
      }
      public int ScenelogicinfoId {
        get { return result.ScenelogicinfoId; }
        set { SetScenelogicinfoId(value); }
      }
      public Builder SetScenelogicinfoId(int value) {
        PrepareBuilder();
        result.hasScenelogicinfoId = true;
        result.scenelogicinfoId_ = value;
        return this;
      }
      public Builder ClearScenelogicinfoId() {
        PrepareBuilder();
        result.hasScenelogicinfoId = false;
        result.scenelogicinfoId_ = 0;
        return this;
      }
      
      public bool HasBarrageId {
        get { return result.hasBarrageId; }
      }
      public int BarrageId {
        get { return result.BarrageId; }
        set { SetBarrageId(value); }
      }
      public Builder SetBarrageId(int value) {
        PrepareBuilder();
        result.hasBarrageId = true;
        result.barrageId_ = value;
        return this;
      }
      public Builder ClearBarrageId() {
        PrepareBuilder();
        result.hasBarrageId = false;
        result.barrageId_ = 0;
        return this;
      }
      
      public bool HasShootDirection {
        get { return result.hasShootDirection; }
      }
      public float ShootDirection {
        get { return result.ShootDirection; }
        set { SetShootDirection(value); }
      }
      public Builder SetShootDirection(float value) {
        PrepareBuilder();
        result.hasShootDirection = true;
        result.shootDirection_ = value;
        return this;
      }
      public Builder ClearShootDirection() {
        PrepareBuilder();
        result.hasShootDirection = false;
        result.shootDirection_ = 0F;
        return this;
      }
      
      public bool HasShootPos {
       get { return result.hasShootPos; }
      }
      public global::DashFireMessage.Position ShootPos {
        get { return result.ShootPos; }
        set { SetShootPos(value); }
      }
      public Builder SetShootPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasShootPos = true;
        result.shootPos_ = value;
        return this;
      }
      public Builder SetShootPos(global::DashFireMessage.Position.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasShootPos = true;
        result.shootPos_ = builderForValue.Build();
        return this;
      }
      public Builder MergeShootPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasShootPos &&
            result.shootPos_ != global::DashFireMessage.Position.DefaultInstance) {
            result.shootPos_ = global::DashFireMessage.Position.CreateBuilder(result.shootPos_).MergeFrom(value).BuildPartial();
        } else {
          result.shootPos_ = value;
        }
        result.hasShootPos = true;
        return this;
      }
      public Builder ClearShootPos() {
        PrepareBuilder();
        result.hasShootPos = false;
        result.shootPos_ = null;
        return this;
      }
      
      public bool HasTargetRoleId {
        get { return result.hasTargetRoleId; }
      }
      public int TargetRoleId {
        get { return result.TargetRoleId; }
        set { SetTargetRoleId(value); }
      }
      public Builder SetTargetRoleId(int value) {
        PrepareBuilder();
        result.hasTargetRoleId = true;
        result.targetRoleId_ = value;
        return this;
      }
      public Builder ClearTargetRoleId() {
        PrepareBuilder();
        result.hasTargetRoleId = false;
        result.targetRoleId_ = 0;
        return this;
      }
      
      public bool HasStandPos {
       get { return result.hasStandPos; }
      }
      public global::DashFireMessage.Position StandPos {
        get { return result.StandPos; }
        set { SetStandPos(value); }
      }
      public Builder SetStandPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStandPos = true;
        result.standPos_ = value;
        return this;
      }
      public Builder SetStandPos(global::DashFireMessage.Position.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStandPos = true;
        result.standPos_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStandPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStandPos &&
            result.standPos_ != global::DashFireMessage.Position.DefaultInstance) {
            result.standPos_ = global::DashFireMessage.Position.CreateBuilder(result.standPos_).MergeFrom(value).BuildPartial();
        } else {
          result.standPos_ = value;
        }
        result.hasStandPos = true;
        return this;
      }
      public Builder ClearStandPos() {
        PrepareBuilder();
        result.hasStandPos = false;
        result.standPos_ = null;
        return this;
      }
      
      public bool HasFaceDirection {
        get { return result.hasFaceDirection; }
      }
      public float FaceDirection {
        get { return result.FaceDirection; }
        set { SetFaceDirection(value); }
      }
      public Builder SetFaceDirection(float value) {
        PrepareBuilder();
        result.hasFaceDirection = true;
        result.faceDirection_ = value;
        return this;
      }
      public Builder ClearFaceDirection() {
        PrepareBuilder();
        result.hasFaceDirection = false;
        result.faceDirection_ = 0F;
        return this;
      }
      
      public bool HasTargetPos {
       get { return result.hasTargetPos; }
      }
      public global::DashFireMessage.Position TargetPos {
        get { return result.TargetPos; }
        set { SetTargetPos(value); }
      }
      public Builder SetTargetPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetPos = true;
        result.targetPos_ = value;
        return this;
      }
      public Builder SetTargetPos(global::DashFireMessage.Position.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetPos = true;
        result.targetPos_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetPos &&
            result.targetPos_ != global::DashFireMessage.Position.DefaultInstance) {
            result.targetPos_ = global::DashFireMessage.Position.CreateBuilder(result.targetPos_).MergeFrom(value).BuildPartial();
        } else {
          result.targetPos_ = value;
        }
        result.hasTargetPos = true;
        return this;
      }
      public Builder ClearTargetPos() {
        PrepareBuilder();
        result.hasTargetPos = false;
        result.targetPos_ = null;
        return this;
      }
    }
    static Msg_RC_SceneLogicShootBarrage() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_SendImpactToEntity : pb::GeneratedMessage<Msg_RC_SendImpactToEntity, Msg_RC_SendImpactToEntity.Builder> {
    private Msg_RC_SendImpactToEntity() { }
    private static readonly Msg_RC_SendImpactToEntity defaultInstance = new Msg_RC_SendImpactToEntity().MakeReadOnly();
    private static readonly string[] _msgRCSendImpactToEntityFieldNames = new string[] { "impact_id", "sender_id", "sender_pos", "sender_type", "skill_id", "start_time", "target_id", "target_pos" };
    private static readonly uint[] _msgRCSendImpactToEntityFieldTags = new uint[] { 32, 8, 50, 16, 40, 56, 24, 66 };
    public static Msg_RC_SendImpactToEntity DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_SendImpactToEntity DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_SendImpactToEntity ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SendImpactToEntity__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_SendImpactToEntity, Msg_RC_SendImpactToEntity.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SendImpactToEntity__FieldAccessorTable; }
    }
    
    public const int SenderIdFieldNumber = 1;
    private bool hasSenderId;
    private int senderId_;
    public bool HasSenderId {
      get { return hasSenderId; }
    }
    public int SenderId {
      get { return senderId_; }
    }
    
    public const int SenderTypeFieldNumber = 2;
    private bool hasSenderType;
    private int senderType_;
    public bool HasSenderType {
      get { return hasSenderType; }
    }
    public int SenderType {
      get { return senderType_; }
    }
    
    public const int TargetIdFieldNumber = 3;
    private bool hasTargetId;
    private int targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public int TargetId {
      get { return targetId_; }
    }
    
    public const int ImpactIdFieldNumber = 4;
    private bool hasImpactId;
    private int impactId_;
    public bool HasImpactId {
      get { return hasImpactId; }
    }
    public int ImpactId {
      get { return impactId_; }
    }
    
    public const int SkillIdFieldNumber = 5;
    private bool hasSkillId;
    private int skillId_;
    public bool HasSkillId {
      get { return hasSkillId; }
    }
    public int SkillId {
      get { return skillId_; }
    }
    
    public const int SenderPosFieldNumber = 6;
    private bool hasSenderPos;
    private global::DashFireMessage.Position senderPos_;
    public bool HasSenderPos {
      get { return hasSenderPos; }
    }
    public global::DashFireMessage.Position SenderPos {
      get { return senderPos_ ?? global::DashFireMessage.Position.DefaultInstance; }
    }
    
    public const int StartTimeFieldNumber = 7;
    private bool hasStartTime;
    private long startTime_;
    public bool HasStartTime {
      get { return hasStartTime; }
    }
    public long StartTime {
      get { return startTime_; }
    }
    
    public const int TargetPosFieldNumber = 8;
    private bool hasTargetPos;
    private global::DashFireMessage.Position targetPos_;
    public bool HasTargetPos {
      get { return hasTargetPos; }
    }
    public global::DashFireMessage.Position TargetPos {
      get { return targetPos_ ?? global::DashFireMessage.Position.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSenderId) return false;
        if (!hasSenderType) return false;
        if (!hasTargetId) return false;
        if (!hasImpactId) return false;
        if (!hasSkillId) return false;
        if (!hasSenderPos) return false;
        if (!hasStartTime) return false;
        if (!SenderPos.IsInitialized) return false;
        if (HasTargetPos) {
          if (!TargetPos.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCSendImpactToEntityFieldNames;
      if (hasSenderId) {
        output.WriteInt32(1, field_names[1], SenderId);
      }
      if (hasSenderType) {
        output.WriteInt32(2, field_names[3], SenderType);
      }
      if (hasTargetId) {
        output.WriteInt32(3, field_names[6], TargetId);
      }
      if (hasImpactId) {
        output.WriteInt32(4, field_names[0], ImpactId);
      }
      if (hasSkillId) {
        output.WriteInt32(5, field_names[4], SkillId);
      }
      if (hasSenderPos) {
        output.WriteMessage(6, field_names[2], SenderPos);
      }
      if (hasStartTime) {
        output.WriteInt64(7, field_names[5], StartTime);
      }
      if (hasTargetPos) {
        output.WriteMessage(8, field_names[7], TargetPos);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSenderId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, SenderId);
        }
        if (hasSenderType) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, SenderType);
        }
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, TargetId);
        }
        if (hasImpactId) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, ImpactId);
        }
        if (hasSkillId) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, SkillId);
        }
        if (hasSenderPos) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, SenderPos);
        }
        if (hasStartTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(7, StartTime);
        }
        if (hasTargetPos) {
          size += pb::CodedOutputStream.ComputeMessageSize(8, TargetPos);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_SendImpactToEntity ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_SendImpactToEntity ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SendImpactToEntity ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_SendImpactToEntity ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SendImpactToEntity ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_SendImpactToEntity ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SendImpactToEntity ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_SendImpactToEntity ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_SendImpactToEntity ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_SendImpactToEntity ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_SendImpactToEntity MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_SendImpactToEntity prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_SendImpactToEntity, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_SendImpactToEntity cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_SendImpactToEntity result;
      
      private Msg_RC_SendImpactToEntity PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_SendImpactToEntity original = result;
          result = new Msg_RC_SendImpactToEntity();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_SendImpactToEntity MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_SendImpactToEntity.Descriptor; }
      }
      
      public override Msg_RC_SendImpactToEntity DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_SendImpactToEntity.DefaultInstance; }
      }
      
      public override Msg_RC_SendImpactToEntity BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_SendImpactToEntity) {
          return MergeFrom((Msg_RC_SendImpactToEntity) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_SendImpactToEntity other) {
        if (other == global::DashFireMessage.Msg_RC_SendImpactToEntity.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSenderId) {
          SenderId = other.SenderId;
        }
        if (other.HasSenderType) {
          SenderType = other.SenderType;
        }
        if (other.HasTargetId) {
          TargetId = other.TargetId;
        }
        if (other.HasImpactId) {
          ImpactId = other.ImpactId;
        }
        if (other.HasSkillId) {
          SkillId = other.SkillId;
        }
        if (other.HasSenderPos) {
          MergeSenderPos(other.SenderPos);
        }
        if (other.HasStartTime) {
          StartTime = other.StartTime;
        }
        if (other.HasTargetPos) {
          MergeTargetPos(other.TargetPos);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCSendImpactToEntityFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCSendImpactToEntityFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSenderId = input.ReadInt32(ref result.senderId_);
              break;
            }
            case 16: {
              result.hasSenderType = input.ReadInt32(ref result.senderType_);
              break;
            }
            case 24: {
              result.hasTargetId = input.ReadInt32(ref result.targetId_);
              break;
            }
            case 32: {
              result.hasImpactId = input.ReadInt32(ref result.impactId_);
              break;
            }
            case 40: {
              result.hasSkillId = input.ReadInt32(ref result.skillId_);
              break;
            }
            case 50: {
              global::DashFireMessage.Position.Builder subBuilder = global::DashFireMessage.Position.CreateBuilder();
              if (result.hasSenderPos) {
                subBuilder.MergeFrom(SenderPos);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SenderPos = subBuilder.BuildPartial();
              break;
            }
            case 56: {
              result.hasStartTime = input.ReadInt64(ref result.startTime_);
              break;
            }
            case 66: {
              global::DashFireMessage.Position.Builder subBuilder = global::DashFireMessage.Position.CreateBuilder();
              if (result.hasTargetPos) {
                subBuilder.MergeFrom(TargetPos);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetPos = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSenderId {
        get { return result.hasSenderId; }
      }
      public int SenderId {
        get { return result.SenderId; }
        set { SetSenderId(value); }
      }
      public Builder SetSenderId(int value) {
        PrepareBuilder();
        result.hasSenderId = true;
        result.senderId_ = value;
        return this;
      }
      public Builder ClearSenderId() {
        PrepareBuilder();
        result.hasSenderId = false;
        result.senderId_ = 0;
        return this;
      }
      
      public bool HasSenderType {
        get { return result.hasSenderType; }
      }
      public int SenderType {
        get { return result.SenderType; }
        set { SetSenderType(value); }
      }
      public Builder SetSenderType(int value) {
        PrepareBuilder();
        result.hasSenderType = true;
        result.senderType_ = value;
        return this;
      }
      public Builder ClearSenderType() {
        PrepareBuilder();
        result.hasSenderType = false;
        result.senderType_ = 0;
        return this;
      }
      
      public bool HasTargetId {
        get { return result.hasTargetId; }
      }
      public int TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(int value) {
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = 0;
        return this;
      }
      
      public bool HasImpactId {
        get { return result.hasImpactId; }
      }
      public int ImpactId {
        get { return result.ImpactId; }
        set { SetImpactId(value); }
      }
      public Builder SetImpactId(int value) {
        PrepareBuilder();
        result.hasImpactId = true;
        result.impactId_ = value;
        return this;
      }
      public Builder ClearImpactId() {
        PrepareBuilder();
        result.hasImpactId = false;
        result.impactId_ = 0;
        return this;
      }
      
      public bool HasSkillId {
        get { return result.hasSkillId; }
      }
      public int SkillId {
        get { return result.SkillId; }
        set { SetSkillId(value); }
      }
      public Builder SetSkillId(int value) {
        PrepareBuilder();
        result.hasSkillId = true;
        result.skillId_ = value;
        return this;
      }
      public Builder ClearSkillId() {
        PrepareBuilder();
        result.hasSkillId = false;
        result.skillId_ = 0;
        return this;
      }
      
      public bool HasSenderPos {
       get { return result.hasSenderPos; }
      }
      public global::DashFireMessage.Position SenderPos {
        get { return result.SenderPos; }
        set { SetSenderPos(value); }
      }
      public Builder SetSenderPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSenderPos = true;
        result.senderPos_ = value;
        return this;
      }
      public Builder SetSenderPos(global::DashFireMessage.Position.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSenderPos = true;
        result.senderPos_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSenderPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSenderPos &&
            result.senderPos_ != global::DashFireMessage.Position.DefaultInstance) {
            result.senderPos_ = global::DashFireMessage.Position.CreateBuilder(result.senderPos_).MergeFrom(value).BuildPartial();
        } else {
          result.senderPos_ = value;
        }
        result.hasSenderPos = true;
        return this;
      }
      public Builder ClearSenderPos() {
        PrepareBuilder();
        result.hasSenderPos = false;
        result.senderPos_ = null;
        return this;
      }
      
      public bool HasStartTime {
        get { return result.hasStartTime; }
      }
      public long StartTime {
        get { return result.StartTime; }
        set { SetStartTime(value); }
      }
      public Builder SetStartTime(long value) {
        PrepareBuilder();
        result.hasStartTime = true;
        result.startTime_ = value;
        return this;
      }
      public Builder ClearStartTime() {
        PrepareBuilder();
        result.hasStartTime = false;
        result.startTime_ = 0L;
        return this;
      }
      
      public bool HasTargetPos {
       get { return result.hasTargetPos; }
      }
      public global::DashFireMessage.Position TargetPos {
        get { return result.TargetPos; }
        set { SetTargetPos(value); }
      }
      public Builder SetTargetPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetPos = true;
        result.targetPos_ = value;
        return this;
      }
      public Builder SetTargetPos(global::DashFireMessage.Position.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetPos = true;
        result.targetPos_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetPos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetPos &&
            result.targetPos_ != global::DashFireMessage.Position.DefaultInstance) {
            result.targetPos_ = global::DashFireMessage.Position.CreateBuilder(result.targetPos_).MergeFrom(value).BuildPartial();
        } else {
          result.targetPos_ = value;
        }
        result.hasTargetPos = true;
        return this;
      }
      public Builder ClearTargetPos() {
        PrepareBuilder();
        result.hasTargetPos = false;
        result.targetPos_ = null;
        return this;
      }
    }
    static Msg_RC_SendImpactToEntity() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_RemoveImpactFromEntity : pb::GeneratedMessage<Msg_RC_RemoveImpactFromEntity, Msg_RC_RemoveImpactFromEntity.Builder> {
    private Msg_RC_RemoveImpactFromEntity() { }
    private static readonly Msg_RC_RemoveImpactFromEntity defaultInstance = new Msg_RC_RemoveImpactFromEntity().MakeReadOnly();
    private static readonly string[] _msgRCRemoveImpactFromEntityFieldNames = new string[] { "impact_id", "role_id" };
    private static readonly uint[] _msgRCRemoveImpactFromEntityFieldTags = new uint[] { 16, 8 };
    public static Msg_RC_RemoveImpactFromEntity DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_RemoveImpactFromEntity DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_RemoveImpactFromEntity ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_RemoveImpactFromEntity__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_RemoveImpactFromEntity, Msg_RC_RemoveImpactFromEntity.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_RemoveImpactFromEntity__FieldAccessorTable; }
    }
    
    public const int RoleIdFieldNumber = 1;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int ImpactIdFieldNumber = 2;
    private bool hasImpactId;
    private int impactId_;
    public bool HasImpactId {
      get { return hasImpactId; }
    }
    public int ImpactId {
      get { return impactId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoleId) return false;
        if (!hasImpactId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCRemoveImpactFromEntityFieldNames;
      if (hasRoleId) {
        output.WriteInt32(1, field_names[1], RoleId);
      }
      if (hasImpactId) {
        output.WriteInt32(2, field_names[0], ImpactId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoleId);
        }
        if (hasImpactId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, ImpactId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_RemoveImpactFromEntity ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_RemoveImpactFromEntity ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_RemoveImpactFromEntity ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_RemoveImpactFromEntity ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_RemoveImpactFromEntity ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_RemoveImpactFromEntity ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_RemoveImpactFromEntity ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_RemoveImpactFromEntity ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_RemoveImpactFromEntity ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_RemoveImpactFromEntity ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_RemoveImpactFromEntity MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_RemoveImpactFromEntity prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_RemoveImpactFromEntity, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_RemoveImpactFromEntity cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_RemoveImpactFromEntity result;
      
      private Msg_RC_RemoveImpactFromEntity PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_RemoveImpactFromEntity original = result;
          result = new Msg_RC_RemoveImpactFromEntity();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_RemoveImpactFromEntity MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_RemoveImpactFromEntity.Descriptor; }
      }
      
      public override Msg_RC_RemoveImpactFromEntity DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_RemoveImpactFromEntity.DefaultInstance; }
      }
      
      public override Msg_RC_RemoveImpactFromEntity BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_RemoveImpactFromEntity) {
          return MergeFrom((Msg_RC_RemoveImpactFromEntity) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_RemoveImpactFromEntity other) {
        if (other == global::DashFireMessage.Msg_RC_RemoveImpactFromEntity.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasImpactId) {
          ImpactId = other.ImpactId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCRemoveImpactFromEntityFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCRemoveImpactFromEntityFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 16: {
              result.hasImpactId = input.ReadInt32(ref result.impactId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasImpactId {
        get { return result.hasImpactId; }
      }
      public int ImpactId {
        get { return result.ImpactId; }
        set { SetImpactId(value); }
      }
      public Builder SetImpactId(int value) {
        PrepareBuilder();
        result.hasImpactId = true;
        result.impactId_ = value;
        return this;
      }
      public Builder ClearImpactId() {
        PrepareBuilder();
        result.hasImpactId = false;
        result.impactId_ = 0;
        return this;
      }
    }
    static Msg_RC_RemoveImpactFromEntity() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CRC_BeginSlowDown : pb::GeneratedMessage<Msg_CRC_BeginSlowDown, Msg_CRC_BeginSlowDown.Builder> {
    private Msg_CRC_BeginSlowDown() { }
    private static readonly Msg_CRC_BeginSlowDown defaultInstance = new Msg_CRC_BeginSlowDown().MakeReadOnly();
    private static readonly string[] _msgCRCBeginSlowDownFieldNames = new string[] { "action_id", "role_id", "send_time" };
    private static readonly uint[] _msgCRCBeginSlowDownFieldTags = new uint[] { 8, 24, 16 };
    public static Msg_CRC_BeginSlowDown DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CRC_BeginSlowDown DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CRC_BeginSlowDown ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_BeginSlowDown__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CRC_BeginSlowDown, Msg_CRC_BeginSlowDown.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_BeginSlowDown__FieldAccessorTable; }
    }
    
    public const int ActionIdFieldNumber = 1;
    private bool hasActionId;
    private long actionId_;
    public bool HasActionId {
      get { return hasActionId; }
    }
    public long ActionId {
      get { return actionId_; }
    }
    
    public const int SendTimeFieldNumber = 2;
    private bool hasSendTime;
    private long sendTime_;
    public bool HasSendTime {
      get { return hasSendTime; }
    }
    public long SendTime {
      get { return sendTime_; }
    }
    
    public const int RoleIdFieldNumber = 3;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRCBeginSlowDownFieldNames;
      if (hasActionId) {
        output.WriteInt64(1, field_names[0], ActionId);
      }
      if (hasSendTime) {
        output.WriteInt64(2, field_names[2], SendTime);
      }
      if (hasRoleId) {
        output.WriteInt32(3, field_names[1], RoleId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasActionId) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, ActionId);
        }
        if (hasSendTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, SendTime);
        }
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, RoleId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CRC_BeginSlowDown ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_BeginSlowDown ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_BeginSlowDown ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_BeginSlowDown ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_BeginSlowDown ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_BeginSlowDown ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_BeginSlowDown ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CRC_BeginSlowDown ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CRC_BeginSlowDown ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_BeginSlowDown ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CRC_BeginSlowDown MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CRC_BeginSlowDown prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CRC_BeginSlowDown, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CRC_BeginSlowDown cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CRC_BeginSlowDown result;
      
      private Msg_CRC_BeginSlowDown PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CRC_BeginSlowDown original = result;
          result = new Msg_CRC_BeginSlowDown();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CRC_BeginSlowDown MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CRC_BeginSlowDown.Descriptor; }
      }
      
      public override Msg_CRC_BeginSlowDown DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CRC_BeginSlowDown.DefaultInstance; }
      }
      
      public override Msg_CRC_BeginSlowDown BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CRC_BeginSlowDown) {
          return MergeFrom((Msg_CRC_BeginSlowDown) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CRC_BeginSlowDown other) {
        if (other == global::DashFireMessage.Msg_CRC_BeginSlowDown.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasActionId) {
          ActionId = other.ActionId;
        }
        if (other.HasSendTime) {
          SendTime = other.SendTime;
        }
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRCBeginSlowDownFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRCBeginSlowDownFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasActionId = input.ReadInt64(ref result.actionId_);
              break;
            }
            case 16: {
              result.hasSendTime = input.ReadInt64(ref result.sendTime_);
              break;
            }
            case 24: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasActionId {
        get { return result.hasActionId; }
      }
      public long ActionId {
        get { return result.ActionId; }
        set { SetActionId(value); }
      }
      public Builder SetActionId(long value) {
        PrepareBuilder();
        result.hasActionId = true;
        result.actionId_ = value;
        return this;
      }
      public Builder ClearActionId() {
        PrepareBuilder();
        result.hasActionId = false;
        result.actionId_ = 0L;
        return this;
      }
      
      public bool HasSendTime {
        get { return result.hasSendTime; }
      }
      public long SendTime {
        get { return result.SendTime; }
        set { SetSendTime(value); }
      }
      public Builder SetSendTime(long value) {
        PrepareBuilder();
        result.hasSendTime = true;
        result.sendTime_ = value;
        return this;
      }
      public Builder ClearSendTime() {
        PrepareBuilder();
        result.hasSendTime = false;
        result.sendTime_ = 0L;
        return this;
      }
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
    }
    static Msg_CRC_BeginSlowDown() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CRC_EndSlowDown : pb::GeneratedMessage<Msg_CRC_EndSlowDown, Msg_CRC_EndSlowDown.Builder> {
    private Msg_CRC_EndSlowDown() { }
    private static readonly Msg_CRC_EndSlowDown defaultInstance = new Msg_CRC_EndSlowDown().MakeReadOnly();
    private static readonly string[] _msgCRCEndSlowDownFieldNames = new string[] { "action_id", "role_id", "send_time" };
    private static readonly uint[] _msgCRCEndSlowDownFieldTags = new uint[] { 8, 24, 16 };
    public static Msg_CRC_EndSlowDown DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CRC_EndSlowDown DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CRC_EndSlowDown ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_EndSlowDown__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CRC_EndSlowDown, Msg_CRC_EndSlowDown.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_EndSlowDown__FieldAccessorTable; }
    }
    
    public const int ActionIdFieldNumber = 1;
    private bool hasActionId;
    private long actionId_;
    public bool HasActionId {
      get { return hasActionId; }
    }
    public long ActionId {
      get { return actionId_; }
    }
    
    public const int SendTimeFieldNumber = 2;
    private bool hasSendTime;
    private long sendTime_;
    public bool HasSendTime {
      get { return hasSendTime; }
    }
    public long SendTime {
      get { return sendTime_; }
    }
    
    public const int RoleIdFieldNumber = 3;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRCEndSlowDownFieldNames;
      if (hasActionId) {
        output.WriteInt64(1, field_names[0], ActionId);
      }
      if (hasSendTime) {
        output.WriteInt64(2, field_names[2], SendTime);
      }
      if (hasRoleId) {
        output.WriteInt32(3, field_names[1], RoleId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasActionId) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, ActionId);
        }
        if (hasSendTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, SendTime);
        }
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, RoleId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CRC_EndSlowDown ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_EndSlowDown ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_EndSlowDown ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_EndSlowDown ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_EndSlowDown ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_EndSlowDown ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_EndSlowDown ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CRC_EndSlowDown ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CRC_EndSlowDown ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_EndSlowDown ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CRC_EndSlowDown MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CRC_EndSlowDown prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CRC_EndSlowDown, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CRC_EndSlowDown cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CRC_EndSlowDown result;
      
      private Msg_CRC_EndSlowDown PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CRC_EndSlowDown original = result;
          result = new Msg_CRC_EndSlowDown();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CRC_EndSlowDown MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CRC_EndSlowDown.Descriptor; }
      }
      
      public override Msg_CRC_EndSlowDown DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CRC_EndSlowDown.DefaultInstance; }
      }
      
      public override Msg_CRC_EndSlowDown BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CRC_EndSlowDown) {
          return MergeFrom((Msg_CRC_EndSlowDown) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CRC_EndSlowDown other) {
        if (other == global::DashFireMessage.Msg_CRC_EndSlowDown.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasActionId) {
          ActionId = other.ActionId;
        }
        if (other.HasSendTime) {
          SendTime = other.SendTime;
        }
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRCEndSlowDownFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRCEndSlowDownFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasActionId = input.ReadInt64(ref result.actionId_);
              break;
            }
            case 16: {
              result.hasSendTime = input.ReadInt64(ref result.sendTime_);
              break;
            }
            case 24: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasActionId {
        get { return result.hasActionId; }
      }
      public long ActionId {
        get { return result.ActionId; }
        set { SetActionId(value); }
      }
      public Builder SetActionId(long value) {
        PrepareBuilder();
        result.hasActionId = true;
        result.actionId_ = value;
        return this;
      }
      public Builder ClearActionId() {
        PrepareBuilder();
        result.hasActionId = false;
        result.actionId_ = 0L;
        return this;
      }
      
      public bool HasSendTime {
        get { return result.hasSendTime; }
      }
      public long SendTime {
        get { return result.SendTime; }
        set { SetSendTime(value); }
      }
      public Builder SetSendTime(long value) {
        PrepareBuilder();
        result.hasSendTime = true;
        result.sendTime_ = value;
        return this;
      }
      public Builder ClearSendTime() {
        PrepareBuilder();
        result.hasSendTime = false;
        result.sendTime_ = 0L;
        return this;
      }
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
    }
    static Msg_CRC_EndSlowDown() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_CreateLandMark : pb::GeneratedMessage<Msg_RC_CreateLandMark, Msg_RC_CreateLandMark.Builder> {
    private Msg_RC_CreateLandMark() { }
    private static readonly Msg_RC_CreateLandMark defaultInstance = new Msg_RC_CreateLandMark().MakeReadOnly();
    private static readonly string[] _msgRCCreateLandMarkFieldNames = new string[] { "mark_effect", "mark_life_time", "mark_num", "mark_pos_list", "role_id", "skill_id" };
    private static readonly uint[] _msgRCCreateLandMarkFieldTags = new uint[] { 50, 45, 24, 34, 8, 16 };
    public static Msg_RC_CreateLandMark DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_CreateLandMark DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_CreateLandMark ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_CreateLandMark__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_CreateLandMark, Msg_RC_CreateLandMark.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_CreateLandMark__FieldAccessorTable; }
    }
    
    public const int RoleIdFieldNumber = 1;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int SkillIdFieldNumber = 2;
    private bool hasSkillId;
    private int skillId_;
    public bool HasSkillId {
      get { return hasSkillId; }
    }
    public int SkillId {
      get { return skillId_; }
    }
    
    public const int MarkNumFieldNumber = 3;
    private bool hasMarkNum;
    private int markNum_;
    public bool HasMarkNum {
      get { return hasMarkNum; }
    }
    public int MarkNum {
      get { return markNum_; }
    }
    
    public const int MarkPosListFieldNumber = 4;
    private pbc::PopsicleList<global::DashFireMessage.Position> markPosList_ = new pbc::PopsicleList<global::DashFireMessage.Position>();
    public scg::IList<global::DashFireMessage.Position> MarkPosListList {
      get { return markPosList_; }
    }
    public int MarkPosListCount {
      get { return markPosList_.Count; }
    }
    public global::DashFireMessage.Position GetMarkPosList(int index) {
      return markPosList_[index];
    }
    
    public const int MarkLifeTimeFieldNumber = 5;
    private pbc::PopsicleList<float> markLifeTime_ = new pbc::PopsicleList<float>();
    public scg::IList<float> MarkLifeTimeList {
      get { return pbc::Lists.AsReadOnly(markLifeTime_); }
    }
    public int MarkLifeTimeCount {
      get { return markLifeTime_.Count; }
    }
    public float GetMarkLifeTime(int index) {
      return markLifeTime_[index];
    }
    
    public const int MarkEffectFieldNumber = 6;
    private bool hasMarkEffect;
    private string markEffect_ = "";
    public bool HasMarkEffect {
      get { return hasMarkEffect; }
    }
    public string MarkEffect {
      get { return markEffect_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoleId) return false;
        if (!hasMarkNum) return false;
        if (!hasMarkEffect) return false;
        foreach (global::DashFireMessage.Position element in MarkPosListList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCCreateLandMarkFieldNames;
      if (hasRoleId) {
        output.WriteInt32(1, field_names[4], RoleId);
      }
      if (hasSkillId) {
        output.WriteInt32(2, field_names[5], SkillId);
      }
      if (hasMarkNum) {
        output.WriteInt32(3, field_names[2], MarkNum);
      }
      if (markPosList_.Count > 0) {
        output.WriteMessageArray(4, field_names[3], markPosList_);
      }
      if (markLifeTime_.Count > 0) {
        output.WriteFloatArray(5, field_names[1], markLifeTime_);
      }
      if (hasMarkEffect) {
        output.WriteString(6, field_names[0], MarkEffect);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoleId);
        }
        if (hasSkillId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, SkillId);
        }
        if (hasMarkNum) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, MarkNum);
        }
        foreach (global::DashFireMessage.Position element in MarkPosListList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        {
          int dataSize = 0;
          dataSize = 4 * markLifeTime_.Count;
          size += dataSize;
          size += 1 * markLifeTime_.Count;
        }
        if (hasMarkEffect) {
          size += pb::CodedOutputStream.ComputeStringSize(6, MarkEffect);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_CreateLandMark ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_CreateLandMark ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_CreateLandMark ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_CreateLandMark ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_CreateLandMark ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_CreateLandMark ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_CreateLandMark ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_CreateLandMark ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_CreateLandMark ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_CreateLandMark ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_CreateLandMark MakeReadOnly() {
      markPosList_.MakeReadOnly();
      markLifeTime_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_CreateLandMark prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_CreateLandMark, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_CreateLandMark cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_CreateLandMark result;
      
      private Msg_RC_CreateLandMark PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_CreateLandMark original = result;
          result = new Msg_RC_CreateLandMark();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_CreateLandMark MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_CreateLandMark.Descriptor; }
      }
      
      public override Msg_RC_CreateLandMark DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_CreateLandMark.DefaultInstance; }
      }
      
      public override Msg_RC_CreateLandMark BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_CreateLandMark) {
          return MergeFrom((Msg_RC_CreateLandMark) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_CreateLandMark other) {
        if (other == global::DashFireMessage.Msg_RC_CreateLandMark.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasSkillId) {
          SkillId = other.SkillId;
        }
        if (other.HasMarkNum) {
          MarkNum = other.MarkNum;
        }
        if (other.markPosList_.Count != 0) {
          result.markPosList_.Add(other.markPosList_);
        }
        if (other.markLifeTime_.Count != 0) {
          result.markLifeTime_.Add(other.markLifeTime_);
        }
        if (other.HasMarkEffect) {
          MarkEffect = other.MarkEffect;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCCreateLandMarkFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCCreateLandMarkFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 16: {
              result.hasSkillId = input.ReadInt32(ref result.skillId_);
              break;
            }
            case 24: {
              result.hasMarkNum = input.ReadInt32(ref result.markNum_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.markPosList_, global::DashFireMessage.Position.DefaultInstance, extensionRegistry);
              break;
            }
            case 42:
            case 45: {
              input.ReadFloatArray(tag, field_name, result.markLifeTime_);
              break;
            }
            case 50: {
              result.hasMarkEffect = input.ReadString(ref result.markEffect_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasSkillId {
        get { return result.hasSkillId; }
      }
      public int SkillId {
        get { return result.SkillId; }
        set { SetSkillId(value); }
      }
      public Builder SetSkillId(int value) {
        PrepareBuilder();
        result.hasSkillId = true;
        result.skillId_ = value;
        return this;
      }
      public Builder ClearSkillId() {
        PrepareBuilder();
        result.hasSkillId = false;
        result.skillId_ = 0;
        return this;
      }
      
      public bool HasMarkNum {
        get { return result.hasMarkNum; }
      }
      public int MarkNum {
        get { return result.MarkNum; }
        set { SetMarkNum(value); }
      }
      public Builder SetMarkNum(int value) {
        PrepareBuilder();
        result.hasMarkNum = true;
        result.markNum_ = value;
        return this;
      }
      public Builder ClearMarkNum() {
        PrepareBuilder();
        result.hasMarkNum = false;
        result.markNum_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::DashFireMessage.Position> MarkPosListList {
        get { return PrepareBuilder().markPosList_; }
      }
      public int MarkPosListCount {
        get { return result.MarkPosListCount; }
      }
      public global::DashFireMessage.Position GetMarkPosList(int index) {
        return result.GetMarkPosList(index);
      }
      public Builder SetMarkPosList(int index, global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.markPosList_[index] = value;
        return this;
      }
      public Builder SetMarkPosList(int index, global::DashFireMessage.Position.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.markPosList_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMarkPosList(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.markPosList_.Add(value);
        return this;
      }
      public Builder AddMarkPosList(global::DashFireMessage.Position.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.markPosList_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMarkPosList(scg::IEnumerable<global::DashFireMessage.Position> values) {
        PrepareBuilder();
        result.markPosList_.Add(values);
        return this;
      }
      public Builder ClearMarkPosList() {
        PrepareBuilder();
        result.markPosList_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<float> MarkLifeTimeList {
        get { return PrepareBuilder().markLifeTime_; }
      }
      public int MarkLifeTimeCount {
        get { return result.MarkLifeTimeCount; }
      }
      public float GetMarkLifeTime(int index) {
        return result.GetMarkLifeTime(index);
      }
      public Builder SetMarkLifeTime(int index, float value) {
        PrepareBuilder();
        result.markLifeTime_[index] = value;
        return this;
      }
      public Builder AddMarkLifeTime(float value) {
        PrepareBuilder();
        result.markLifeTime_.Add(value);
        return this;
      }
      public Builder AddRangeMarkLifeTime(scg::IEnumerable<float> values) {
        PrepareBuilder();
        result.markLifeTime_.Add(values);
        return this;
      }
      public Builder ClearMarkLifeTime() {
        PrepareBuilder();
        result.markLifeTime_.Clear();
        return this;
      }
      
      public bool HasMarkEffect {
        get { return result.hasMarkEffect; }
      }
      public string MarkEffect {
        get { return result.MarkEffect; }
        set { SetMarkEffect(value); }
      }
      public Builder SetMarkEffect(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMarkEffect = true;
        result.markEffect_ = value;
        return this;
      }
      public Builder ClearMarkEffect() {
        PrepareBuilder();
        result.hasMarkEffect = false;
        result.markEffect_ = "";
        return this;
      }
    }
    static Msg_RC_CreateLandMark() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CRC_WeaponStatus : pb::GeneratedMessage<Msg_CRC_WeaponStatus, Msg_CRC_WeaponStatus.Builder> {
    private Msg_CRC_WeaponStatus() { }
    private static readonly Msg_CRC_WeaponStatus defaultInstance = new Msg_CRC_WeaponStatus().MakeReadOnly();
    private static readonly string[] _msgCRCWeaponStatusFieldNames = new string[] { "action_id", "role_id", "send_time" };
    private static readonly uint[] _msgCRCWeaponStatusFieldTags = new uint[] { 8, 24, 16 };
    public static Msg_CRC_WeaponStatus DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CRC_WeaponStatus DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CRC_WeaponStatus ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_WeaponStatus__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CRC_WeaponStatus, Msg_CRC_WeaponStatus.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_WeaponStatus__FieldAccessorTable; }
    }
    
    public const int ActionIdFieldNumber = 1;
    private bool hasActionId;
    private long actionId_;
    public bool HasActionId {
      get { return hasActionId; }
    }
    public long ActionId {
      get { return actionId_; }
    }
    
    public const int SendTimeFieldNumber = 2;
    private bool hasSendTime;
    private long sendTime_;
    public bool HasSendTime {
      get { return hasSendTime; }
    }
    public long SendTime {
      get { return sendTime_; }
    }
    
    public const int RoleIdFieldNumber = 3;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRCWeaponStatusFieldNames;
      if (hasActionId) {
        output.WriteInt64(1, field_names[0], ActionId);
      }
      if (hasSendTime) {
        output.WriteInt64(2, field_names[2], SendTime);
      }
      if (hasRoleId) {
        output.WriteInt32(3, field_names[1], RoleId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasActionId) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, ActionId);
        }
        if (hasSendTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, SendTime);
        }
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, RoleId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CRC_WeaponStatus ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_WeaponStatus ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_WeaponStatus ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_WeaponStatus ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_WeaponStatus ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_WeaponStatus ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_WeaponStatus ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CRC_WeaponStatus ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CRC_WeaponStatus ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_WeaponStatus ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CRC_WeaponStatus MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CRC_WeaponStatus prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CRC_WeaponStatus, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CRC_WeaponStatus cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CRC_WeaponStatus result;
      
      private Msg_CRC_WeaponStatus PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CRC_WeaponStatus original = result;
          result = new Msg_CRC_WeaponStatus();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CRC_WeaponStatus MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CRC_WeaponStatus.Descriptor; }
      }
      
      public override Msg_CRC_WeaponStatus DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CRC_WeaponStatus.DefaultInstance; }
      }
      
      public override Msg_CRC_WeaponStatus BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CRC_WeaponStatus) {
          return MergeFrom((Msg_CRC_WeaponStatus) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CRC_WeaponStatus other) {
        if (other == global::DashFireMessage.Msg_CRC_WeaponStatus.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasActionId) {
          ActionId = other.ActionId;
        }
        if (other.HasSendTime) {
          SendTime = other.SendTime;
        }
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRCWeaponStatusFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRCWeaponStatusFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasActionId = input.ReadInt64(ref result.actionId_);
              break;
            }
            case 16: {
              result.hasSendTime = input.ReadInt64(ref result.sendTime_);
              break;
            }
            case 24: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasActionId {
        get { return result.hasActionId; }
      }
      public long ActionId {
        get { return result.ActionId; }
        set { SetActionId(value); }
      }
      public Builder SetActionId(long value) {
        PrepareBuilder();
        result.hasActionId = true;
        result.actionId_ = value;
        return this;
      }
      public Builder ClearActionId() {
        PrepareBuilder();
        result.hasActionId = false;
        result.actionId_ = 0L;
        return this;
      }
      
      public bool HasSendTime {
        get { return result.hasSendTime; }
      }
      public long SendTime {
        get { return result.SendTime; }
        set { SetSendTime(value); }
      }
      public Builder SetSendTime(long value) {
        PrepareBuilder();
        result.hasSendTime = true;
        result.sendTime_ = value;
        return this;
      }
      public Builder ClearSendTime() {
        PrepareBuilder();
        result.hasSendTime = false;
        result.sendTime_ = 0L;
        return this;
      }
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
    }
    static Msg_CRC_WeaponStatus() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CRC_MousePos : pb::GeneratedMessage<Msg_CRC_MousePos, Msg_CRC_MousePos.Builder> {
    private Msg_CRC_MousePos() { }
    private static readonly Msg_CRC_MousePos defaultInstance = new Msg_CRC_MousePos().MakeReadOnly();
    private static readonly string[] _msgCRCMousePosFieldNames = new string[] { "mouse_pos", "role_id", "send_time" };
    private static readonly uint[] _msgCRCMousePosFieldTags = new uint[] { 82, 8, 16 };
    public static Msg_CRC_MousePos DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CRC_MousePos DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CRC_MousePos ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_MousePos__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CRC_MousePos, Msg_CRC_MousePos.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_MousePos__FieldAccessorTable; }
    }
    
    public const int RoleIdFieldNumber = 1;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int SendTimeFieldNumber = 2;
    private bool hasSendTime;
    private long sendTime_;
    public bool HasSendTime {
      get { return hasSendTime; }
    }
    public long SendTime {
      get { return sendTime_; }
    }
    
    public const int MousePosFieldNumber = 10;
    private bool hasMousePos;
    private global::DashFireMessage.Position mousePos_;
    public bool HasMousePos {
      get { return hasMousePos; }
    }
    public global::DashFireMessage.Position MousePos {
      get { return mousePos_ ?? global::DashFireMessage.Position.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMousePos) return false;
        if (!MousePos.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRCMousePosFieldNames;
      if (hasRoleId) {
        output.WriteInt32(1, field_names[1], RoleId);
      }
      if (hasSendTime) {
        output.WriteInt64(2, field_names[2], SendTime);
      }
      if (hasMousePos) {
        output.WriteMessage(10, field_names[0], MousePos);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoleId);
        }
        if (hasSendTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, SendTime);
        }
        if (hasMousePos) {
          size += pb::CodedOutputStream.ComputeMessageSize(10, MousePos);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CRC_MousePos ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_MousePos ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_MousePos ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_MousePos ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_MousePos ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_MousePos ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_MousePos ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CRC_MousePos ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CRC_MousePos ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_MousePos ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CRC_MousePos MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CRC_MousePos prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CRC_MousePos, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CRC_MousePos cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CRC_MousePos result;
      
      private Msg_CRC_MousePos PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CRC_MousePos original = result;
          result = new Msg_CRC_MousePos();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CRC_MousePos MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CRC_MousePos.Descriptor; }
      }
      
      public override Msg_CRC_MousePos DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CRC_MousePos.DefaultInstance; }
      }
      
      public override Msg_CRC_MousePos BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CRC_MousePos) {
          return MergeFrom((Msg_CRC_MousePos) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CRC_MousePos other) {
        if (other == global::DashFireMessage.Msg_CRC_MousePos.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasSendTime) {
          SendTime = other.SendTime;
        }
        if (other.HasMousePos) {
          MergeMousePos(other.MousePos);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRCMousePosFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRCMousePosFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 16: {
              result.hasSendTime = input.ReadInt64(ref result.sendTime_);
              break;
            }
            case 82: {
              global::DashFireMessage.Position.Builder subBuilder = global::DashFireMessage.Position.CreateBuilder();
              if (result.hasMousePos) {
                subBuilder.MergeFrom(MousePos);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MousePos = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasSendTime {
        get { return result.hasSendTime; }
      }
      public long SendTime {
        get { return result.SendTime; }
        set { SetSendTime(value); }
      }
      public Builder SetSendTime(long value) {
        PrepareBuilder();
        result.hasSendTime = true;
        result.sendTime_ = value;
        return this;
      }
      public Builder ClearSendTime() {
        PrepareBuilder();
        result.hasSendTime = false;
        result.sendTime_ = 0L;
        return this;
      }
      
      public bool HasMousePos {
       get { return result.hasMousePos; }
      }
      public global::DashFireMessage.Position MousePos {
        get { return result.MousePos; }
        set { SetMousePos(value); }
      }
      public Builder SetMousePos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMousePos = true;
        result.mousePos_ = value;
        return this;
      }
      public Builder SetMousePos(global::DashFireMessage.Position.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMousePos = true;
        result.mousePos_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMousePos(global::DashFireMessage.Position value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMousePos &&
            result.mousePos_ != global::DashFireMessage.Position.DefaultInstance) {
            result.mousePos_ = global::DashFireMessage.Position.CreateBuilder(result.mousePos_).MergeFrom(value).BuildPartial();
        } else {
          result.mousePos_ = value;
        }
        result.hasMousePos = true;
        return this;
      }
      public Builder ClearMousePos() {
        PrepareBuilder();
        result.hasMousePos = false;
        result.mousePos_ = null;
        return this;
      }
    }
    static Msg_CRC_MousePos() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_ChangeWeaponSync : pb::GeneratedMessage<Msg_RC_ChangeWeaponSync, Msg_RC_ChangeWeaponSync.Builder> {
    private Msg_RC_ChangeWeaponSync() { }
    private static readonly Msg_RC_ChangeWeaponSync defaultInstance = new Msg_RC_ChangeWeaponSync().MakeReadOnly();
    private static readonly string[] _msgRCChangeWeaponSyncFieldNames = new string[] { "role_id", "weapon_id" };
    private static readonly uint[] _msgRCChangeWeaponSyncFieldTags = new uint[] { 8, 16 };
    public static Msg_RC_ChangeWeaponSync DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_ChangeWeaponSync DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_ChangeWeaponSync ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_ChangeWeaponSync__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_ChangeWeaponSync, Msg_RC_ChangeWeaponSync.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_ChangeWeaponSync__FieldAccessorTable; }
    }
    
    public const int RoleIdFieldNumber = 1;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int WeaponIdFieldNumber = 2;
    private bool hasWeaponId;
    private int weaponId_;
    public bool HasWeaponId {
      get { return hasWeaponId; }
    }
    public int WeaponId {
      get { return weaponId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoleId) return false;
        if (!hasWeaponId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCChangeWeaponSyncFieldNames;
      if (hasRoleId) {
        output.WriteInt32(1, field_names[0], RoleId);
      }
      if (hasWeaponId) {
        output.WriteInt32(2, field_names[1], WeaponId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoleId);
        }
        if (hasWeaponId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, WeaponId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_ChangeWeaponSync ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_ChangeWeaponSync ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_ChangeWeaponSync ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_ChangeWeaponSync ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_ChangeWeaponSync ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_ChangeWeaponSync ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_ChangeWeaponSync ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_ChangeWeaponSync ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_ChangeWeaponSync ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_ChangeWeaponSync ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_ChangeWeaponSync MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_ChangeWeaponSync prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_ChangeWeaponSync, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_ChangeWeaponSync cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_ChangeWeaponSync result;
      
      private Msg_RC_ChangeWeaponSync PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_ChangeWeaponSync original = result;
          result = new Msg_RC_ChangeWeaponSync();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_ChangeWeaponSync MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_ChangeWeaponSync.Descriptor; }
      }
      
      public override Msg_RC_ChangeWeaponSync DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_ChangeWeaponSync.DefaultInstance; }
      }
      
      public override Msg_RC_ChangeWeaponSync BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_ChangeWeaponSync) {
          return MergeFrom((Msg_RC_ChangeWeaponSync) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_ChangeWeaponSync other) {
        if (other == global::DashFireMessage.Msg_RC_ChangeWeaponSync.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasWeaponId) {
          WeaponId = other.WeaponId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCChangeWeaponSyncFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCChangeWeaponSyncFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 16: {
              result.hasWeaponId = input.ReadInt32(ref result.weaponId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasWeaponId {
        get { return result.hasWeaponId; }
      }
      public int WeaponId {
        get { return result.WeaponId; }
        set { SetWeaponId(value); }
      }
      public Builder SetWeaponId(int value) {
        PrepareBuilder();
        result.hasWeaponId = true;
        result.weaponId_ = value;
        return this;
      }
      public Builder ClearWeaponId() {
        PrepareBuilder();
        result.hasWeaponId = false;
        result.weaponId_ = 0;
        return this;
      }
    }
    static Msg_RC_ChangeWeaponSync() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CR_KeyPress : pb::GeneratedMessage<Msg_CR_KeyPress, Msg_CR_KeyPress.Builder> {
    private Msg_CR_KeyPress() { }
    private static readonly Msg_CR_KeyPress defaultInstance = new Msg_CR_KeyPress().MakeReadOnly();
    private static readonly string[] _msgCRKeyPressFieldNames = new string[] { "is_pressed", "key" };
    private static readonly uint[] _msgCRKeyPressFieldTags = new uint[] { 16, 10 };
    public static Msg_CR_KeyPress DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CR_KeyPress DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CR_KeyPress ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CR_KeyPress__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CR_KeyPress, Msg_CR_KeyPress.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CR_KeyPress__FieldAccessorTable; }
    }
    
    public const int KeyFieldNumber = 1;
    private bool hasKey;
    private string key_ = "";
    public bool HasKey {
      get { return hasKey; }
    }
    public string Key {
      get { return key_; }
    }
    
    public const int IsPressedFieldNumber = 2;
    private bool hasIsPressed;
    private bool isPressed_;
    public bool HasIsPressed {
      get { return hasIsPressed; }
    }
    public bool IsPressed {
      get { return isPressed_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasKey) return false;
        if (!hasIsPressed) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRKeyPressFieldNames;
      if (hasKey) {
        output.WriteString(1, field_names[1], Key);
      }
      if (hasIsPressed) {
        output.WriteBool(2, field_names[0], IsPressed);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasKey) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Key);
        }
        if (hasIsPressed) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, IsPressed);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CR_KeyPress ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CR_KeyPress ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_KeyPress ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CR_KeyPress ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_KeyPress ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CR_KeyPress ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_KeyPress ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CR_KeyPress ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CR_KeyPress ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CR_KeyPress ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CR_KeyPress MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CR_KeyPress prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CR_KeyPress, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CR_KeyPress cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CR_KeyPress result;
      
      private Msg_CR_KeyPress PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CR_KeyPress original = result;
          result = new Msg_CR_KeyPress();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CR_KeyPress MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CR_KeyPress.Descriptor; }
      }
      
      public override Msg_CR_KeyPress DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CR_KeyPress.DefaultInstance; }
      }
      
      public override Msg_CR_KeyPress BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CR_KeyPress) {
          return MergeFrom((Msg_CR_KeyPress) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CR_KeyPress other) {
        if (other == global::DashFireMessage.Msg_CR_KeyPress.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasKey) {
          Key = other.Key;
        }
        if (other.HasIsPressed) {
          IsPressed = other.IsPressed;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRKeyPressFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRKeyPressFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasKey = input.ReadString(ref result.key_);
              break;
            }
            case 16: {
              result.hasIsPressed = input.ReadBool(ref result.isPressed_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasKey {
        get { return result.hasKey; }
      }
      public string Key {
        get { return result.Key; }
        set { SetKey(value); }
      }
      public Builder SetKey(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder ClearKey() {
        PrepareBuilder();
        result.hasKey = false;
        result.key_ = "";
        return this;
      }
      
      public bool HasIsPressed {
        get { return result.hasIsPressed; }
      }
      public bool IsPressed {
        get { return result.IsPressed; }
        set { SetIsPressed(value); }
      }
      public Builder SetIsPressed(bool value) {
        PrepareBuilder();
        result.hasIsPressed = true;
        result.isPressed_ = value;
        return this;
      }
      public Builder ClearIsPressed() {
        PrepareBuilder();
        result.hasIsPressed = false;
        result.isPressed_ = false;
        return this;
      }
    }
    static Msg_CR_KeyPress() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CRC_InteractObject : pb::GeneratedMessage<Msg_CRC_InteractObject, Msg_CRC_InteractObject.Builder> {
    private Msg_CRC_InteractObject() { }
    private static readonly Msg_CRC_InteractObject defaultInstance = new Msg_CRC_InteractObject().MakeReadOnly();
    private static readonly string[] _msgCRCInteractObjectFieldNames = new string[] { "initiator_id", "receiver_id" };
    private static readonly uint[] _msgCRCInteractObjectFieldTags = new uint[] { 8, 16 };
    public static Msg_CRC_InteractObject DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CRC_InteractObject DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CRC_InteractObject ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_InteractObject__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CRC_InteractObject, Msg_CRC_InteractObject.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_InteractObject__FieldAccessorTable; }
    }
    
    public const int InitiatorIdFieldNumber = 1;
    private bool hasInitiatorId;
    private int initiatorId_;
    public bool HasInitiatorId {
      get { return hasInitiatorId; }
    }
    public int InitiatorId {
      get { return initiatorId_; }
    }
    
    public const int ReceiverIdFieldNumber = 2;
    private bool hasReceiverId;
    private int receiverId_;
    public bool HasReceiverId {
      get { return hasReceiverId; }
    }
    public int ReceiverId {
      get { return receiverId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasReceiverId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRCInteractObjectFieldNames;
      if (hasInitiatorId) {
        output.WriteInt32(1, field_names[0], InitiatorId);
      }
      if (hasReceiverId) {
        output.WriteInt32(2, field_names[1], ReceiverId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasInitiatorId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, InitiatorId);
        }
        if (hasReceiverId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, ReceiverId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CRC_InteractObject ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_InteractObject ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_InteractObject ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_InteractObject ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_InteractObject ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_InteractObject ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_InteractObject ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CRC_InteractObject ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CRC_InteractObject ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_InteractObject ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CRC_InteractObject MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CRC_InteractObject prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CRC_InteractObject, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CRC_InteractObject cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CRC_InteractObject result;
      
      private Msg_CRC_InteractObject PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CRC_InteractObject original = result;
          result = new Msg_CRC_InteractObject();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CRC_InteractObject MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CRC_InteractObject.Descriptor; }
      }
      
      public override Msg_CRC_InteractObject DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CRC_InteractObject.DefaultInstance; }
      }
      
      public override Msg_CRC_InteractObject BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CRC_InteractObject) {
          return MergeFrom((Msg_CRC_InteractObject) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CRC_InteractObject other) {
        if (other == global::DashFireMessage.Msg_CRC_InteractObject.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasInitiatorId) {
          InitiatorId = other.InitiatorId;
        }
        if (other.HasReceiverId) {
          ReceiverId = other.ReceiverId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRCInteractObjectFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRCInteractObjectFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasInitiatorId = input.ReadInt32(ref result.initiatorId_);
              break;
            }
            case 16: {
              result.hasReceiverId = input.ReadInt32(ref result.receiverId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasInitiatorId {
        get { return result.hasInitiatorId; }
      }
      public int InitiatorId {
        get { return result.InitiatorId; }
        set { SetInitiatorId(value); }
      }
      public Builder SetInitiatorId(int value) {
        PrepareBuilder();
        result.hasInitiatorId = true;
        result.initiatorId_ = value;
        return this;
      }
      public Builder ClearInitiatorId() {
        PrepareBuilder();
        result.hasInitiatorId = false;
        result.initiatorId_ = 0;
        return this;
      }
      
      public bool HasReceiverId {
        get { return result.hasReceiverId; }
      }
      public int ReceiverId {
        get { return result.ReceiverId; }
        set { SetReceiverId(value); }
      }
      public Builder SetReceiverId(int value) {
        PrepareBuilder();
        result.hasReceiverId = true;
        result.receiverId_ = value;
        return this;
      }
      public Builder ClearReceiverId() {
        PrepareBuilder();
        result.hasReceiverId = false;
        result.receiverId_ = 0;
        return this;
      }
    }
    static Msg_CRC_InteractObject() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_ControlObject : pb::GeneratedMessage<Msg_RC_ControlObject, Msg_RC_ControlObject.Builder> {
    private Msg_RC_ControlObject() { }
    private static readonly Msg_RC_ControlObject defaultInstance = new Msg_RC_ControlObject().MakeReadOnly();
    private static readonly string[] _msgRCControlObjectFieldNames = new string[] { "control_or_release", "controlled_id", "controller_id" };
    private static readonly uint[] _msgRCControlObjectFieldTags = new uint[] { 24, 16, 8 };
    public static Msg_RC_ControlObject DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_ControlObject DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_ControlObject ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_ControlObject__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_ControlObject, Msg_RC_ControlObject.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_ControlObject__FieldAccessorTable; }
    }
    
    public const int ControllerIdFieldNumber = 1;
    private bool hasControllerId;
    private int controllerId_;
    public bool HasControllerId {
      get { return hasControllerId; }
    }
    public int ControllerId {
      get { return controllerId_; }
    }
    
    public const int ControlledIdFieldNumber = 2;
    private bool hasControlledId;
    private int controlledId_;
    public bool HasControlledId {
      get { return hasControlledId; }
    }
    public int ControlledId {
      get { return controlledId_; }
    }
    
    public const int ControlOrReleaseFieldNumber = 3;
    private bool hasControlOrRelease;
    private bool controlOrRelease_;
    public bool HasControlOrRelease {
      get { return hasControlOrRelease; }
    }
    public bool ControlOrRelease {
      get { return controlOrRelease_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasControllerId) return false;
        if (!hasControlledId) return false;
        if (!hasControlOrRelease) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCControlObjectFieldNames;
      if (hasControllerId) {
        output.WriteInt32(1, field_names[2], ControllerId);
      }
      if (hasControlledId) {
        output.WriteInt32(2, field_names[1], ControlledId);
      }
      if (hasControlOrRelease) {
        output.WriteBool(3, field_names[0], ControlOrRelease);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasControllerId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, ControllerId);
        }
        if (hasControlledId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, ControlledId);
        }
        if (hasControlOrRelease) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, ControlOrRelease);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_ControlObject ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_ControlObject ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_ControlObject ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_ControlObject ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_ControlObject ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_ControlObject ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_ControlObject ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_ControlObject ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_ControlObject ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_ControlObject ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_ControlObject MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_ControlObject prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_ControlObject, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_ControlObject cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_ControlObject result;
      
      private Msg_RC_ControlObject PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_ControlObject original = result;
          result = new Msg_RC_ControlObject();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_ControlObject MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_ControlObject.Descriptor; }
      }
      
      public override Msg_RC_ControlObject DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_ControlObject.DefaultInstance; }
      }
      
      public override Msg_RC_ControlObject BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_ControlObject) {
          return MergeFrom((Msg_RC_ControlObject) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_ControlObject other) {
        if (other == global::DashFireMessage.Msg_RC_ControlObject.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasControllerId) {
          ControllerId = other.ControllerId;
        }
        if (other.HasControlledId) {
          ControlledId = other.ControlledId;
        }
        if (other.HasControlOrRelease) {
          ControlOrRelease = other.ControlOrRelease;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCControlObjectFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCControlObjectFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasControllerId = input.ReadInt32(ref result.controllerId_);
              break;
            }
            case 16: {
              result.hasControlledId = input.ReadInt32(ref result.controlledId_);
              break;
            }
            case 24: {
              result.hasControlOrRelease = input.ReadBool(ref result.controlOrRelease_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasControllerId {
        get { return result.hasControllerId; }
      }
      public int ControllerId {
        get { return result.ControllerId; }
        set { SetControllerId(value); }
      }
      public Builder SetControllerId(int value) {
        PrepareBuilder();
        result.hasControllerId = true;
        result.controllerId_ = value;
        return this;
      }
      public Builder ClearControllerId() {
        PrepareBuilder();
        result.hasControllerId = false;
        result.controllerId_ = 0;
        return this;
      }
      
      public bool HasControlledId {
        get { return result.hasControlledId; }
      }
      public int ControlledId {
        get { return result.ControlledId; }
        set { SetControlledId(value); }
      }
      public Builder SetControlledId(int value) {
        PrepareBuilder();
        result.hasControlledId = true;
        result.controlledId_ = value;
        return this;
      }
      public Builder ClearControlledId() {
        PrepareBuilder();
        result.hasControlledId = false;
        result.controlledId_ = 0;
        return this;
      }
      
      public bool HasControlOrRelease {
        get { return result.hasControlOrRelease; }
      }
      public bool ControlOrRelease {
        get { return result.ControlOrRelease; }
        set { SetControlOrRelease(value); }
      }
      public Builder SetControlOrRelease(bool value) {
        PrepareBuilder();
        result.hasControlOrRelease = true;
        result.controlOrRelease_ = value;
        return this;
      }
      public Builder ClearControlOrRelease() {
        PrepareBuilder();
        result.hasControlOrRelease = false;
        result.controlOrRelease_ = false;
        return this;
      }
    }
    static Msg_RC_ControlObject() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_RefreshItemSkills : pb::GeneratedMessage<Msg_RC_RefreshItemSkills, Msg_RC_RefreshItemSkills.Builder> {
    private Msg_RC_RefreshItemSkills() { }
    private static readonly Msg_RC_RefreshItemSkills defaultInstance = new Msg_RC_RefreshItemSkills().MakeReadOnly();
    private static readonly string[] _msgRCRefreshItemSkillsFieldNames = new string[] { "role_id" };
    private static readonly uint[] _msgRCRefreshItemSkillsFieldTags = new uint[] { 8 };
    public static Msg_RC_RefreshItemSkills DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_RefreshItemSkills DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_RefreshItemSkills ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_RefreshItemSkills__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_RefreshItemSkills, Msg_RC_RefreshItemSkills.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_RefreshItemSkills__FieldAccessorTable; }
    }
    
    public const int RoleIdFieldNumber = 1;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoleId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCRefreshItemSkillsFieldNames;
      if (hasRoleId) {
        output.WriteInt32(1, field_names[0], RoleId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoleId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_RefreshItemSkills ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_RefreshItemSkills ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_RefreshItemSkills ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_RefreshItemSkills ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_RefreshItemSkills ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_RefreshItemSkills ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_RefreshItemSkills ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_RefreshItemSkills ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_RefreshItemSkills ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_RefreshItemSkills ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_RefreshItemSkills MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_RefreshItemSkills prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_RefreshItemSkills, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_RefreshItemSkills cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_RefreshItemSkills result;
      
      private Msg_RC_RefreshItemSkills PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_RefreshItemSkills original = result;
          result = new Msg_RC_RefreshItemSkills();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_RefreshItemSkills MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_RefreshItemSkills.Descriptor; }
      }
      
      public override Msg_RC_RefreshItemSkills DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_RefreshItemSkills.DefaultInstance; }
      }
      
      public override Msg_RC_RefreshItemSkills BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_RefreshItemSkills) {
          return MergeFrom((Msg_RC_RefreshItemSkills) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_RefreshItemSkills other) {
        if (other == global::DashFireMessage.Msg_RC_RefreshItemSkills.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCRefreshItemSkillsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCRefreshItemSkillsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
    }
    static Msg_RC_RefreshItemSkills() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_HighlightPrompt : pb::GeneratedMessage<Msg_RC_HighlightPrompt, Msg_RC_HighlightPrompt.Builder> {
    private Msg_RC_HighlightPrompt() { }
    private static readonly Msg_RC_HighlightPrompt defaultInstance = new Msg_RC_HighlightPrompt().MakeReadOnly();
    private static readonly string[] _msgRCHighlightPromptFieldNames = new string[] { "argument", "dict_id" };
    private static readonly uint[] _msgRCHighlightPromptFieldTags = new uint[] { 18, 8 };
    public static Msg_RC_HighlightPrompt DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_HighlightPrompt DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_HighlightPrompt ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_HighlightPrompt__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_HighlightPrompt, Msg_RC_HighlightPrompt.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_HighlightPrompt__FieldAccessorTable; }
    }
    
    public const int DictIdFieldNumber = 1;
    private bool hasDictId;
    private int dictId_;
    public bool HasDictId {
      get { return hasDictId; }
    }
    public int DictId {
      get { return dictId_; }
    }
    
    public const int ArgumentFieldNumber = 2;
    private pbc::PopsicleList<string> argument_ = new pbc::PopsicleList<string>();
    public scg::IList<string> ArgumentList {
      get { return pbc::Lists.AsReadOnly(argument_); }
    }
    public int ArgumentCount {
      get { return argument_.Count; }
    }
    public string GetArgument(int index) {
      return argument_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasDictId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCHighlightPromptFieldNames;
      if (hasDictId) {
        output.WriteInt32(1, field_names[1], DictId);
      }
      if (argument_.Count > 0) {
        output.WriteStringArray(2, field_names[0], argument_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasDictId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, DictId);
        }
        {
          int dataSize = 0;
          foreach (string element in ArgumentList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * argument_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_HighlightPrompt ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_HighlightPrompt ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_HighlightPrompt ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_HighlightPrompt ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_HighlightPrompt ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_HighlightPrompt ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_HighlightPrompt ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_HighlightPrompt ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_HighlightPrompt ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_HighlightPrompt ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_HighlightPrompt MakeReadOnly() {
      argument_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_HighlightPrompt prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_HighlightPrompt, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_HighlightPrompt cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_HighlightPrompt result;
      
      private Msg_RC_HighlightPrompt PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_HighlightPrompt original = result;
          result = new Msg_RC_HighlightPrompt();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_HighlightPrompt MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_HighlightPrompt.Descriptor; }
      }
      
      public override Msg_RC_HighlightPrompt DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_HighlightPrompt.DefaultInstance; }
      }
      
      public override Msg_RC_HighlightPrompt BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_HighlightPrompt) {
          return MergeFrom((Msg_RC_HighlightPrompt) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_HighlightPrompt other) {
        if (other == global::DashFireMessage.Msg_RC_HighlightPrompt.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDictId) {
          DictId = other.DictId;
        }
        if (other.argument_.Count != 0) {
          result.argument_.Add(other.argument_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCHighlightPromptFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCHighlightPromptFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasDictId = input.ReadInt32(ref result.dictId_);
              break;
            }
            case 18: {
              input.ReadStringArray(tag, field_name, result.argument_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDictId {
        get { return result.hasDictId; }
      }
      public int DictId {
        get { return result.DictId; }
        set { SetDictId(value); }
      }
      public Builder SetDictId(int value) {
        PrepareBuilder();
        result.hasDictId = true;
        result.dictId_ = value;
        return this;
      }
      public Builder ClearDictId() {
        PrepareBuilder();
        result.hasDictId = false;
        result.dictId_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<string> ArgumentList {
        get { return PrepareBuilder().argument_; }
      }
      public int ArgumentCount {
        get { return result.ArgumentCount; }
      }
      public string GetArgument(int index) {
        return result.GetArgument(index);
      }
      public Builder SetArgument(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.argument_[index] = value;
        return this;
      }
      public Builder AddArgument(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.argument_.Add(value);
        return this;
      }
      public Builder AddRangeArgument(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.argument_.Add(values);
        return this;
      }
      public Builder ClearArgument() {
        PrepareBuilder();
        result.argument_.Clear();
        return this;
      }
    }
    static Msg_RC_HighlightPrompt() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_SearchLightMove : pb::GeneratedMessage<Msg_RC_SearchLightMove, Msg_RC_SearchLightMove.Builder> {
    private Msg_RC_SearchLightMove() { }
    private static readonly Msg_RC_SearchLightMove defaultInstance = new Msg_RC_SearchLightMove().MakeReadOnly();
    private static readonly string[] _msgRCSearchLightMoveFieldNames = new string[] { "cur_pos_x", "cur_pos_y", "cur_pos_z", "id", "speed", "start_time", "target_id", "target_pos_x", "target_pos_y", "target_pos_z" };
    private static readonly uint[] _msgRCSearchLightMoveFieldTags = new uint[] { 29, 37, 45, 8, 53, 16, 56, 69, 77, 85 };
    public static Msg_RC_SearchLightMove DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_SearchLightMove DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_SearchLightMove ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SearchLightMove__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_SearchLightMove, Msg_RC_SearchLightMove.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_SearchLightMove__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int StartTimeFieldNumber = 2;
    private bool hasStartTime;
    private long startTime_;
    public bool HasStartTime {
      get { return hasStartTime; }
    }
    public long StartTime {
      get { return startTime_; }
    }
    
    public const int CurPosXFieldNumber = 3;
    private bool hasCurPosX;
    private float curPosX_;
    public bool HasCurPosX {
      get { return hasCurPosX; }
    }
    public float CurPosX {
      get { return curPosX_; }
    }
    
    public const int CurPosYFieldNumber = 4;
    private bool hasCurPosY;
    private float curPosY_;
    public bool HasCurPosY {
      get { return hasCurPosY; }
    }
    public float CurPosY {
      get { return curPosY_; }
    }
    
    public const int CurPosZFieldNumber = 5;
    private bool hasCurPosZ;
    private float curPosZ_;
    public bool HasCurPosZ {
      get { return hasCurPosZ; }
    }
    public float CurPosZ {
      get { return curPosZ_; }
    }
    
    public const int SpeedFieldNumber = 6;
    private bool hasSpeed;
    private float speed_;
    public bool HasSpeed {
      get { return hasSpeed; }
    }
    public float Speed {
      get { return speed_; }
    }
    
    public const int TargetIdFieldNumber = 7;
    private bool hasTargetId;
    private int targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public int TargetId {
      get { return targetId_; }
    }
    
    public const int TargetPosXFieldNumber = 8;
    private bool hasTargetPosX;
    private float targetPosX_;
    public bool HasTargetPosX {
      get { return hasTargetPosX; }
    }
    public float TargetPosX {
      get { return targetPosX_; }
    }
    
    public const int TargetPosYFieldNumber = 9;
    private bool hasTargetPosY;
    private float targetPosY_;
    public bool HasTargetPosY {
      get { return hasTargetPosY; }
    }
    public float TargetPosY {
      get { return targetPosY_; }
    }
    
    public const int TargetPosZFieldNumber = 10;
    private bool hasTargetPosZ;
    private float targetPosZ_;
    public bool HasTargetPosZ {
      get { return hasTargetPosZ; }
    }
    public float TargetPosZ {
      get { return targetPosZ_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasStartTime) return false;
        if (!hasCurPosX) return false;
        if (!hasCurPosY) return false;
        if (!hasCurPosZ) return false;
        if (!hasSpeed) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCSearchLightMoveFieldNames;
      if (hasId) {
        output.WriteInt32(1, field_names[3], Id);
      }
      if (hasStartTime) {
        output.WriteInt64(2, field_names[5], StartTime);
      }
      if (hasCurPosX) {
        output.WriteFloat(3, field_names[0], CurPosX);
      }
      if (hasCurPosY) {
        output.WriteFloat(4, field_names[1], CurPosY);
      }
      if (hasCurPosZ) {
        output.WriteFloat(5, field_names[2], CurPosZ);
      }
      if (hasSpeed) {
        output.WriteFloat(6, field_names[4], Speed);
      }
      if (hasTargetId) {
        output.WriteInt32(7, field_names[6], TargetId);
      }
      if (hasTargetPosX) {
        output.WriteFloat(8, field_names[7], TargetPosX);
      }
      if (hasTargetPosY) {
        output.WriteFloat(9, field_names[8], TargetPosY);
      }
      if (hasTargetPosZ) {
        output.WriteFloat(10, field_names[9], TargetPosZ);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
        }
        if (hasStartTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, StartTime);
        }
        if (hasCurPosX) {
          size += pb::CodedOutputStream.ComputeFloatSize(3, CurPosX);
        }
        if (hasCurPosY) {
          size += pb::CodedOutputStream.ComputeFloatSize(4, CurPosY);
        }
        if (hasCurPosZ) {
          size += pb::CodedOutputStream.ComputeFloatSize(5, CurPosZ);
        }
        if (hasSpeed) {
          size += pb::CodedOutputStream.ComputeFloatSize(6, Speed);
        }
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, TargetId);
        }
        if (hasTargetPosX) {
          size += pb::CodedOutputStream.ComputeFloatSize(8, TargetPosX);
        }
        if (hasTargetPosY) {
          size += pb::CodedOutputStream.ComputeFloatSize(9, TargetPosY);
        }
        if (hasTargetPosZ) {
          size += pb::CodedOutputStream.ComputeFloatSize(10, TargetPosZ);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_SearchLightMove ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_SearchLightMove ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SearchLightMove ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_SearchLightMove ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SearchLightMove ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_SearchLightMove ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_SearchLightMove ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_SearchLightMove ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_SearchLightMove ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_SearchLightMove ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_SearchLightMove MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_SearchLightMove prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_SearchLightMove, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_SearchLightMove cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_SearchLightMove result;
      
      private Msg_RC_SearchLightMove PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_SearchLightMove original = result;
          result = new Msg_RC_SearchLightMove();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_SearchLightMove MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_SearchLightMove.Descriptor; }
      }
      
      public override Msg_RC_SearchLightMove DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_SearchLightMove.DefaultInstance; }
      }
      
      public override Msg_RC_SearchLightMove BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_SearchLightMove) {
          return MergeFrom((Msg_RC_SearchLightMove) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_SearchLightMove other) {
        if (other == global::DashFireMessage.Msg_RC_SearchLightMove.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasStartTime) {
          StartTime = other.StartTime;
        }
        if (other.HasCurPosX) {
          CurPosX = other.CurPosX;
        }
        if (other.HasCurPosY) {
          CurPosY = other.CurPosY;
        }
        if (other.HasCurPosZ) {
          CurPosZ = other.CurPosZ;
        }
        if (other.HasSpeed) {
          Speed = other.Speed;
        }
        if (other.HasTargetId) {
          TargetId = other.TargetId;
        }
        if (other.HasTargetPosX) {
          TargetPosX = other.TargetPosX;
        }
        if (other.HasTargetPosY) {
          TargetPosY = other.TargetPosY;
        }
        if (other.HasTargetPosZ) {
          TargetPosZ = other.TargetPosZ;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCSearchLightMoveFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCSearchLightMoveFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadInt32(ref result.id_);
              break;
            }
            case 16: {
              result.hasStartTime = input.ReadInt64(ref result.startTime_);
              break;
            }
            case 29: {
              result.hasCurPosX = input.ReadFloat(ref result.curPosX_);
              break;
            }
            case 37: {
              result.hasCurPosY = input.ReadFloat(ref result.curPosY_);
              break;
            }
            case 45: {
              result.hasCurPosZ = input.ReadFloat(ref result.curPosZ_);
              break;
            }
            case 53: {
              result.hasSpeed = input.ReadFloat(ref result.speed_);
              break;
            }
            case 56: {
              result.hasTargetId = input.ReadInt32(ref result.targetId_);
              break;
            }
            case 69: {
              result.hasTargetPosX = input.ReadFloat(ref result.targetPosX_);
              break;
            }
            case 77: {
              result.hasTargetPosY = input.ReadFloat(ref result.targetPosY_);
              break;
            }
            case 85: {
              result.hasTargetPosZ = input.ReadFloat(ref result.targetPosZ_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasStartTime {
        get { return result.hasStartTime; }
      }
      public long StartTime {
        get { return result.StartTime; }
        set { SetStartTime(value); }
      }
      public Builder SetStartTime(long value) {
        PrepareBuilder();
        result.hasStartTime = true;
        result.startTime_ = value;
        return this;
      }
      public Builder ClearStartTime() {
        PrepareBuilder();
        result.hasStartTime = false;
        result.startTime_ = 0L;
        return this;
      }
      
      public bool HasCurPosX {
        get { return result.hasCurPosX; }
      }
      public float CurPosX {
        get { return result.CurPosX; }
        set { SetCurPosX(value); }
      }
      public Builder SetCurPosX(float value) {
        PrepareBuilder();
        result.hasCurPosX = true;
        result.curPosX_ = value;
        return this;
      }
      public Builder ClearCurPosX() {
        PrepareBuilder();
        result.hasCurPosX = false;
        result.curPosX_ = 0F;
        return this;
      }
      
      public bool HasCurPosY {
        get { return result.hasCurPosY; }
      }
      public float CurPosY {
        get { return result.CurPosY; }
        set { SetCurPosY(value); }
      }
      public Builder SetCurPosY(float value) {
        PrepareBuilder();
        result.hasCurPosY = true;
        result.curPosY_ = value;
        return this;
      }
      public Builder ClearCurPosY() {
        PrepareBuilder();
        result.hasCurPosY = false;
        result.curPosY_ = 0F;
        return this;
      }
      
      public bool HasCurPosZ {
        get { return result.hasCurPosZ; }
      }
      public float CurPosZ {
        get { return result.CurPosZ; }
        set { SetCurPosZ(value); }
      }
      public Builder SetCurPosZ(float value) {
        PrepareBuilder();
        result.hasCurPosZ = true;
        result.curPosZ_ = value;
        return this;
      }
      public Builder ClearCurPosZ() {
        PrepareBuilder();
        result.hasCurPosZ = false;
        result.curPosZ_ = 0F;
        return this;
      }
      
      public bool HasSpeed {
        get { return result.hasSpeed; }
      }
      public float Speed {
        get { return result.Speed; }
        set { SetSpeed(value); }
      }
      public Builder SetSpeed(float value) {
        PrepareBuilder();
        result.hasSpeed = true;
        result.speed_ = value;
        return this;
      }
      public Builder ClearSpeed() {
        PrepareBuilder();
        result.hasSpeed = false;
        result.speed_ = 0F;
        return this;
      }
      
      public bool HasTargetId {
        get { return result.hasTargetId; }
      }
      public int TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(int value) {
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = 0;
        return this;
      }
      
      public bool HasTargetPosX {
        get { return result.hasTargetPosX; }
      }
      public float TargetPosX {
        get { return result.TargetPosX; }
        set { SetTargetPosX(value); }
      }
      public Builder SetTargetPosX(float value) {
        PrepareBuilder();
        result.hasTargetPosX = true;
        result.targetPosX_ = value;
        return this;
      }
      public Builder ClearTargetPosX() {
        PrepareBuilder();
        result.hasTargetPosX = false;
        result.targetPosX_ = 0F;
        return this;
      }
      
      public bool HasTargetPosY {
        get { return result.hasTargetPosY; }
      }
      public float TargetPosY {
        get { return result.TargetPosY; }
        set { SetTargetPosY(value); }
      }
      public Builder SetTargetPosY(float value) {
        PrepareBuilder();
        result.hasTargetPosY = true;
        result.targetPosY_ = value;
        return this;
      }
      public Builder ClearTargetPosY() {
        PrepareBuilder();
        result.hasTargetPosY = false;
        result.targetPosY_ = 0F;
        return this;
      }
      
      public bool HasTargetPosZ {
        get { return result.hasTargetPosZ; }
      }
      public float TargetPosZ {
        get { return result.TargetPosZ; }
        set { SetTargetPosZ(value); }
      }
      public Builder SetTargetPosZ(float value) {
        PrepareBuilder();
        result.hasTargetPosZ = true;
        result.targetPosZ_ = value;
        return this;
      }
      public Builder ClearTargetPosZ() {
        PrepareBuilder();
        result.hasTargetPosZ = false;
        result.targetPosZ_ = 0F;
        return this;
      }
    }
    static Msg_RC_SearchLightMove() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_NotifyEarnMoney : pb::GeneratedMessage<Msg_RC_NotifyEarnMoney, Msg_RC_NotifyEarnMoney.Builder> {
    private Msg_RC_NotifyEarnMoney() { }
    private static readonly Msg_RC_NotifyEarnMoney defaultInstance = new Msg_RC_NotifyEarnMoney().MakeReadOnly();
    private static readonly string[] _msgRCNotifyEarnMoneyFieldNames = new string[] { "id", "money" };
    private static readonly uint[] _msgRCNotifyEarnMoneyFieldTags = new uint[] { 8, 16 };
    public static Msg_RC_NotifyEarnMoney DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_NotifyEarnMoney DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_NotifyEarnMoney ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_NotifyEarnMoney__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_NotifyEarnMoney, Msg_RC_NotifyEarnMoney.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_NotifyEarnMoney__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int MoneyFieldNumber = 2;
    private bool hasMoney;
    private int money_;
    public bool HasMoney {
      get { return hasMoney; }
    }
    public int Money {
      get { return money_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasMoney) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCNotifyEarnMoneyFieldNames;
      if (hasId) {
        output.WriteInt32(1, field_names[0], Id);
      }
      if (hasMoney) {
        output.WriteInt32(2, field_names[1], Money);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
        }
        if (hasMoney) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Money);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_NotifyEarnMoney ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_NotifyEarnMoney ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NotifyEarnMoney ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_NotifyEarnMoney ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NotifyEarnMoney ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_NotifyEarnMoney ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_NotifyEarnMoney ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_NotifyEarnMoney ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_NotifyEarnMoney ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_NotifyEarnMoney ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_NotifyEarnMoney MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_NotifyEarnMoney prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_NotifyEarnMoney, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_NotifyEarnMoney cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_NotifyEarnMoney result;
      
      private Msg_RC_NotifyEarnMoney PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_NotifyEarnMoney original = result;
          result = new Msg_RC_NotifyEarnMoney();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_NotifyEarnMoney MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_NotifyEarnMoney.Descriptor; }
      }
      
      public override Msg_RC_NotifyEarnMoney DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_NotifyEarnMoney.DefaultInstance; }
      }
      
      public override Msg_RC_NotifyEarnMoney BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_NotifyEarnMoney) {
          return MergeFrom((Msg_RC_NotifyEarnMoney) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_NotifyEarnMoney other) {
        if (other == global::DashFireMessage.Msg_RC_NotifyEarnMoney.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasMoney) {
          Money = other.Money;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCNotifyEarnMoneyFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCNotifyEarnMoneyFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadInt32(ref result.id_);
              break;
            }
            case 16: {
              result.hasMoney = input.ReadInt32(ref result.money_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasMoney {
        get { return result.hasMoney; }
      }
      public int Money {
        get { return result.Money; }
        set { SetMoney(value); }
      }
      public Builder SetMoney(int value) {
        PrepareBuilder();
        result.hasMoney = true;
        result.money_ = value;
        return this;
      }
      public Builder ClearMoney() {
        PrepareBuilder();
        result.hasMoney = false;
        result.money_ = 0;
        return this;
      }
    }
    static Msg_RC_NotifyEarnMoney() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CR_QuitClient : pb::GeneratedMessage<Msg_CR_QuitClient, Msg_CR_QuitClient.Builder> {
    private Msg_CR_QuitClient() { }
    private static readonly Msg_CR_QuitClient defaultInstance = new Msg_CR_QuitClient().MakeReadOnly();
    private static readonly string[] _msgCRQuitClientFieldNames = new string[] {  };
    private static readonly uint[] _msgCRQuitClientFieldTags = new uint[] {  };
    public static Msg_CR_QuitClient DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CR_QuitClient DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CR_QuitClient ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CR_QuitClient__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CR_QuitClient, Msg_CR_QuitClient.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CR_QuitClient__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRQuitClientFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CR_QuitClient ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CR_QuitClient ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_QuitClient ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CR_QuitClient ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_QuitClient ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CR_QuitClient ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_QuitClient ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CR_QuitClient ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CR_QuitClient ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CR_QuitClient ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CR_QuitClient MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CR_QuitClient prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CR_QuitClient, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CR_QuitClient cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CR_QuitClient result;
      
      private Msg_CR_QuitClient PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CR_QuitClient original = result;
          result = new Msg_CR_QuitClient();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CR_QuitClient MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CR_QuitClient.Descriptor; }
      }
      
      public override Msg_CR_QuitClient DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CR_QuitClient.DefaultInstance; }
      }
      
      public override Msg_CR_QuitClient BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CR_QuitClient) {
          return MergeFrom((Msg_CR_QuitClient) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CR_QuitClient other) {
        if (other == global::DashFireMessage.Msg_CR_QuitClient.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRQuitClientFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRQuitClientFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static Msg_CR_QuitClient() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_UserMove : pb::GeneratedMessage<Msg_RC_UserMove, Msg_RC_UserMove.Builder> {
    private Msg_RC_UserMove() { }
    private static readonly Msg_RC_UserMove defaultInstance = new Msg_RC_UserMove().MakeReadOnly();
    private static readonly string[] _msgRCUserMoveFieldNames = new string[] { "cur_pos_x", "cur_pos_y", "cur_pos_z", "face_direction", "is_moving", "move_direction", "role_id", "send_time", "target_pos_x", "target_pos_y", "target_pos_z", "velocity_coefficient" };
    private static readonly uint[] _msgRCUserMoveFieldTags = new uint[] { 29, 37, 45, 69, 48, 61, 16, 8, 77, 85, 93, 101 };
    public static Msg_RC_UserMove DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_UserMove DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_UserMove ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_UserMove__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_UserMove, Msg_RC_UserMove.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_UserMove__FieldAccessorTable; }
    }
    
    public const int SendTimeFieldNumber = 1;
    private bool hasSendTime;
    private long sendTime_;
    public bool HasSendTime {
      get { return hasSendTime; }
    }
    public long SendTime {
      get { return sendTime_; }
    }
    
    public const int RoleIdFieldNumber = 2;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int CurPosXFieldNumber = 3;
    private bool hasCurPosX;
    private float curPosX_;
    public bool HasCurPosX {
      get { return hasCurPosX; }
    }
    public float CurPosX {
      get { return curPosX_; }
    }
    
    public const int CurPosYFieldNumber = 4;
    private bool hasCurPosY;
    private float curPosY_;
    public bool HasCurPosY {
      get { return hasCurPosY; }
    }
    public float CurPosY {
      get { return curPosY_; }
    }
    
    public const int CurPosZFieldNumber = 5;
    private bool hasCurPosZ;
    private float curPosZ_;
    public bool HasCurPosZ {
      get { return hasCurPosZ; }
    }
    public float CurPosZ {
      get { return curPosZ_; }
    }
    
    public const int IsMovingFieldNumber = 6;
    private bool hasIsMoving;
    private bool isMoving_;
    public bool HasIsMoving {
      get { return hasIsMoving; }
    }
    public bool IsMoving {
      get { return isMoving_; }
    }
    
    public const int MoveDirectionFieldNumber = 7;
    private bool hasMoveDirection;
    private float moveDirection_;
    public bool HasMoveDirection {
      get { return hasMoveDirection; }
    }
    public float MoveDirection {
      get { return moveDirection_; }
    }
    
    public const int FaceDirectionFieldNumber = 8;
    private bool hasFaceDirection;
    private float faceDirection_;
    public bool HasFaceDirection {
      get { return hasFaceDirection; }
    }
    public float FaceDirection {
      get { return faceDirection_; }
    }
    
    public const int TargetPosXFieldNumber = 9;
    private bool hasTargetPosX;
    private float targetPosX_;
    public bool HasTargetPosX {
      get { return hasTargetPosX; }
    }
    public float TargetPosX {
      get { return targetPosX_; }
    }
    
    public const int TargetPosYFieldNumber = 10;
    private bool hasTargetPosY;
    private float targetPosY_;
    public bool HasTargetPosY {
      get { return hasTargetPosY; }
    }
    public float TargetPosY {
      get { return targetPosY_; }
    }
    
    public const int TargetPosZFieldNumber = 11;
    private bool hasTargetPosZ;
    private float targetPosZ_;
    public bool HasTargetPosZ {
      get { return hasTargetPosZ; }
    }
    public float TargetPosZ {
      get { return targetPosZ_; }
    }
    
    public const int VelocityCoefficientFieldNumber = 12;
    private bool hasVelocityCoefficient;
    private float velocityCoefficient_;
    public bool HasVelocityCoefficient {
      get { return hasVelocityCoefficient; }
    }
    public float VelocityCoefficient {
      get { return velocityCoefficient_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSendTime) return false;
        if (!hasRoleId) return false;
        if (!hasCurPosX) return false;
        if (!hasCurPosY) return false;
        if (!hasCurPosZ) return false;
        if (!hasIsMoving) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCUserMoveFieldNames;
      if (hasSendTime) {
        output.WriteInt64(1, field_names[7], SendTime);
      }
      if (hasRoleId) {
        output.WriteInt32(2, field_names[6], RoleId);
      }
      if (hasCurPosX) {
        output.WriteFloat(3, field_names[0], CurPosX);
      }
      if (hasCurPosY) {
        output.WriteFloat(4, field_names[1], CurPosY);
      }
      if (hasCurPosZ) {
        output.WriteFloat(5, field_names[2], CurPosZ);
      }
      if (hasIsMoving) {
        output.WriteBool(6, field_names[4], IsMoving);
      }
      if (hasMoveDirection) {
        output.WriteFloat(7, field_names[5], MoveDirection);
      }
      if (hasFaceDirection) {
        output.WriteFloat(8, field_names[3], FaceDirection);
      }
      if (hasTargetPosX) {
        output.WriteFloat(9, field_names[8], TargetPosX);
      }
      if (hasTargetPosY) {
        output.WriteFloat(10, field_names[9], TargetPosY);
      }
      if (hasTargetPosZ) {
        output.WriteFloat(11, field_names[10], TargetPosZ);
      }
      if (hasVelocityCoefficient) {
        output.WriteFloat(12, field_names[11], VelocityCoefficient);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSendTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, SendTime);
        }
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, RoleId);
        }
        if (hasCurPosX) {
          size += pb::CodedOutputStream.ComputeFloatSize(3, CurPosX);
        }
        if (hasCurPosY) {
          size += pb::CodedOutputStream.ComputeFloatSize(4, CurPosY);
        }
        if (hasCurPosZ) {
          size += pb::CodedOutputStream.ComputeFloatSize(5, CurPosZ);
        }
        if (hasIsMoving) {
          size += pb::CodedOutputStream.ComputeBoolSize(6, IsMoving);
        }
        if (hasMoveDirection) {
          size += pb::CodedOutputStream.ComputeFloatSize(7, MoveDirection);
        }
        if (hasFaceDirection) {
          size += pb::CodedOutputStream.ComputeFloatSize(8, FaceDirection);
        }
        if (hasTargetPosX) {
          size += pb::CodedOutputStream.ComputeFloatSize(9, TargetPosX);
        }
        if (hasTargetPosY) {
          size += pb::CodedOutputStream.ComputeFloatSize(10, TargetPosY);
        }
        if (hasTargetPosZ) {
          size += pb::CodedOutputStream.ComputeFloatSize(11, TargetPosZ);
        }
        if (hasVelocityCoefficient) {
          size += pb::CodedOutputStream.ComputeFloatSize(12, VelocityCoefficient);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_UserMove ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_UserMove ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_UserMove ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_UserMove ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_UserMove ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_UserMove ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_UserMove ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_UserMove ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_UserMove ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_UserMove ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_UserMove MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_UserMove prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_UserMove, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_UserMove cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_UserMove result;
      
      private Msg_RC_UserMove PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_UserMove original = result;
          result = new Msg_RC_UserMove();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_UserMove MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_UserMove.Descriptor; }
      }
      
      public override Msg_RC_UserMove DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_UserMove.DefaultInstance; }
      }
      
      public override Msg_RC_UserMove BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_UserMove) {
          return MergeFrom((Msg_RC_UserMove) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_UserMove other) {
        if (other == global::DashFireMessage.Msg_RC_UserMove.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSendTime) {
          SendTime = other.SendTime;
        }
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasCurPosX) {
          CurPosX = other.CurPosX;
        }
        if (other.HasCurPosY) {
          CurPosY = other.CurPosY;
        }
        if (other.HasCurPosZ) {
          CurPosZ = other.CurPosZ;
        }
        if (other.HasIsMoving) {
          IsMoving = other.IsMoving;
        }
        if (other.HasMoveDirection) {
          MoveDirection = other.MoveDirection;
        }
        if (other.HasFaceDirection) {
          FaceDirection = other.FaceDirection;
        }
        if (other.HasTargetPosX) {
          TargetPosX = other.TargetPosX;
        }
        if (other.HasTargetPosY) {
          TargetPosY = other.TargetPosY;
        }
        if (other.HasTargetPosZ) {
          TargetPosZ = other.TargetPosZ;
        }
        if (other.HasVelocityCoefficient) {
          VelocityCoefficient = other.VelocityCoefficient;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCUserMoveFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCUserMoveFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSendTime = input.ReadInt64(ref result.sendTime_);
              break;
            }
            case 16: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 29: {
              result.hasCurPosX = input.ReadFloat(ref result.curPosX_);
              break;
            }
            case 37: {
              result.hasCurPosY = input.ReadFloat(ref result.curPosY_);
              break;
            }
            case 45: {
              result.hasCurPosZ = input.ReadFloat(ref result.curPosZ_);
              break;
            }
            case 48: {
              result.hasIsMoving = input.ReadBool(ref result.isMoving_);
              break;
            }
            case 61: {
              result.hasMoveDirection = input.ReadFloat(ref result.moveDirection_);
              break;
            }
            case 69: {
              result.hasFaceDirection = input.ReadFloat(ref result.faceDirection_);
              break;
            }
            case 77: {
              result.hasTargetPosX = input.ReadFloat(ref result.targetPosX_);
              break;
            }
            case 85: {
              result.hasTargetPosY = input.ReadFloat(ref result.targetPosY_);
              break;
            }
            case 93: {
              result.hasTargetPosZ = input.ReadFloat(ref result.targetPosZ_);
              break;
            }
            case 101: {
              result.hasVelocityCoefficient = input.ReadFloat(ref result.velocityCoefficient_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSendTime {
        get { return result.hasSendTime; }
      }
      public long SendTime {
        get { return result.SendTime; }
        set { SetSendTime(value); }
      }
      public Builder SetSendTime(long value) {
        PrepareBuilder();
        result.hasSendTime = true;
        result.sendTime_ = value;
        return this;
      }
      public Builder ClearSendTime() {
        PrepareBuilder();
        result.hasSendTime = false;
        result.sendTime_ = 0L;
        return this;
      }
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasCurPosX {
        get { return result.hasCurPosX; }
      }
      public float CurPosX {
        get { return result.CurPosX; }
        set { SetCurPosX(value); }
      }
      public Builder SetCurPosX(float value) {
        PrepareBuilder();
        result.hasCurPosX = true;
        result.curPosX_ = value;
        return this;
      }
      public Builder ClearCurPosX() {
        PrepareBuilder();
        result.hasCurPosX = false;
        result.curPosX_ = 0F;
        return this;
      }
      
      public bool HasCurPosY {
        get { return result.hasCurPosY; }
      }
      public float CurPosY {
        get { return result.CurPosY; }
        set { SetCurPosY(value); }
      }
      public Builder SetCurPosY(float value) {
        PrepareBuilder();
        result.hasCurPosY = true;
        result.curPosY_ = value;
        return this;
      }
      public Builder ClearCurPosY() {
        PrepareBuilder();
        result.hasCurPosY = false;
        result.curPosY_ = 0F;
        return this;
      }
      
      public bool HasCurPosZ {
        get { return result.hasCurPosZ; }
      }
      public float CurPosZ {
        get { return result.CurPosZ; }
        set { SetCurPosZ(value); }
      }
      public Builder SetCurPosZ(float value) {
        PrepareBuilder();
        result.hasCurPosZ = true;
        result.curPosZ_ = value;
        return this;
      }
      public Builder ClearCurPosZ() {
        PrepareBuilder();
        result.hasCurPosZ = false;
        result.curPosZ_ = 0F;
        return this;
      }
      
      public bool HasIsMoving {
        get { return result.hasIsMoving; }
      }
      public bool IsMoving {
        get { return result.IsMoving; }
        set { SetIsMoving(value); }
      }
      public Builder SetIsMoving(bool value) {
        PrepareBuilder();
        result.hasIsMoving = true;
        result.isMoving_ = value;
        return this;
      }
      public Builder ClearIsMoving() {
        PrepareBuilder();
        result.hasIsMoving = false;
        result.isMoving_ = false;
        return this;
      }
      
      public bool HasMoveDirection {
        get { return result.hasMoveDirection; }
      }
      public float MoveDirection {
        get { return result.MoveDirection; }
        set { SetMoveDirection(value); }
      }
      public Builder SetMoveDirection(float value) {
        PrepareBuilder();
        result.hasMoveDirection = true;
        result.moveDirection_ = value;
        return this;
      }
      public Builder ClearMoveDirection() {
        PrepareBuilder();
        result.hasMoveDirection = false;
        result.moveDirection_ = 0F;
        return this;
      }
      
      public bool HasFaceDirection {
        get { return result.hasFaceDirection; }
      }
      public float FaceDirection {
        get { return result.FaceDirection; }
        set { SetFaceDirection(value); }
      }
      public Builder SetFaceDirection(float value) {
        PrepareBuilder();
        result.hasFaceDirection = true;
        result.faceDirection_ = value;
        return this;
      }
      public Builder ClearFaceDirection() {
        PrepareBuilder();
        result.hasFaceDirection = false;
        result.faceDirection_ = 0F;
        return this;
      }
      
      public bool HasTargetPosX {
        get { return result.hasTargetPosX; }
      }
      public float TargetPosX {
        get { return result.TargetPosX; }
        set { SetTargetPosX(value); }
      }
      public Builder SetTargetPosX(float value) {
        PrepareBuilder();
        result.hasTargetPosX = true;
        result.targetPosX_ = value;
        return this;
      }
      public Builder ClearTargetPosX() {
        PrepareBuilder();
        result.hasTargetPosX = false;
        result.targetPosX_ = 0F;
        return this;
      }
      
      public bool HasTargetPosY {
        get { return result.hasTargetPosY; }
      }
      public float TargetPosY {
        get { return result.TargetPosY; }
        set { SetTargetPosY(value); }
      }
      public Builder SetTargetPosY(float value) {
        PrepareBuilder();
        result.hasTargetPosY = true;
        result.targetPosY_ = value;
        return this;
      }
      public Builder ClearTargetPosY() {
        PrepareBuilder();
        result.hasTargetPosY = false;
        result.targetPosY_ = 0F;
        return this;
      }
      
      public bool HasTargetPosZ {
        get { return result.hasTargetPosZ; }
      }
      public float TargetPosZ {
        get { return result.TargetPosZ; }
        set { SetTargetPosZ(value); }
      }
      public Builder SetTargetPosZ(float value) {
        PrepareBuilder();
        result.hasTargetPosZ = true;
        result.targetPosZ_ = value;
        return this;
      }
      public Builder ClearTargetPosZ() {
        PrepareBuilder();
        result.hasTargetPosZ = false;
        result.targetPosZ_ = 0F;
        return this;
      }
      
      public bool HasVelocityCoefficient {
        get { return result.hasVelocityCoefficient; }
      }
      public float VelocityCoefficient {
        get { return result.VelocityCoefficient; }
        set { SetVelocityCoefficient(value); }
      }
      public Builder SetVelocityCoefficient(float value) {
        PrepareBuilder();
        result.hasVelocityCoefficient = true;
        result.velocityCoefficient_ = value;
        return this;
      }
      public Builder ClearVelocityCoefficient() {
        PrepareBuilder();
        result.hasVelocityCoefficient = false;
        result.velocityCoefficient_ = 0F;
        return this;
      }
    }
    static Msg_RC_UserMove() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_UserFace : pb::GeneratedMessage<Msg_RC_UserFace, Msg_RC_UserFace.Builder> {
    private Msg_RC_UserFace() { }
    private static readonly Msg_RC_UserFace defaultInstance = new Msg_RC_UserFace().MakeReadOnly();
    private static readonly string[] _msgRCUserFaceFieldNames = new string[] { "face_direction", "role_id" };
    private static readonly uint[] _msgRCUserFaceFieldTags = new uint[] { 21, 8 };
    public static Msg_RC_UserFace DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_UserFace DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_UserFace ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_UserFace__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_UserFace, Msg_RC_UserFace.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_RC_UserFace__FieldAccessorTable; }
    }
    
    public const int RoleIdFieldNumber = 1;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int FaceDirectionFieldNumber = 2;
    private bool hasFaceDirection;
    private float faceDirection_;
    public bool HasFaceDirection {
      get { return hasFaceDirection; }
    }
    public float FaceDirection {
      get { return faceDirection_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoleId) return false;
        if (!hasFaceDirection) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCUserFaceFieldNames;
      if (hasRoleId) {
        output.WriteInt32(1, field_names[1], RoleId);
      }
      if (hasFaceDirection) {
        output.WriteFloat(2, field_names[0], FaceDirection);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, RoleId);
        }
        if (hasFaceDirection) {
          size += pb::CodedOutputStream.ComputeFloatSize(2, FaceDirection);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_UserFace ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_UserFace ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_UserFace ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_UserFace ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_UserFace ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_UserFace ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_UserFace ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_UserFace ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_UserFace ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_UserFace ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_UserFace MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_UserFace prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_UserFace, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_UserFace cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_UserFace result;
      
      private Msg_RC_UserFace PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_UserFace original = result;
          result = new Msg_RC_UserFace();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_UserFace MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_RC_UserFace.Descriptor; }
      }
      
      public override Msg_RC_UserFace DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_RC_UserFace.DefaultInstance; }
      }
      
      public override Msg_RC_UserFace BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_UserFace) {
          return MergeFrom((Msg_RC_UserFace) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_UserFace other) {
        if (other == global::DashFireMessage.Msg_RC_UserFace.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasFaceDirection) {
          FaceDirection = other.FaceDirection;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCUserFaceFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCUserFaceFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 21: {
              result.hasFaceDirection = input.ReadFloat(ref result.faceDirection_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasFaceDirection {
        get { return result.hasFaceDirection; }
      }
      public float FaceDirection {
        get { return result.FaceDirection; }
        set { SetFaceDirection(value); }
      }
      public Builder SetFaceDirection(float value) {
        PrepareBuilder();
        result.hasFaceDirection = true;
        result.faceDirection_ = value;
        return this;
      }
      public Builder ClearFaceDirection() {
        PrepareBuilder();
        result.hasFaceDirection = false;
        result.faceDirection_ = 0F;
        return this;
      }
    }
    static Msg_RC_UserFace() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CRC_UserFindPath : pb::GeneratedMessage<Msg_CRC_UserFindPath, Msg_CRC_UserFindPath.Builder> {
    private Msg_CRC_UserFindPath() { }
    private static readonly Msg_CRC_UserFindPath defaultInstance = new Msg_CRC_UserFindPath().MakeReadOnly();
    private static readonly string[] _msgCRCUserFindPathFieldNames = new string[] { "role_id", "send_time", "target_pos_x", "target_pos_y", "target_pos_z" };
    private static readonly uint[] _msgCRCUserFindPathFieldTags = new uint[] { 16, 8, 29, 37, 45 };
    public static Msg_CRC_UserFindPath DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CRC_UserFindPath DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CRC_UserFindPath ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_UserFindPath__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CRC_UserFindPath, Msg_CRC_UserFindPath.Builder> InternalFieldAccessors {
      get { return global::DashFireMessage.DashFireMsg.internal__static_DashFireMessage_Msg_CRC_UserFindPath__FieldAccessorTable; }
    }
    
    public const int SendTimeFieldNumber = 1;
    private bool hasSendTime;
    private long sendTime_;
    public bool HasSendTime {
      get { return hasSendTime; }
    }
    public long SendTime {
      get { return sendTime_; }
    }
    
    public const int RoleIdFieldNumber = 2;
    private bool hasRoleId;
    private int roleId_;
    public bool HasRoleId {
      get { return hasRoleId; }
    }
    public int RoleId {
      get { return roleId_; }
    }
    
    public const int TargetPosXFieldNumber = 3;
    private bool hasTargetPosX;
    private float targetPosX_;
    public bool HasTargetPosX {
      get { return hasTargetPosX; }
    }
    public float TargetPosX {
      get { return targetPosX_; }
    }
    
    public const int TargetPosYFieldNumber = 4;
    private bool hasTargetPosY;
    private float targetPosY_;
    public bool HasTargetPosY {
      get { return hasTargetPosY; }
    }
    public float TargetPosY {
      get { return targetPosY_; }
    }
    
    public const int TargetPosZFieldNumber = 5;
    private bool hasTargetPosZ;
    private float targetPosZ_;
    public bool HasTargetPosZ {
      get { return hasTargetPosZ; }
    }
    public float TargetPosZ {
      get { return targetPosZ_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRCUserFindPathFieldNames;
      if (hasSendTime) {
        output.WriteInt64(1, field_names[1], SendTime);
      }
      if (hasRoleId) {
        output.WriteInt32(2, field_names[0], RoleId);
      }
      if (hasTargetPosX) {
        output.WriteFloat(3, field_names[2], TargetPosX);
      }
      if (hasTargetPosY) {
        output.WriteFloat(4, field_names[3], TargetPosY);
      }
      if (hasTargetPosZ) {
        output.WriteFloat(5, field_names[4], TargetPosZ);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSendTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, SendTime);
        }
        if (hasRoleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, RoleId);
        }
        if (hasTargetPosX) {
          size += pb::CodedOutputStream.ComputeFloatSize(3, TargetPosX);
        }
        if (hasTargetPosY) {
          size += pb::CodedOutputStream.ComputeFloatSize(4, TargetPosY);
        }
        if (hasTargetPosZ) {
          size += pb::CodedOutputStream.ComputeFloatSize(5, TargetPosZ);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CRC_UserFindPath ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_UserFindPath ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_UserFindPath ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_UserFindPath ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_UserFindPath ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_UserFindPath ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_UserFindPath ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CRC_UserFindPath ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CRC_UserFindPath ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_UserFindPath ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CRC_UserFindPath MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CRC_UserFindPath prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CRC_UserFindPath, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CRC_UserFindPath cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CRC_UserFindPath result;
      
      private Msg_CRC_UserFindPath PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CRC_UserFindPath original = result;
          result = new Msg_CRC_UserFindPath();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CRC_UserFindPath MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFireMessage.Msg_CRC_UserFindPath.Descriptor; }
      }
      
      public override Msg_CRC_UserFindPath DefaultInstanceForType {
        get { return global::DashFireMessage.Msg_CRC_UserFindPath.DefaultInstance; }
      }
      
      public override Msg_CRC_UserFindPath BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CRC_UserFindPath) {
          return MergeFrom((Msg_CRC_UserFindPath) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CRC_UserFindPath other) {
        if (other == global::DashFireMessage.Msg_CRC_UserFindPath.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSendTime) {
          SendTime = other.SendTime;
        }
        if (other.HasRoleId) {
          RoleId = other.RoleId;
        }
        if (other.HasTargetPosX) {
          TargetPosX = other.TargetPosX;
        }
        if (other.HasTargetPosY) {
          TargetPosY = other.TargetPosY;
        }
        if (other.HasTargetPosZ) {
          TargetPosZ = other.TargetPosZ;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRCUserFindPathFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRCUserFindPathFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSendTime = input.ReadInt64(ref result.sendTime_);
              break;
            }
            case 16: {
              result.hasRoleId = input.ReadInt32(ref result.roleId_);
              break;
            }
            case 29: {
              result.hasTargetPosX = input.ReadFloat(ref result.targetPosX_);
              break;
            }
            case 37: {
              result.hasTargetPosY = input.ReadFloat(ref result.targetPosY_);
              break;
            }
            case 45: {
              result.hasTargetPosZ = input.ReadFloat(ref result.targetPosZ_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSendTime {
        get { return result.hasSendTime; }
      }
      public long SendTime {
        get { return result.SendTime; }
        set { SetSendTime(value); }
      }
      public Builder SetSendTime(long value) {
        PrepareBuilder();
        result.hasSendTime = true;
        result.sendTime_ = value;
        return this;
      }
      public Builder ClearSendTime() {
        PrepareBuilder();
        result.hasSendTime = false;
        result.sendTime_ = 0L;
        return this;
      }
      
      public bool HasRoleId {
        get { return result.hasRoleId; }
      }
      public int RoleId {
        get { return result.RoleId; }
        set { SetRoleId(value); }
      }
      public Builder SetRoleId(int value) {
        PrepareBuilder();
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder ClearRoleId() {
        PrepareBuilder();
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      public bool HasTargetPosX {
        get { return result.hasTargetPosX; }
      }
      public float TargetPosX {
        get { return result.TargetPosX; }
        set { SetTargetPosX(value); }
      }
      public Builder SetTargetPosX(float value) {
        PrepareBuilder();
        result.hasTargetPosX = true;
        result.targetPosX_ = value;
        return this;
      }
      public Builder ClearTargetPosX() {
        PrepareBuilder();
        result.hasTargetPosX = false;
        result.targetPosX_ = 0F;
        return this;
      }
      
      public bool HasTargetPosY {
        get { return result.hasTargetPosY; }
      }
      public float TargetPosY {
        get { return result.TargetPosY; }
        set { SetTargetPosY(value); }
      }
      public Builder SetTargetPosY(float value) {
        PrepareBuilder();
        result.hasTargetPosY = true;
        result.targetPosY_ = value;
        return this;
      }
      public Builder ClearTargetPosY() {
        PrepareBuilder();
        result.hasTargetPosY = false;
        result.targetPosY_ = 0F;
        return this;
      }
      
      public bool HasTargetPosZ {
        get { return result.hasTargetPosZ; }
      }
      public float TargetPosZ {
        get { return result.TargetPosZ; }
        set { SetTargetPosZ(value); }
      }
      public Builder SetTargetPosZ(float value) {
        PrepareBuilder();
        result.hasTargetPosZ = true;
        result.targetPosZ_ = value;
        return this;
      }
      public Builder ClearTargetPosZ() {
        PrepareBuilder();
        result.hasTargetPosZ = false;
        result.targetPosZ_ = 0F;
        return this;
      }
    }
    static Msg_CRC_UserFindPath() {
      object.ReferenceEquals(global::DashFireMessage.DashFireMsg.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
