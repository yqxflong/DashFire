// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace DashFire.GM {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class GMCmdMsg {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_DashFire_GM_GMDescriptor__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.GM.GMDescriptor, global::DashFire.GM.GMDescriptor.Builder> internal__static_DashFire_GM_GMDescriptor__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFire_GM_GMDescriptor_ParamInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.GM.GMDescriptor.Types.ParamInfo, global::DashFire.GM.GMDescriptor.Types.ParamInfo.Builder> internal__static_DashFire_GM_GMDescriptor_ParamInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFire_GM_Msg_CRC_DescriptorSync__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.GM.Msg_CRC_DescriptorSync, global::DashFire.GM.Msg_CRC_DescriptorSync.Builder> internal__static_DashFire_GM_Msg_CRC_DescriptorSync__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFire_GM_Msg_CR_Execute__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.GM.Msg_CR_Execute, global::DashFire.GM.Msg_CR_Execute.Builder> internal__static_DashFire_GM_Msg_CR_Execute__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DashFire_GM_Msg_RC_ExecuteResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DashFire.GM.Msg_RC_ExecuteResult, global::DashFire.GM.Msg_RC_ExecuteResult.Builder> internal__static_DashFire_GM_Msg_RC_ExecuteResult__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static GMCmdMsg() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "Cg5HTUNtZE1zZy5wcm90bxILRGFzaEZpcmUuR00i8QEKDEdNRGVzY3JpcHRv" + 
          "chIQCghjYXRlZ29yeRgBIAIoCRINCgVncm91cBgCIAIoCRIMCgRuYW1lGAMg" + 
          "AigJEhMKC2Rlc2NyaXB0aW9uGAQgAigJEjMKBnBhcmFtcxgFIAMoCzIjLkRh" + 
          "c2hGaXJlLkdNLkdNRGVzY3JpcHRvci5QYXJhbUluZm8aaAoJUGFyYW1JbmZv" + 
          "EgwKBG5hbWUYASACKAkSDAoEdHlwZRgCIAIoCRITCgtkZXNjcmlwdGlvbhgD" + 
          "IAEoCRITCgtpc19vcHRpb25hbBgEIAIoCBIVCg1kZWZhdWx0X3ZhbHVlGAUg" + 
          "ASgJIkgKFk1zZ19DUkNfRGVzY3JpcHRvclN5bmMSLgoLZGVzY3JpcHRvcnMY" + 
          "ASADKAsyGS5EYXNoRmlyZS5HTS5HTURlc2NyaXB0b3IiMQoOTXNnX0NSX0V4" + 
          "ZWN1dGUSDQoFaW5kZXgYASACKAQSEAoIY21kX2xpbmUYAiACKAkiRAoUTXNn" + 
          "X1JDX0V4ZWN1dGVSZXN1bHQSDQoFaW5kZXgYASACKAQSDQoFZXJyb3IYAiAB" + 
          "KAkSDgoGcmVzdWx0GAMgASgJ");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_DashFire_GM_GMDescriptor__Descriptor = Descriptor.MessageTypes[0];
        internal__static_DashFire_GM_GMDescriptor__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.GM.GMDescriptor, global::DashFire.GM.GMDescriptor.Builder>(internal__static_DashFire_GM_GMDescriptor__Descriptor,
                new string[] { "Category", "Group", "Name", "Description", "Params", });
        internal__static_DashFire_GM_GMDescriptor_ParamInfo__Descriptor = internal__static_DashFire_GM_GMDescriptor__Descriptor.NestedTypes[0];
        internal__static_DashFire_GM_GMDescriptor_ParamInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.GM.GMDescriptor.Types.ParamInfo, global::DashFire.GM.GMDescriptor.Types.ParamInfo.Builder>(internal__static_DashFire_GM_GMDescriptor_ParamInfo__Descriptor,
                new string[] { "Name", "Type", "Description", "IsOptional", "DefaultValue", });
        internal__static_DashFire_GM_Msg_CRC_DescriptorSync__Descriptor = Descriptor.MessageTypes[1];
        internal__static_DashFire_GM_Msg_CRC_DescriptorSync__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.GM.Msg_CRC_DescriptorSync, global::DashFire.GM.Msg_CRC_DescriptorSync.Builder>(internal__static_DashFire_GM_Msg_CRC_DescriptorSync__Descriptor,
                new string[] { "Descriptors", });
        internal__static_DashFire_GM_Msg_CR_Execute__Descriptor = Descriptor.MessageTypes[2];
        internal__static_DashFire_GM_Msg_CR_Execute__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.GM.Msg_CR_Execute, global::DashFire.GM.Msg_CR_Execute.Builder>(internal__static_DashFire_GM_Msg_CR_Execute__Descriptor,
                new string[] { "Index", "CmdLine", });
        internal__static_DashFire_GM_Msg_RC_ExecuteResult__Descriptor = Descriptor.MessageTypes[3];
        internal__static_DashFire_GM_Msg_RC_ExecuteResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DashFire.GM.Msg_RC_ExecuteResult, global::DashFire.GM.Msg_RC_ExecuteResult.Builder>(internal__static_DashFire_GM_Msg_RC_ExecuteResult__Descriptor,
                new string[] { "Index", "Error", "Result", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GMDescriptor : pb::GeneratedMessage<GMDescriptor, GMDescriptor.Builder> {
    private GMDescriptor() { }
    private static readonly GMDescriptor defaultInstance = new GMDescriptor().MakeReadOnly();
    private static readonly string[] _gMDescriptorFieldNames = new string[] { "category", "description", "group", "name", "params" };
    private static readonly uint[] _gMDescriptorFieldTags = new uint[] { 10, 34, 18, 26, 42 };
    public static GMDescriptor DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GMDescriptor DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GMDescriptor ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.GM.GMCmdMsg.internal__static_DashFire_GM_GMDescriptor__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GMDescriptor, GMDescriptor.Builder> InternalFieldAccessors {
      get { return global::DashFire.GM.GMCmdMsg.internal__static_DashFire_GM_GMDescriptor__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class ParamInfo : pb::GeneratedMessage<ParamInfo, ParamInfo.Builder> {
        private ParamInfo() { }
        private static readonly ParamInfo defaultInstance = new ParamInfo().MakeReadOnly();
        private static readonly string[] _paramInfoFieldNames = new string[] { "default_value", "description", "is_optional", "name", "type" };
        private static readonly uint[] _paramInfoFieldTags = new uint[] { 42, 26, 32, 10, 18 };
        public static ParamInfo DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override ParamInfo DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override ParamInfo ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::DashFire.GM.GMCmdMsg.internal__static_DashFire_GM_GMDescriptor_ParamInfo__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<ParamInfo, ParamInfo.Builder> InternalFieldAccessors {
          get { return global::DashFire.GM.GMCmdMsg.internal__static_DashFire_GM_GMDescriptor_ParamInfo__FieldAccessorTable; }
        }
        
        public const int NameFieldNumber = 1;
        private bool hasName;
        private string name_ = "";
        public bool HasName {
          get { return hasName; }
        }
        public string Name {
          get { return name_; }
        }
        
        public const int TypeFieldNumber = 2;
        private bool hasType;
        private string type_ = "";
        public bool HasType {
          get { return hasType; }
        }
        public string Type {
          get { return type_; }
        }
        
        public const int DescriptionFieldNumber = 3;
        private bool hasDescription;
        private string description_ = "";
        public bool HasDescription {
          get { return hasDescription; }
        }
        public string Description {
          get { return description_; }
        }
        
        public const int IsOptionalFieldNumber = 4;
        private bool hasIsOptional;
        private bool isOptional_;
        public bool HasIsOptional {
          get { return hasIsOptional; }
        }
        public bool IsOptional {
          get { return isOptional_; }
        }
        
        public const int DefaultValueFieldNumber = 5;
        private bool hasDefaultValue;
        private string defaultValue_ = "";
        public bool HasDefaultValue {
          get { return hasDefaultValue; }
        }
        public string DefaultValue {
          get { return defaultValue_; }
        }
        
        public override bool IsInitialized {
          get {
            if (!hasName) return false;
            if (!hasType) return false;
            if (!hasIsOptional) return false;
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          int size = SerializedSize;
          string[] field_names = _paramInfoFieldNames;
          if (hasName) {
            output.WriteString(1, field_names[3], Name);
          }
          if (hasType) {
            output.WriteString(2, field_names[4], Type);
          }
          if (hasDescription) {
            output.WriteString(3, field_names[1], Description);
          }
          if (hasIsOptional) {
            output.WriteBool(4, field_names[2], IsOptional);
          }
          if (hasDefaultValue) {
            output.WriteString(5, field_names[0], DefaultValue);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            
            size = 0;
            if (hasName) {
              size += pb::CodedOutputStream.ComputeStringSize(1, Name);
            }
            if (hasType) {
              size += pb::CodedOutputStream.ComputeStringSize(2, Type);
            }
            if (hasDescription) {
              size += pb::CodedOutputStream.ComputeStringSize(3, Description);
            }
            if (hasIsOptional) {
              size += pb::CodedOutputStream.ComputeBoolSize(4, IsOptional);
            }
            if (hasDefaultValue) {
              size += pb::CodedOutputStream.ComputeStringSize(5, DefaultValue);
            }
            size += UnknownFields.SerializedSize;
            memoizedSerializedSize = size;
            return size;
          }
        }
        
        public static ParamInfo ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static ParamInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static ParamInfo ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static ParamInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static ParamInfo ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static ParamInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static ParamInfo ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static ParamInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static ParamInfo ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static ParamInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private ParamInfo MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(ParamInfo prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<ParamInfo, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(ParamInfo cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private ParamInfo result;
          
          private ParamInfo PrepareBuilder() {
            if (resultIsReadOnly) {
              ParamInfo original = result;
              result = new ParamInfo();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override ParamInfo MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::DashFire.GM.GMDescriptor.Types.ParamInfo.Descriptor; }
          }
          
          public override ParamInfo DefaultInstanceForType {
            get { return global::DashFire.GM.GMDescriptor.Types.ParamInfo.DefaultInstance; }
          }
          
          public override ParamInfo BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is ParamInfo) {
              return MergeFrom((ParamInfo) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(ParamInfo other) {
            if (other == global::DashFire.GM.GMDescriptor.Types.ParamInfo.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasName) {
              Name = other.Name;
            }
            if (other.HasType) {
              Type = other.Type;
            }
            if (other.HasDescription) {
              Description = other.Description;
            }
            if (other.HasIsOptional) {
              IsOptional = other.IsOptional;
            }
            if (other.HasDefaultValue) {
              DefaultValue = other.DefaultValue;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_paramInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _paramInfoFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 10: {
                  result.hasName = input.ReadString(ref result.name_);
                  break;
                }
                case 18: {
                  result.hasType = input.ReadString(ref result.type_);
                  break;
                }
                case 26: {
                  result.hasDescription = input.ReadString(ref result.description_);
                  break;
                }
                case 32: {
                  result.hasIsOptional = input.ReadBool(ref result.isOptional_);
                  break;
                }
                case 42: {
                  result.hasDefaultValue = input.ReadString(ref result.defaultValue_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasName {
            get { return result.hasName; }
          }
          public string Name {
            get { return result.Name; }
            set { SetName(value); }
          }
          public Builder SetName(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasName = true;
            result.name_ = value;
            return this;
          }
          public Builder ClearName() {
            PrepareBuilder();
            result.hasName = false;
            result.name_ = "";
            return this;
          }
          
          public bool HasType {
            get { return result.hasType; }
          }
          public string Type {
            get { return result.Type; }
            set { SetType(value); }
          }
          public Builder SetType(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasType = true;
            result.type_ = value;
            return this;
          }
          public Builder ClearType() {
            PrepareBuilder();
            result.hasType = false;
            result.type_ = "";
            return this;
          }
          
          public bool HasDescription {
            get { return result.hasDescription; }
          }
          public string Description {
            get { return result.Description; }
            set { SetDescription(value); }
          }
          public Builder SetDescription(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasDescription = true;
            result.description_ = value;
            return this;
          }
          public Builder ClearDescription() {
            PrepareBuilder();
            result.hasDescription = false;
            result.description_ = "";
            return this;
          }
          
          public bool HasIsOptional {
            get { return result.hasIsOptional; }
          }
          public bool IsOptional {
            get { return result.IsOptional; }
            set { SetIsOptional(value); }
          }
          public Builder SetIsOptional(bool value) {
            PrepareBuilder();
            result.hasIsOptional = true;
            result.isOptional_ = value;
            return this;
          }
          public Builder ClearIsOptional() {
            PrepareBuilder();
            result.hasIsOptional = false;
            result.isOptional_ = false;
            return this;
          }
          
          public bool HasDefaultValue {
            get { return result.hasDefaultValue; }
          }
          public string DefaultValue {
            get { return result.DefaultValue; }
            set { SetDefaultValue(value); }
          }
          public Builder SetDefaultValue(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasDefaultValue = true;
            result.defaultValue_ = value;
            return this;
          }
          public Builder ClearDefaultValue() {
            PrepareBuilder();
            result.hasDefaultValue = false;
            result.defaultValue_ = "";
            return this;
          }
        }
        static ParamInfo() {
          object.ReferenceEquals(global::DashFire.GM.GMCmdMsg.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public const int CategoryFieldNumber = 1;
    private bool hasCategory;
    private string category_ = "";
    public bool HasCategory {
      get { return hasCategory; }
    }
    public string Category {
      get { return category_; }
    }
    
    public const int GroupFieldNumber = 2;
    private bool hasGroup;
    private string group_ = "";
    public bool HasGroup {
      get { return hasGroup; }
    }
    public string Group {
      get { return group_; }
    }
    
    public const int NameFieldNumber = 3;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int DescriptionFieldNumber = 4;
    private bool hasDescription;
    private string description_ = "";
    public bool HasDescription {
      get { return hasDescription; }
    }
    public string Description {
      get { return description_; }
    }
    
    public const int ParamsFieldNumber = 5;
    private pbc::PopsicleList<global::DashFire.GM.GMDescriptor.Types.ParamInfo> params_ = new pbc::PopsicleList<global::DashFire.GM.GMDescriptor.Types.ParamInfo>();
    public scg::IList<global::DashFire.GM.GMDescriptor.Types.ParamInfo> ParamsList {
      get { return params_; }
    }
    public int ParamsCount {
      get { return params_.Count; }
    }
    public global::DashFire.GM.GMDescriptor.Types.ParamInfo GetParams(int index) {
      return params_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCategory) return false;
        if (!hasGroup) return false;
        if (!hasName) return false;
        if (!hasDescription) return false;
        foreach (global::DashFire.GM.GMDescriptor.Types.ParamInfo element in ParamsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gMDescriptorFieldNames;
      if (hasCategory) {
        output.WriteString(1, field_names[0], Category);
      }
      if (hasGroup) {
        output.WriteString(2, field_names[2], Group);
      }
      if (hasName) {
        output.WriteString(3, field_names[3], Name);
      }
      if (hasDescription) {
        output.WriteString(4, field_names[1], Description);
      }
      if (params_.Count > 0) {
        output.WriteMessageArray(5, field_names[4], params_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCategory) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Category);
        }
        if (hasGroup) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Group);
        }
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Name);
        }
        if (hasDescription) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Description);
        }
        foreach (global::DashFire.GM.GMDescriptor.Types.ParamInfo element in ParamsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GMDescriptor ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GMDescriptor ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GMDescriptor ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GMDescriptor ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GMDescriptor ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GMDescriptor ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GMDescriptor ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GMDescriptor ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GMDescriptor ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GMDescriptor ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GMDescriptor MakeReadOnly() {
      params_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GMDescriptor prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GMDescriptor, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GMDescriptor cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GMDescriptor result;
      
      private GMDescriptor PrepareBuilder() {
        if (resultIsReadOnly) {
          GMDescriptor original = result;
          result = new GMDescriptor();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GMDescriptor MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.GM.GMDescriptor.Descriptor; }
      }
      
      public override GMDescriptor DefaultInstanceForType {
        get { return global::DashFire.GM.GMDescriptor.DefaultInstance; }
      }
      
      public override GMDescriptor BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GMDescriptor) {
          return MergeFrom((GMDescriptor) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GMDescriptor other) {
        if (other == global::DashFire.GM.GMDescriptor.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCategory) {
          Category = other.Category;
        }
        if (other.HasGroup) {
          Group = other.Group;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasDescription) {
          Description = other.Description;
        }
        if (other.params_.Count != 0) {
          result.params_.Add(other.params_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gMDescriptorFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gMDescriptorFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasCategory = input.ReadString(ref result.category_);
              break;
            }
            case 18: {
              result.hasGroup = input.ReadString(ref result.group_);
              break;
            }
            case 26: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 34: {
              result.hasDescription = input.ReadString(ref result.description_);
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.params_, global::DashFire.GM.GMDescriptor.Types.ParamInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCategory {
        get { return result.hasCategory; }
      }
      public string Category {
        get { return result.Category; }
        set { SetCategory(value); }
      }
      public Builder SetCategory(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCategory = true;
        result.category_ = value;
        return this;
      }
      public Builder ClearCategory() {
        PrepareBuilder();
        result.hasCategory = false;
        result.category_ = "";
        return this;
      }
      
      public bool HasGroup {
        get { return result.hasGroup; }
      }
      public string Group {
        get { return result.Group; }
        set { SetGroup(value); }
      }
      public Builder SetGroup(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGroup = true;
        result.group_ = value;
        return this;
      }
      public Builder ClearGroup() {
        PrepareBuilder();
        result.hasGroup = false;
        result.group_ = "";
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasDescription {
        get { return result.hasDescription; }
      }
      public string Description {
        get { return result.Description; }
        set { SetDescription(value); }
      }
      public Builder SetDescription(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder ClearDescription() {
        PrepareBuilder();
        result.hasDescription = false;
        result.description_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::DashFire.GM.GMDescriptor.Types.ParamInfo> ParamsList {
        get { return PrepareBuilder().params_; }
      }
      public int ParamsCount {
        get { return result.ParamsCount; }
      }
      public global::DashFire.GM.GMDescriptor.Types.ParamInfo GetParams(int index) {
        return result.GetParams(index);
      }
      public Builder SetParams(int index, global::DashFire.GM.GMDescriptor.Types.ParamInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.params_[index] = value;
        return this;
      }
      public Builder SetParams(int index, global::DashFire.GM.GMDescriptor.Types.ParamInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.params_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddParams(global::DashFire.GM.GMDescriptor.Types.ParamInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.params_.Add(value);
        return this;
      }
      public Builder AddParams(global::DashFire.GM.GMDescriptor.Types.ParamInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.params_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeParams(scg::IEnumerable<global::DashFire.GM.GMDescriptor.Types.ParamInfo> values) {
        PrepareBuilder();
        result.params_.Add(values);
        return this;
      }
      public Builder ClearParams() {
        PrepareBuilder();
        result.params_.Clear();
        return this;
      }
    }
    static GMDescriptor() {
      object.ReferenceEquals(global::DashFire.GM.GMCmdMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CRC_DescriptorSync : pb::GeneratedMessage<Msg_CRC_DescriptorSync, Msg_CRC_DescriptorSync.Builder> {
    private Msg_CRC_DescriptorSync() { }
    private static readonly Msg_CRC_DescriptorSync defaultInstance = new Msg_CRC_DescriptorSync().MakeReadOnly();
    private static readonly string[] _msgCRCDescriptorSyncFieldNames = new string[] { "descriptors" };
    private static readonly uint[] _msgCRCDescriptorSyncFieldTags = new uint[] { 10 };
    public static Msg_CRC_DescriptorSync DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CRC_DescriptorSync DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CRC_DescriptorSync ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.GM.GMCmdMsg.internal__static_DashFire_GM_Msg_CRC_DescriptorSync__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CRC_DescriptorSync, Msg_CRC_DescriptorSync.Builder> InternalFieldAccessors {
      get { return global::DashFire.GM.GMCmdMsg.internal__static_DashFire_GM_Msg_CRC_DescriptorSync__FieldAccessorTable; }
    }
    
    public const int DescriptorsFieldNumber = 1;
    private pbc::PopsicleList<global::DashFire.GM.GMDescriptor> descriptors_ = new pbc::PopsicleList<global::DashFire.GM.GMDescriptor>();
    public scg::IList<global::DashFire.GM.GMDescriptor> DescriptorsList {
      get { return descriptors_; }
    }
    public int DescriptorsCount {
      get { return descriptors_.Count; }
    }
    public global::DashFire.GM.GMDescriptor GetDescriptors(int index) {
      return descriptors_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::DashFire.GM.GMDescriptor element in DescriptorsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRCDescriptorSyncFieldNames;
      if (descriptors_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], descriptors_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::DashFire.GM.GMDescriptor element in DescriptorsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CRC_DescriptorSync ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_DescriptorSync ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_DescriptorSync ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CRC_DescriptorSync ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_DescriptorSync ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_DescriptorSync ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CRC_DescriptorSync ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CRC_DescriptorSync ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CRC_DescriptorSync ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CRC_DescriptorSync ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CRC_DescriptorSync MakeReadOnly() {
      descriptors_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CRC_DescriptorSync prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CRC_DescriptorSync, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CRC_DescriptorSync cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CRC_DescriptorSync result;
      
      private Msg_CRC_DescriptorSync PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CRC_DescriptorSync original = result;
          result = new Msg_CRC_DescriptorSync();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CRC_DescriptorSync MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.GM.Msg_CRC_DescriptorSync.Descriptor; }
      }
      
      public override Msg_CRC_DescriptorSync DefaultInstanceForType {
        get { return global::DashFire.GM.Msg_CRC_DescriptorSync.DefaultInstance; }
      }
      
      public override Msg_CRC_DescriptorSync BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CRC_DescriptorSync) {
          return MergeFrom((Msg_CRC_DescriptorSync) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CRC_DescriptorSync other) {
        if (other == global::DashFire.GM.Msg_CRC_DescriptorSync.DefaultInstance) return this;
        PrepareBuilder();
        if (other.descriptors_.Count != 0) {
          result.descriptors_.Add(other.descriptors_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRCDescriptorSyncFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRCDescriptorSyncFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.descriptors_, global::DashFire.GM.GMDescriptor.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::DashFire.GM.GMDescriptor> DescriptorsList {
        get { return PrepareBuilder().descriptors_; }
      }
      public int DescriptorsCount {
        get { return result.DescriptorsCount; }
      }
      public global::DashFire.GM.GMDescriptor GetDescriptors(int index) {
        return result.GetDescriptors(index);
      }
      public Builder SetDescriptors(int index, global::DashFire.GM.GMDescriptor value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.descriptors_[index] = value;
        return this;
      }
      public Builder SetDescriptors(int index, global::DashFire.GM.GMDescriptor.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.descriptors_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddDescriptors(global::DashFire.GM.GMDescriptor value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.descriptors_.Add(value);
        return this;
      }
      public Builder AddDescriptors(global::DashFire.GM.GMDescriptor.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.descriptors_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeDescriptors(scg::IEnumerable<global::DashFire.GM.GMDescriptor> values) {
        PrepareBuilder();
        result.descriptors_.Add(values);
        return this;
      }
      public Builder ClearDescriptors() {
        PrepareBuilder();
        result.descriptors_.Clear();
        return this;
      }
    }
    static Msg_CRC_DescriptorSync() {
      object.ReferenceEquals(global::DashFire.GM.GMCmdMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_CR_Execute : pb::GeneratedMessage<Msg_CR_Execute, Msg_CR_Execute.Builder> {
    private Msg_CR_Execute() { }
    private static readonly Msg_CR_Execute defaultInstance = new Msg_CR_Execute().MakeReadOnly();
    private static readonly string[] _msgCRExecuteFieldNames = new string[] { "cmd_line", "index" };
    private static readonly uint[] _msgCRExecuteFieldTags = new uint[] { 18, 8 };
    public static Msg_CR_Execute DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_CR_Execute DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_CR_Execute ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.GM.GMCmdMsg.internal__static_DashFire_GM_Msg_CR_Execute__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_CR_Execute, Msg_CR_Execute.Builder> InternalFieldAccessors {
      get { return global::DashFire.GM.GMCmdMsg.internal__static_DashFire_GM_Msg_CR_Execute__FieldAccessorTable; }
    }
    
    public const int IndexFieldNumber = 1;
    private bool hasIndex;
    private ulong index_;
    public bool HasIndex {
      get { return hasIndex; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Index {
      get { return index_; }
    }
    
    public const int CmdLineFieldNumber = 2;
    private bool hasCmdLine;
    private string cmdLine_ = "";
    public bool HasCmdLine {
      get { return hasCmdLine; }
    }
    public string CmdLine {
      get { return cmdLine_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasIndex) return false;
        if (!hasCmdLine) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgCRExecuteFieldNames;
      if (hasIndex) {
        output.WriteUInt64(1, field_names[1], Index);
      }
      if (hasCmdLine) {
        output.WriteString(2, field_names[0], CmdLine);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasIndex) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, Index);
        }
        if (hasCmdLine) {
          size += pb::CodedOutputStream.ComputeStringSize(2, CmdLine);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_CR_Execute ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CR_Execute ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_Execute ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_CR_Execute ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_Execute ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CR_Execute ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_CR_Execute ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_CR_Execute ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_CR_Execute ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_CR_Execute ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_CR_Execute MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_CR_Execute prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_CR_Execute, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_CR_Execute cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_CR_Execute result;
      
      private Msg_CR_Execute PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_CR_Execute original = result;
          result = new Msg_CR_Execute();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_CR_Execute MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.GM.Msg_CR_Execute.Descriptor; }
      }
      
      public override Msg_CR_Execute DefaultInstanceForType {
        get { return global::DashFire.GM.Msg_CR_Execute.DefaultInstance; }
      }
      
      public override Msg_CR_Execute BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_CR_Execute) {
          return MergeFrom((Msg_CR_Execute) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_CR_Execute other) {
        if (other == global::DashFire.GM.Msg_CR_Execute.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIndex) {
          Index = other.Index;
        }
        if (other.HasCmdLine) {
          CmdLine = other.CmdLine;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgCRExecuteFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgCRExecuteFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasIndex = input.ReadUInt64(ref result.index_);
              break;
            }
            case 18: {
              result.hasCmdLine = input.ReadString(ref result.cmdLine_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIndex {
        get { return result.hasIndex; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Index {
        get { return result.Index; }
        set { SetIndex(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetIndex(ulong value) {
        PrepareBuilder();
        result.hasIndex = true;
        result.index_ = value;
        return this;
      }
      public Builder ClearIndex() {
        PrepareBuilder();
        result.hasIndex = false;
        result.index_ = 0UL;
        return this;
      }
      
      public bool HasCmdLine {
        get { return result.hasCmdLine; }
      }
      public string CmdLine {
        get { return result.CmdLine; }
        set { SetCmdLine(value); }
      }
      public Builder SetCmdLine(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCmdLine = true;
        result.cmdLine_ = value;
        return this;
      }
      public Builder ClearCmdLine() {
        PrepareBuilder();
        result.hasCmdLine = false;
        result.cmdLine_ = "";
        return this;
      }
    }
    static Msg_CR_Execute() {
      object.ReferenceEquals(global::DashFire.GM.GMCmdMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Msg_RC_ExecuteResult : pb::GeneratedMessage<Msg_RC_ExecuteResult, Msg_RC_ExecuteResult.Builder> {
    private Msg_RC_ExecuteResult() { }
    private static readonly Msg_RC_ExecuteResult defaultInstance = new Msg_RC_ExecuteResult().MakeReadOnly();
    private static readonly string[] _msgRCExecuteResultFieldNames = new string[] { "error", "index", "result" };
    private static readonly uint[] _msgRCExecuteResultFieldTags = new uint[] { 18, 8, 26 };
    public static Msg_RC_ExecuteResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Msg_RC_ExecuteResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Msg_RC_ExecuteResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DashFire.GM.GMCmdMsg.internal__static_DashFire_GM_Msg_RC_ExecuteResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Msg_RC_ExecuteResult, Msg_RC_ExecuteResult.Builder> InternalFieldAccessors {
      get { return global::DashFire.GM.GMCmdMsg.internal__static_DashFire_GM_Msg_RC_ExecuteResult__FieldAccessorTable; }
    }
    
    public const int IndexFieldNumber = 1;
    private bool hasIndex;
    private ulong index_;
    public bool HasIndex {
      get { return hasIndex; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Index {
      get { return index_; }
    }
    
    public const int ErrorFieldNumber = 2;
    private bool hasError;
    private string error_ = "";
    public bool HasError {
      get { return hasError; }
    }
    public string Error {
      get { return error_; }
    }
    
    public const int ResultFieldNumber = 3;
    private bool hasResult;
    private string result_ = "";
    public bool HasResult {
      get { return hasResult; }
    }
    public string Result {
      get { return result_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasIndex) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRCExecuteResultFieldNames;
      if (hasIndex) {
        output.WriteUInt64(1, field_names[1], Index);
      }
      if (hasError) {
        output.WriteString(2, field_names[0], Error);
      }
      if (hasResult) {
        output.WriteString(3, field_names[2], Result);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasIndex) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, Index);
        }
        if (hasError) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Error);
        }
        if (hasResult) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Result);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Msg_RC_ExecuteResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_ExecuteResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_ExecuteResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Msg_RC_ExecuteResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_ExecuteResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_ExecuteResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Msg_RC_ExecuteResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Msg_RC_ExecuteResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Msg_RC_ExecuteResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Msg_RC_ExecuteResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Msg_RC_ExecuteResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Msg_RC_ExecuteResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Msg_RC_ExecuteResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Msg_RC_ExecuteResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Msg_RC_ExecuteResult result;
      
      private Msg_RC_ExecuteResult PrepareBuilder() {
        if (resultIsReadOnly) {
          Msg_RC_ExecuteResult original = result;
          result = new Msg_RC_ExecuteResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Msg_RC_ExecuteResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DashFire.GM.Msg_RC_ExecuteResult.Descriptor; }
      }
      
      public override Msg_RC_ExecuteResult DefaultInstanceForType {
        get { return global::DashFire.GM.Msg_RC_ExecuteResult.DefaultInstance; }
      }
      
      public override Msg_RC_ExecuteResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Msg_RC_ExecuteResult) {
          return MergeFrom((Msg_RC_ExecuteResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Msg_RC_ExecuteResult other) {
        if (other == global::DashFire.GM.Msg_RC_ExecuteResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIndex) {
          Index = other.Index;
        }
        if (other.HasError) {
          Error = other.Error;
        }
        if (other.HasResult) {
          Result = other.Result;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRCExecuteResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRCExecuteResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasIndex = input.ReadUInt64(ref result.index_);
              break;
            }
            case 18: {
              result.hasError = input.ReadString(ref result.error_);
              break;
            }
            case 26: {
              result.hasResult = input.ReadString(ref result.result_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIndex {
        get { return result.hasIndex; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Index {
        get { return result.Index; }
        set { SetIndex(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetIndex(ulong value) {
        PrepareBuilder();
        result.hasIndex = true;
        result.index_ = value;
        return this;
      }
      public Builder ClearIndex() {
        PrepareBuilder();
        result.hasIndex = false;
        result.index_ = 0UL;
        return this;
      }
      
      public bool HasError {
        get { return result.hasError; }
      }
      public string Error {
        get { return result.Error; }
        set { SetError(value); }
      }
      public Builder SetError(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasError = true;
        result.error_ = value;
        return this;
      }
      public Builder ClearError() {
        PrepareBuilder();
        result.hasError = false;
        result.error_ = "";
        return this;
      }
      
      public bool HasResult {
        get { return result.hasResult; }
      }
      public string Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = "";
        return this;
      }
    }
    static Msg_RC_ExecuteResult() {
      object.ReferenceEquals(global::DashFire.GM.GMCmdMsg.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
